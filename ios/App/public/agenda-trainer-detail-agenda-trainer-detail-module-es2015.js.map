{"version":3,"sources":["./src/app/pages/agenda-trainer/agenda-trainer-detail/agenda-trainer-detail-routing.module.ts","./src/app/pages/agenda-trainer/agenda-trainer-detail/agenda-trainer-detail.page.ts","./src/app/pages/agenda-trainer/agenda-trainer-detail/agenda-trainer-detail.page.html","./src/app/pages/agenda-trainer/agenda-trainer-detail/agenda-trainer-detail.module.ts"],"names":[],"mappings":"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","file":"agenda-trainer-detail-agenda-trainer-detail-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AgendaTrainerDetailPage } from './agenda-trainer-detail.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AgendaTrainerDetailPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AgendaTrainerDetailPageRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AlertController, LoadingController, NavController, ToastController } from '@ionic/angular';\r\nimport * as moment from 'moment';\r\nimport { Corso } from 'src/app/models/corso.model';\r\nimport { CorsoPresenze } from 'src/app/models/corsopresenze.model';\r\nimport { PianificazioneCorso } from 'src/app/models/pianificazionecorso.model';\r\nimport { StatoIscrizione, TipoSocieta } from 'src/app/models/valuelist.model';\r\nimport { StartService } from 'src/app/services/start.service';\r\n\r\n@Component({\r\n  selector: 'app-agenda-trainer-detail',\r\n  templateUrl: './agenda-trainer-detail.page.html',\r\n  styleUrls: ['./agenda-trainer-detail.page.scss'],\r\n})\r\nexport class AgendaTrainerDetailPage implements OnInit {\r\n\r\n  listPresenze : CorsoPresenze[] = [];\r\n  listPresenzeConfermate: CorsoPresenze[] = [];\r\n  listPresenzeInProva: CorsoPresenze[] = [];\r\n\r\n  selectedPianificazione: PianificazioneCorso = new PianificazioneCorso();\r\n  selectedCorso: Corso;\r\n\r\n  gapAggiornamentoPresenze: number;\r\n\r\n  idPianificazione: string;\r\n  idCorso: string;\r\n\r\n  //il tipo di società sportiva\r\n  tipoSocieta: TipoSocieta;\r\n\r\n\r\n\r\n  TipoSocieta: typeof TipoSocieta = TipoSocieta;\r\n\r\n  isDesktop: boolean;\r\n\r\n  showTabs = true;\r\n\r\n  selectedSegment= null;\r\n  \r\n\r\n  \r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private navController: NavController,\r\n    private startService: StartService,\r\n    private toastController: ToastController,\r\n    private loadingController: LoadingController,\r\n    private alertController: AlertController\r\n  ) \r\n    {\r\n      //recupero il tipo di società\r\n      this.tipoSocieta = this.startService.actualStartConfig.gruppo.TIPOGRUPPO;\r\n\r\n      //capisco se sono su desktop\r\n      this.isDesktop = startService.isDesktop;\r\n\r\n      this.gapAggiornamentoPresenze = startService.areaSelectedValue.APPGAPOREPRESENZE;\r\n      \r\n    }\r\n\r\n  ngOnInit() {\r\n\r\n    //recupero l'id del corso\r\n    this.activatedRoute.paramMap.subscribe(params => {\r\n\r\n      //recupero id della pianificazione\r\n      this.idPianificazione = params['params']['pianificazioneCorsoId'];\r\n      \r\n\r\n      if(this.startService.getPianificazioneTrainerById(this.idPianificazione)){\r\n        \r\n        //se c'è la pianificazione, la recupero tramite l'id\r\n        this.selectedPianificazione =this.startService.getPianificazioneTrainerById(this.idPianificazione);\r\n      }\r\n      else{\r\n\r\n        this.navController.navigateRoot('/home');\r\n      }\r\n\r\n      //Posso andare avanti\r\n\r\n      //recupero l'id del corso\r\n      this.idCorso = this.selectedPianificazione.IDCORSO;\r\n\r\n      //richiedo la lista degli allievi (inserendola nel documento pianificazione) \r\n      this.startService.insertPresenzeIntoPianificazione(this.selectedPianificazione)\r\n      .then(() => {\r\n\r\n\r\n        //ora ho il documento pianificazione con anche le presenze, posso metterle anche in \"listpresenze\"\r\n        this.listPresenze  = this.selectedPianificazione.CORSOPRESENZE;\r\n        this.dividiIscrizioni();\r\n        \r\n      })\r\n    })\r\n  }\r\n\r\n  onClickElement(elem: CorsoPresenze){\r\n    if (elem.PRESENTE == null || elem.PRESENTE == undefined){\r\n      elem.PRESENTE = true;\r\n    }\r\n    else{\r\n      elem.PRESENTE = !elem.PRESENTE;\r\n    }\r\n\r\n    if (this.tuttiPresenti){\r\n      this.selectedSegment = 'presente';\r\n    }\r\n    else if (this.tuttiAssenti){\r\n      this.selectedSegment = 'assente';\r\n    }\r\n    else{\r\n\r\n      this.selectedSegment = null;\r\n    }\r\n\r\n  }\r\n\r\n  onSubmit(){\r\n\r\n    if(this.selectedPianificazione.isModified(2)){\r\n      \r\n      this.loadingController.create({\r\n        message: 'Caricamento',\r\n        spinner: 'circular',\r\n        backdropDismiss: true\r\n      })\r\n      .then(elLoading => {\r\n  \r\n        elLoading.present();\r\n        this.startService.requestUpdatePresenze(this.selectedPianificazione)\r\n        .then(response => {\r\n  \r\n          elLoading.dismiss();\r\n          if (response.result){\r\n            //è andato tutto bene\r\n            this.showMessage('Presenze aggiornate')\r\n            this.goBack();\r\n\r\n          }\r\n  \r\n          else{\r\n  \r\n            //errore dal server\r\n            console.log(response);\r\n            this.showMessage(response.message);\r\n  \r\n          }\r\n          \r\n        })\r\n        .catch((error) => {\r\n  \r\n          elLoading.dismiss();\r\n          console.log(error)\r\n          this.showMessage('Errore di connessione');\r\n        })\r\n      })\r\n      \r\n    }\r\n    \r\n    else{\r\n      this.goBack();\r\n\r\n    }\r\n\r\n  }\r\n\r\n    getColoreCertificato(presenza: CorsoPresenze): string{\r\n    let today =moment(new Date())\r\n    let color: string;\r\n    if (presenza.DATACERTIFICATOMEDICO){\r\n      \r\n      let scadenza = moment(presenza.DATACERTIFICATOMEDICO);\r\n      if (scadenza < today){\r\n        color = 'danger';\r\n      }\r\n      else if (scadenza < today.add(7, 'days')) {\r\n        color = 'warning';\r\n      }\r\n      else{\r\n        color = 'primary';\r\n      }\r\n    }\r\n    else{\r\n      color = 'danger';\r\n    }\r\n    return color;\r\n  }\r\n\r\n  //separa le iscrizioni in due liste (confermate e in prova)\r\n  dividiIscrizioni(){\r\n    this.listPresenzeConfermate = this.listPresenze.filter(element => {\r\n      return element.STATOISCRIZIONE == StatoIscrizione.confermata;\r\n    });\r\n\r\n    this.listPresenzeInProva = this.listPresenze.filter(element => {\r\n      return element.STATOISCRIZIONE == StatoIscrizione.inProva;\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * Visualizza un messaggio\r\n   */\r\n  showMessage(messaggio: string){\r\n    this.toastController.create({\r\n      message: messaggio,\r\n      duration: 3000\r\n    })\r\n    .then(elToast => {\r\n      elToast.present();\r\n    })\r\n  }\r\n\r\n\r\n  onGoBack(){\r\n\r\n    if (this.selectedPianificazione.isModified(2)){\r\n      this.alertController.create({\r\n        header: 'Vuoi davvero uscire?',\r\n        message: 'Se esci senza confermare, le presenze non verranno salvate',\r\n        buttons: [\r\n          {\r\n            text: 'Esci',\r\n            handler: () => {this.goBack()}\r\n          },\r\n          {\r\n            text: 'Rimani',\r\n            role: 'cancel'\r\n          }\r\n        ]\r\n      })\r\n      .then(elAlert => {\r\n        elAlert.present();\r\n      })\r\n    }\r\n    else{\r\n      this.goBack();\r\n    }\r\n  }\r\n\r\n  goBack(){\r\n    this.navController.pop()\r\n    .catch(() => {\r\n      this.navController.navigateRoot('/home');\r\n    })\r\n  }\r\n\r\n  onScroll(event:any){\r\n    if(event.detail.currentY < 5){\r\n      this.showTabs = true;\r\n    }\r\n    else{\r\n      if (event['detail']['deltaY'] > 20){\r\n        this.showTabs = false;\r\n      }\r\n      else if (event['detail']['deltaY'] < -20){\r\n        this.showTabs = true;\r\n      }\r\n    }  \r\n  }\r\n\r\n  setAll(presente: boolean){\r\n    this.listPresenze.forEach(elem => {\r\n      elem.PRESENTE = presente;\r\n    })\r\n  }\r\n\r\n  onChangeSegment(event: any){\r\n    \r\n\r\n\r\n    if(event['detail']['value'] == 'presente'){\r\n      this.setAll(true);\r\n    }\r\n    else if (event['detail']['value'] == 'assente'){\r\n      this.setAll(false);\r\n    }\r\n    \r\n  }\r\n\r\n  get tuttiPresenti(): boolean{\r\n    let tuttiPresenti: boolean = true;\r\n    this.listPresenze.forEach(elem => {\r\n      if (!elem.PRESENTE){\r\n        tuttiPresenti = false;\r\n      }\r\n    })\r\n    return tuttiPresenti;\r\n  }\r\n\r\n\r\n  get tuttiAssenti(): boolean{\r\n    let tuttiAssenti: boolean = true;\r\n    this.listPresenze.forEach(elem => {\r\n      if (elem.PRESENTE){\r\n        tuttiAssenti = false;\r\n      }\r\n    })\r\n    return tuttiAssenti;\r\n  }\r\n\r\n\r\n}\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-button (click)=\"onGoBack()\" fill=\"clear\" >\r\n        <ion-icon name=\"arrow-back\"></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n    <ion-title>Presenze</ion-title>\r\n  </ion-toolbar>\r\n  <ion-toolbar *ngIf=\"showTabs\" mode=\"md\">\r\n    <ion-segment [disabled]=\"!selectedPianificazione.canUpdatePresenze(gapAggiornamentoPresenze)\" id=\"segment\" [(ngModel)]=\"selectedSegment\" (ionChange)=\"onChangeSegment($event)\" color=\"primary\"  >\r\n      <ion-segment-button value=\"presente\" fill=\"outline\" layout=\"icon-start\">\r\n        <ion-icon color=\"primary\" name=\"thumbs-up\"></ion-icon>\r\n        <ion-label>Tutti presenti</ion-label>\r\n      </ion-segment-button >\r\n      <ion-segment-button value=\"assente\" layout=\"icon-start\">\r\n        <ion-icon color=\"primary\" name=\"thumbs-down\"></ion-icon>\r\n        <ion-label>Tutti assenti</ion-label>\r\n      </ion-segment-button>\r\n    </ion-segment>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content scrolleEvents (ionScroll)=\"onScroll($event)\">\r\n  <div style=\"height: 1vh\" ></div>\r\n  <div class=\"ion-no-padding div-header\">\r\n    <ion-item lines=\"none\" color=\"light\">\r\n      <ion-icon slot=\"start\" name=\"school-outline\" color=\"primary\">\r\n      </ion-icon>\r\n      <ion-label class=\"ion-text-wrap\">\r\n        <h2>{{selectedPianificazione.DATAORAINIZIO | date: 'EEEE dd/MM/yyyy '}}</h2>\r\n        <h2>{{selectedPianificazione.DATAORAINIZIO | date: 'H.mm'}} - {{selectedPianificazione.DATAORAFINE | date: 'H.mm'}}</h2>\r\n        <h1>{{selectedPianificazione['_DENOMINAZIONE_Corso']}}</h1>\r\n        <p>{{(selectedPianificazione['_DENOMINAZIONE_Location'] | titlecase) + ' - ' + (selectedPianificazione['_DENOMINAZIONE_Campo'] | titlecase)}}</p>\r\n      </ion-label>\r\n    </ion-item>\r\n\r\n  </div>\r\n\r\n  <div class=\"ion-padding-horizontal info\">\r\n    \r\n    <p>\r\n      <ion-icon name=\"information-circle-outline\" color=\"primary\"></ion-icon> \r\n      {{selectedPianificazione.msgCanUpdatePresenze(gapAggiornamentoPresenze)}}\r\n    </p>\r\n\r\n  </div>\r\n\r\n\r\n  <ion-list>\r\n  <!-- Iscritti confermati -->\r\n    <ion-item-group *ngIf=\"listPresenzeConfermate.length > 0\">\r\n      <ion-item-divider color=\"light\">\r\n          <ion-label>\r\n            Partecipanti\r\n          </ion-label>\r\n      </ion-item-divider>\r\n      <ion-item\r\n        *ngFor=\"let presenza of listPresenzeConfermate\" \r\n        [button]=\"selectedPianificazione.canUpdatePresenze(gapAggiornamentoPresenze)\" \r\n        (click)=\"selectedPianificazione.canUpdatePresenze(gapAggiornamentoPresenze)? onClickElement(presenza) : {}\"\r\n      >\r\n        <ion-icon *ngIf=\"presenza.PRESENTE==true\" slot=\"start\" name=\"thumbs-up-outline\" color=\"primary\"></ion-icon>\r\n        <ion-icon *ngIf=\"presenza.PRESENTE==false\" slot=\"start\" name=\"thumbs-down-outline\" color=\"danger\"></ion-icon>\r\n        <ion-icon *ngIf=\"presenza.PRESENTE != true && presenza.PRESENTE != false\" slot=\"start\" color=\"\" name=\"person-circle-outline\"></ion-icon>\r\n        <ion-label>\r\n          <h2>{{presenza.NOMINATIVO}}</h2>\r\n          <h4 *ngIf=\"this.tipoSocieta == TipoSocieta.sportiva\">\r\n            Certificato medico: \r\n            <ion-badge [color]=\"getColoreCertificato(presenza)\" class=\"custom-badge\"> \r\n              {{presenza.DATACERTIFICATOMEDICO? (presenza.DATACERTIFICATOMEDICO | date: 'dd/MM/yyyy') : ('Non consegnato')}}\r\n            </ion-badge> \r\n          </h4>\r\n        </ion-label>\r\n        <ion-badge\r\n          *ngIf=\"presenza.PRESENTE != null && presenza.PRESENTE != undefined && isDesktop\"\r\n          slot=\"end\"\r\n          [color]=\"presenza.PRESENTE? 'primary' : 'danger'\"\r\n        >\r\n        {{presenza.PRESENTE? 'Presente' : 'Assente'}}\r\n        </ion-badge>\r\n      </ion-item>\r\n    </ion-item-group>\r\n\r\n    <!-- Iscritti in prova -->\r\n    <ion-item-group *ngIf=\"listPresenzeInProva.length > 0\">\r\n      <ion-item-divider color=\"light\">\r\n        <ion-label>\r\n          In Prova\r\n        </ion-label>\r\n      </ion-item-divider>\r\n      <ion-item \r\n        *ngFor=\"let presenza of listPresenzeInProva\" \r\n        [button]=\"selectedPianificazione.canUpdatePresenze(gapAggiornamentoPresenze)\" \r\n        (click)=\"selectedPianificazione.canUpdatePresenze(gapAggiornamentoPresenze)? onClickElement(presenza) : {}\">\r\n        <ion-icon *ngIf=\"presenza.PRESENTE==true\" slot=\"start\" name=\"thumbs-up-outline\" color=\"primary\"></ion-icon>\r\n        <ion-icon *ngIf=\"presenza.PRESENTE==false\" slot=\"start\" name=\"thumbs-down-outline\" color=\"danger\"></ion-icon>\r\n        <ion-icon *ngIf=\"presenza.PRESENTE != true && presenza.PRESENTE != false\" slot=\"start\" color=\"\" name=\"person-circle-outline\"></ion-icon>\r\n        <ion-label>\r\n          <h2>{{presenza.NOMINATIVO}}</h2>\r\n          <h4 *ngIf=\"tipoSocieta == TipoSocieta.sportiva\">\r\n            Certificato medico: \r\n            <ion-badge [color]=\"getColoreCertificato(presenza)\" class=\"custom-badge\"> \r\n              {{presenza.DATACERTIFICATOMEDICO? (presenza.DATACERTIFICATOMEDICO | date: 'dd/MM/yyyy') : ('Non consegnato')}}\r\n            </ion-badge> \r\n          </h4>\r\n        </ion-label>\r\n        <ion-badge\r\n          *ngIf=\"presenza.PRESENTE != null && presenza.PRESENTE != undefined && isDesktop\"\r\n          slot=\"end\"\r\n          [color]=\"presenza.PRESENTE? 'primary' : 'danger'\"\r\n        >\r\n        {{presenza.PRESENTE? 'Presente' : 'Assente'}}\r\n        </ion-badge>\r\n      </ion-item>\r\n    </ion-item-group>\r\n\r\n    <!-- Note istruttore -->\r\n    <ion-item-group class=\"notes\" >\r\n      <ion-item-divider color=\"light\">\r\n        <ion-label>\r\n          Note per la segreteria\r\n        </ion-label>\r\n      </ion-item-divider>\r\n      <ion-item>\r\n        <ion-icon slot=\"start\" name=\"pencil-outline\"></ion-icon>\r\n        <ion-textarea [disabled]=\"!selectedPianificazione.canUpdatePresenze(gapAggiornamentoPresenze)\" placeholder=\"Inserisci una nota\"  [(ngModel)]=\"selectedPianificazione.NOTETRAINER\" maxlength=\"200\"></ion-textarea>      \r\n      </ion-item>   \r\n    </ion-item-group>\r\n\r\n    <!-- Note segreteria -->\r\n    <ion-item-group class=\"notes\" *ngIf=\"selectedPianificazione.NOTEADMIN && selectedPianificazione.NOTEADMIN.length > 0\">  \r\n      <ion-item-divider color=\"light\">\r\n        <ion-label>\r\n          Note dalla segreteria\r\n        </ion-label>\r\n      </ion-item-divider>\r\n      <ion-item>\r\n        <ion-icon slot=\"start\" name=\"pencil-outline\"></ion-icon>\r\n        <ion-label class=\"ion-text-wrap\">\r\n          <p>\r\n            {{selectedPianificazione.NOTEADMIN}}\r\n          </p>\r\n        </ion-label>\r\n      </ion-item>   \r\n    </ion-item-group>\r\n  </ion-list>\r\n</ion-content>\r\n\r\n<ion-footer>\r\n  <ion-button [disabled]=\"!selectedPianificazione.canUpdatePresenze(gapAggiornamentoPresenze)\" color=\"primary\" expand=\"block\" (click)=\"onSubmit()\">\r\n    Conferma\r\n  </ion-button>\r\n</ion-footer>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AgendaTrainerDetailPageRoutingModule } from './agenda-trainer-detail-routing.module';\r\n\r\nimport { AgendaTrainerDetailPage } from './agenda-trainer-detail.page';\r\nimport { TipoSocieta } from 'src/app/models/valuelist.model';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    AgendaTrainerDetailPageRoutingModule\r\n  ],\r\n  declarations: [AgendaTrainerDetailPage]\r\n})\r\nexport class AgendaTrainerDetailPageModule {}\r\n"],"sourceRoot":"webpack:///"}