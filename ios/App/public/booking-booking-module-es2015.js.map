{"version":3,"sources":["./src/app/pages/location/booking/bookingsummary/bookingsummary.module.ts","./src/app/pages/location/booking/booking.module.ts","./src/app/pages/location/booking/bookingsummary/bookingsummary-routing.module.ts","./src/app/pages/payment/payment-routing.module.ts","./src/app/pages/location/booking/booking.page.ts","./src/app/pages/location/booking/booking.page.html","./src/app/pages/location/booking/bookingsummary/bookingsummary.page.ts","./src/app/pages/location/booking/bookingsummary/bookingsummary.page.html","./src/app/pages/payment/payment.module.ts","./src/app/pages/location/booking/booking-routing.module.ts"],"names":[],"mappings":"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","file":"booking-booking-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { BookingsummaryPageRoutingModule } from './bookingsummary-routing.module';\r\nimport { PaymentChooseComponent } from 'src/app/shared/components/payment-choose/payment-choose.component';\r\n\r\n\r\nimport { BookingsummaryPage } from './bookingsummary.page';\r\nimport { PaypalPageModule } from '../../../payment/payment.module';\r\nimport { PaymentPage } from '../../../payment/payment.page';\r\nimport { SharedComponentsModule } from 'src/app/shared/components/shared-components.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    BookingsummaryPageRoutingModule,\r\n    \r\n    PaypalPageModule,\r\n    SharedComponentsModule\r\n  ],\r\n  declarations: [BookingsummaryPage],\r\n  entryComponents:[PaymentChooseComponent, PaymentPage],\r\n  exports:[BookingsummaryPage]\r\n})\r\nexport class BookingsummaryPageModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { BookingPageRoutingModule } from './booking-routing.module';\r\n\r\nimport { BookingPage } from './booking.page';\r\n\r\nimport { BookingsummaryPage } from './bookingsummary/bookingsummary.page';\r\nimport{ BookingsummaryPageModule } from './bookingsummary/bookingsummary.module'\r\nimport { VerifyPageModule } from 'src/app/pages/auth/verify/verify.module'\r\nimport { VerifyPage } from 'src/app/pages/auth/verify/verify.page'\r\nimport { SharedComponentsModule } from 'src/app/shared/components/shared-components.module';\r\nimport { NewLoginPage } from '../../auth/new-login/new-login.page'\r\nimport { NewLoginPageModule } from '../../auth/new-login/new-login.module'\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IonicModule,\r\n    BookingPageRoutingModule,\r\n    BookingsummaryPageModule,\r\n    VerifyPageModule,\r\n    SharedComponentsModule, \r\n    NewLoginPageModule   \r\n  ],\r\n  declarations: [BookingPage],\r\n  entryComponents: [BookingsummaryPage, VerifyPage, NewLoginPage]\r\n})\r\nexport class BookingPageModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { BookingsummaryPage } from './bookingsummary.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BookingsummaryPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class BookingsummaryPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PaymentPage } from './payment.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PaymentPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PaypalPageRoutingModule {}\r\n","import { Component, OnInit, OnDestroy, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { StartService } from 'src/app/services/start.service';\r\nimport { NavController, IonSlides, LoadingController, ToastController, ModalController, ActionSheetController, AlertController} from '@ionic/angular';\r\nimport { Location } from 'src/app/models/location.model';\r\nimport { throwError, Subscription } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Campo } from 'src/app/models/campo.model';\r\nimport { Utente, ParamsVerifica } from 'src/app/models/utente.model';\r\nimport { SlotWeek } from 'src/app/models/imdb/slotweek.model';\r\nimport { SlotDay } from 'src/app/models/imdb/slotday.model';\r\nimport { SlotTime } from 'src/app/models/imdb/slottime.model';\r\nimport { PrenotazionePianificazione } from 'src/app/models/prenotazionepianificazione.model';\r\nimport { Prenotazione } from 'src/app/models/prenotazione.model';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { BookingsummaryPage } from './bookingsummary/bookingsummary.page';\r\nimport { Sport } from 'src/app/models/sport.model';\r\nimport { NewLoginPage } from 'src/app/pages/auth/new-login/new-login.page'\r\nimport { VerifyPage } from '../../auth/verify/verify.page';\r\nimport { StatoSlot } from 'src/app/models/valuelist.model';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-booking',\r\n  templateUrl: './booking.page.html',\r\n  styleUrls: ['./booking.page.scss'],\r\n})\r\nexport class BookingPage implements OnInit,  OnDestroy {\r\n\r\n  idLocation = '';\r\n  versionBooking = 'manual'; //Versione di Booking (Automatico, Manuale)\r\n\r\n  listLocationSport: Sport[] = [];  //Lista Sport presenti sulla Location\r\n  subListLocationSport: Subscription;\r\n\r\n  selectedLocation: Location;\r\n  subSelectedLocation: Subscription;\r\n  selectedCampo: Campo;\r\n\r\n  userLogged: boolean;      //TRUE-FALSE: Utente Loggato\r\n  subUserLogged: Subscription;  \r\n  \r\n  docUtente: Utente;\r\n  subDocUtente: Subscription; \r\n\r\n  ricevuti: boolean; //Dati Ricevuti\r\n  bookable: boolean = false; //Ho ricevuto dei campi, quindi potrei effettuare prenotazioni\r\n\r\n  templateWeekSlot: SlotWeek = new SlotWeek(); //Template con gli slotTime settimanali relativi alla location\r\n  \r\n  actualBookDay = new Date(); //Giorno di Pianificazione\r\n  actualSlotDay: SlotDay; //E' lo Slot Day attualmente in visualizzazione\r\n  actualCaptionButtonSelected = ''; //E' il testo visualizato sul bottone selezionato\r\n  \r\n  //Prenotazione Attiva\r\n  activePrenotazione: Prenotazione;\r\n  //Singola Data Pianificata\r\n  actualPlanning: PrenotazionePianificazione = new PrenotazionePianificazione(); //E' la pianificazione attuale che l'utente vorrebbe prenotare\r\n  \r\n  subActualPlanning: Subscription;\r\n  subActualSlotDay: Subscription;\r\n  subActivePrenotazione: Subscription;\r\n\r\n  selectedSport: Sport; //lo sport selezionato\r\n\r\n  availableFields: Campo[]=[]; //un array dei soli campi per lo sport selezionato\r\n\r\n  @ViewChild('sliderCampi')sliderCampi: IonSlides;\r\n  indexCount: number = 0;\r\n  showExtraToolbar = true;\r\n  isOnAppleSystem = false; //Sta girando su sistemi IOS (Introdotto per animare diversamente la toolbar Hide)\r\n  \r\n\r\n  constructor(private router: ActivatedRoute, \r\n              private startService:StartService,\r\n              private navController: NavController,\r\n              private loadingController: LoadingController,\r\n              private toastCtrl: ToastController,\r\n              private modalCtrl: ModalController,\r\n              private actionSheetController: ActionSheetController,\r\n              private alertController: AlertController) { \r\n\r\n\r\n    //Creo un documento di Pianificazione\r\n    this.actualPlanning = new PrenotazionePianificazione;\r\n    \r\n    this.myDebug('Constructor Booking Page');\r\n    this.myDebug(this.actualPlanning);\r\n    //Ricavo la piattaforma di esecuzione\r\n    //in HTML sul content viene usata una direttiva per una animazione diversa della toolbar in Ios\r\n    this.isOnAppleSystem = this.startService.isOnAppleSystem;\r\n\r\n  }\r\n  \r\n// Problematica dell'animazione toolbar\r\n//https://github.com/ionic-team/ionic-framework/issues/17728\r\n//https://github.com/ionic-team/ionic-framework/pull/17224\r\n\r\n\r\n  /**\r\n   * \r\n   * @param element Element \r\n   */\r\n  myDebug(element) {\r\n    let actDebug = false;\r\n    if (actDebug) {\r\n      console.log(element);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Crea l'array con i soli Campi dove è possibile effettuare l'attività selezionata\r\n   */\r\n  updateAvailableFields()\r\n  {\r\n     if (this.selectedLocation) {\r\n      if (this.selectedLocation.CAMPO) {\r\n\r\n        this.availableFields = this.selectedLocation.CAMPO.filter( el=> {\r\n          let trovato =false;\r\n\r\n          if (this.selectedSport) {\r\n\r\n            for (const iterator of el.CAMPOSPORT) {\r\n              if (iterator.IDSPORT==this.selectedSport.ID)\r\n              {\r\n                trovato=true;\r\n                break;\r\n              }\r\n            }\r\n\r\n          }\r\n          \r\n          return trovato;\r\n        });\r\n\r\n\r\n      }\r\n     }\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    this.loadingController.create({\r\n      message: 'Caricamento',\r\n      spinner: 'circular',\r\n      backdropDismiss: true\r\n\r\n    }).then(loading=>{\r\n\r\n        this.myDebug('Presentazione Loading');\r\n\r\n        loading.present()\r\n        this.ricevuti = false;\r\n        this.bookable = false;\r\n      \r\n\r\n        //Controllo dei parametri del router\r\n      this.router.paramMap.subscribe(param => {\r\n        \r\n        this.myDebug('Controllo Routing locationId');\r\n        \r\n        if (param.has('locationId')) {\r\n          \r\n          this.myDebug('locationId trovata');\r\n\r\n          //Location sulla barra\r\n          this.idLocation = param.get('locationId');\r\n          \r\n          if (this.idLocation) {\r\n\r\n            this.myDebug('locationId: ' + this.idLocation);\r\n            \r\n            //Chiedo al server gli Sport praticati nella location\r\n            this.myDebug('Richiesta al server Sport Praticati nella location ');\r\n            this.startService.requestLocationSport(this.idLocation);\r\n            \r\n            //Mi sottoscrivo alla ricezione degli Sport\r\n            this.sottoscrizioneListaSport();\r\n          \r\n            // Chiedo al server Location, Campi e CampiSport (3 Livelli)\r\n            this.myDebug('Richiesta al server Location, Campi e CampiSport ');\r\n\r\n            this.startService.requestLocationByID(this.idLocation, 3)\r\n              .then(()=>{\r\n                  this.ricevuti=true;\r\n                  loading.dismiss();\r\n              },()=>{\r\n                  loading.dismiss();\r\n                  this.showMessage('Errore di connessione');\r\n            });\r\n\r\n            //Mi sottoscrivo alla ricezione\r\n            this.sottoscrizioneLocationCampi();\r\n          \r\n          \r\n            //Controllo dell'utente loggato\r\n            this.subUserLogged = this.startService.utenteLogged.subscribe(element => {\r\n              this.userLogged = element;\r\n            });\r\n            \r\n            //Richiedo lo User\r\n            this.subDocUtente = this.startService.utente.subscribe(element => {\r\n              this.docUtente = element;\r\n            });\r\n            \r\n            // Mi metto in ascolto di variazioni di Slot attuale\r\n            this.subActualSlotDay = this.startService.docOccupazione.subscribe(elActualDay => {\r\n              this.myDebug('Variazione Slot Day');\r\n              this.actualSlotDay = elActualDay;\r\n              this.myDebug(elActualDay);\r\n            });\r\n            \r\n            //Ascolto documento di Prenotazione\r\n            //Sia la prima volta che entra nel OnInit\r\n            //Esegue tutte le volte che la prenotazione cambia\r\n            this.subActivePrenotazione = this.startService.activePrenotazione.subscribe(elPrenotazione => {\r\n              this.activePrenotazione = elPrenotazione;\r\n            });\r\n          \r\n        }\r\n        else {\r\n          // Dico che non posso prenotare\r\n          this.bookable = false;\r\n          this.ricevuti = true;\r\n        }\r\n        \r\n      }\r\n      else {\r\n        //Rimando alla HOME\r\n        this.navController.navigateForward(['/']);\r\n      }\r\n\r\n    })\r\n});\r\n    \r\n  }\r\n\r\n\r\n  \r\n  ngOnDestroy() {\r\n    \r\n    \r\n    if (this.subSelectedLocation) {\r\n      this.subSelectedLocation.unsubscribe();\r\n    }\r\n\r\n    if (this.subUserLogged) {\r\n      this.subUserLogged.unsubscribe();\r\n    }\r\n\r\n    if (this.subDocUtente) {\r\n      this.subDocUtente.unsubscribe();\r\n    }    \r\n\r\n    if (this.subActualSlotDay) {\r\n      this.subActualSlotDay.unsubscribe();\r\n    }\r\n\r\n    if (this.subActivePrenotazione) {\r\n\r\n      this.subActivePrenotazione.unsubscribe();\r\n    }   \r\n    \r\n    if (this.subListLocationSport) {\r\n      this.subListLocationSport.unsubscribe();\r\n    }\r\n\r\n\r\n  }\r\n\r\n  /*\r\n  Sottoscrivo alla ricezione di Location e Campi\r\n  */\r\n  private sottoscrizioneLocationCampi() {\r\n\r\n    this.myDebug('Sottoscrizione Location, Campi e CampiSport ');\r\n    this.subSelectedLocation = this.startService.activeLocation\r\n      .subscribe(dataLocation => {\r\n\r\n        // Chiedo la Location\r\n        this.selectedLocation = dataLocation;\r\n\r\n        /* Se ho la location */\r\n        if (this.selectedLocation && !this.selectedLocation.do_inserted && this.selectedLocation.CAMPO.length !== 0) {\r\n\r\n          this.myDebug('Ricezione Location, Campi e CampiSport ');\r\n\r\n          //RECUPERO IL TEMPLATE WEEK SLOT TIME\r\n          this.getTemplateWeek(this.selectedLocation);\r\n\r\n          //Recupero Campi, e Occupazioni\r\n          this.onRefresh();\r\n\r\n        }\r\n        else {\r\n          if (this.selectedLocation && this.selectedLocation.CAMPO) {\r\n            this.myDebug('Location');\r\n            this.myDebug(this.selectedLocation);\r\n            this.myDebug(this.selectedLocation.CAMPO);\r\n          }\r\n          else {\r\n            this.myDebug('Non ho la location oppure i campi ')\r\n          }\r\n        }\r\n\r\n      });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Chiamata per sottoscriversi alla ricezione degli Sport praticati nella location\r\n   */\r\n  private sottoscrizioneListaSport() {\r\n\r\n    //Mi sottoscrivo alla ricezione degli Sport praticati\r\n    this.subListLocationSport = this.startService.listLocationSport\r\n          .subscribe(resultData => {\r\n\r\n\r\n\r\n                //Popolo Lista degli Sport\r\n                this.listLocationSport = resultData;\r\n\r\n                //Prendo il primo e lo seleziono\r\n                if (this.listLocationSport) {\r\n            \r\n                  if (this.listLocationSport.length !== 0) {\r\n                    this.selectedSport = this.listLocationSport[0];\r\n                  }\r\n                  else {\r\n                    this.selectedSport = undefined;\r\n                  }\r\n                }\r\n                else {\r\n                  this.selectedSport = undefined;\r\n                }\r\n\r\n                //Chiedo di eseguire il refresh dell'Interfaccia, dove recupero i campi legati allo sport e le occupazioni\r\n                this.onRefresh();\r\n            });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Manual o Auto\r\n   * @param value Modifica della versione\r\n   */\r\n  onChangeVersion(value: string) {\r\n    this.versionBooking = value;\r\n  }\r\n\r\n\r\n  /**\r\n   * Evento che occorre quando cambia lo Sport Selezionato\r\n   * 1) Attribuzione di una nuova collection di Campi\r\n   * 2) this.selectedCampo viene impostato al 1 Campo disponibile\r\n   * 3) Rielaborazione degli Slot e di tutto il resto\r\n   */\r\n  onRefresh() {\r\n    \r\n    \r\n\r\n    if (this.selectedSport) {\r\n\r\n      //this.selectedLocation è la Location, che contiene la Collection dei Campi, con dentro i CampiSport\r\n      this.availableFields = this.selectedLocation.getAvalaibleFields(this.selectedSport.ID);\r\n\r\n      //Seleziono come Campo il primo disponibile\r\n      if (this.availableFields.length !== 0) {\r\n        this.selectedCampo = this.availableFields[0];\r\n      }\r\n\r\n      if (this.selectedCampo) {\r\n\r\n        this.myDebug('Richiesto Refresh success, getOccupazioni');\r\n        this.bookable = (this.selectedCampo?true:false);\r\n\r\n        //Richiesta delle nuove occupazioni e impostazione nuova Pianificazione\r\n        this.getOccupazioni();\r\n        \r\n      }\r\n      else {\r\n        this.myDebug('Richiesto Refresh failed NO SELECTED CAMPO');\r\n      }\r\n    }\r\n    else {\r\n      this.myDebug('Richiesto Refresh failed NO SELECTED SPORT');\r\n    }\r\n\r\n\r\n  }\r\n\r\n  /**\r\n   * E' stato richiesta la modifica del campo Selezionato\r\n   * @param newCampo nuovo Campo\r\n   */\r\n  onChangeCampo(newCampo: Campo) {\r\n    this.selectedCampo = newCampo;\r\n    //Richiedo le occupazioni\r\n    this.getOccupazioni();\r\n  }\r\n\r\n  /**\r\n   * Ha cambiato il campo nello Slide\r\n   */\r\n  onDidChangeCampo(e: any) {\r\n    \r\n    //Indice Slide è Zero Base\r\n    this.sliderCampi.getActiveIndex().then((index: number) => {\r\n      \r\n      //Ricavo il campo selezionato\r\n      if (index <= this.availableFields.length) {\r\n\r\n        this.selectedCampo = this.availableFields[index];\r\n        //Richiedo le occupazioni\r\n        this.getOccupazioni();\r\n\r\n      }\r\n\r\n      \r\n    });\r\n    \r\n    \r\n  }\r\n\r\n  \r\n\r\n  /**\r\n   * E' stata selezionata un'altra data\r\n   * @param newDate Nuova Data\r\n   */\r\n  onChangeBookDay(newDate: Date) {\r\n    \r\n    this.actualBookDay = newDate;\r\n\r\n    //Richiedo le occupazioni\r\n    this.getOccupazioni();\r\n  }\r\n\r\n  /**\r\n   * Al cambio dello Sport devo rieseguire un Refresh della UI\r\n   * @param newSport Oggetto del Nuovo Sport\r\n   */\r\n  onChangeSport(newSport)\r\n  {\r\n    if (newSport) {\r\n      this.selectedSport=newSport;\r\n      this.onRefresh();\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  /**\r\n   * Recupera il template Week Slot Time per la generazione degli slot di prenotazioni\r\n   * @param docLocation Location prenotazione\r\n   */\r\n  getTemplateWeek(docLocation: Location) {\r\n    \r\n    this.templateWeekSlot = this.startService.getTemplateSlotWeek(docLocation);\r\n\r\n  }\r\n\r\n  /**\r\n   * Recupero le occupazioni quando\r\n   * 1) CAMBIA IL CAMPO\r\n   * 2) CAMBIA IL GIORNO\r\n   * \r\n   * Procedura: \r\n   * a) Viene cercato nel templateWeek lo SlotDay e viene applicata una copia a actualSlotDay\r\n   * b) Viene chiamato il servizio passando actualSlotDay\r\n   * c) il servizio chiama il server, e mi ritorna actualSlotDay come Observable\r\n   * \r\n   */\r\n  getOccupazioni() {\r\n    \r\n    //Step a) Chiedo al TemplateWeek una copia del Template di una Giornata (TRUE-> Chiedo di aggiornare la data su tutti i record figli SLOTTIME)\r\n    this.actualSlotDay = this.templateWeekSlot.getCopySlotDay(this.actualBookDay, true);\r\n    \r\n      \r\n    this.myDebug('Richiesta Slot Occupazioni');\r\n    \r\n    //Step b) Chiamo il servizio\r\n    this.startService.requestSlotOccupazioni(this.actualSlotDay, \r\n      this.selectedLocation, \r\n      this.selectedCampo, \r\n      this.actualBookDay)\r\n      \r\n      .then(() => {\r\n        //Per gli orario del centro saremmo aperti (come giornata)\r\n        if (this.actualSlotDay.APERTOCHIUSO == true) {\r\n          //Controlliamo se per caso è un giorno FESTIVO o di chiusura generale\r\n          //this.actualBookDay è il giorno\r\n          let isFestivita = this.startService.isFestivita(this.actualBookDay, \r\n                                                    this.selectedLocation.IDAREAOPERATIVA, \r\n                                                    this.selectedLocation.ID, \r\n                                                    this.selectedCampo.ID);\r\n          if (isFestivita) {\r\n            this.actualSlotDay.APERTOCHIUSO = false;\r\n          }\r\n          else {\r\n            this.actualSlotDay.APERTOCHIUSO = true;\r\n          }\r\n        }\r\n\r\n      });\r\n      \r\n      \r\n\r\n      \r\n    //Step c) Creo un nuovo oggetto di prenotazione\r\n    this.actualPlanning = new PrenotazionePianificazione;\r\n\r\n    //Ora tutto avviene in modalità asincrona\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  /**\r\n   * E' stato cliccato uno slot tempo\r\n   * @param slotClicked SlotTime Cliccato\r\n   */\r\n  myClickSlot(slotClicked: SlotTime) {\r\n    \r\n    if (slotClicked) {\r\n      if (slotClicked.STATO == StatoSlot.contattare) {\r\n        //Mostro un alert per telefonare alla struttura\r\n        this.showAlertContattaStruttura();\r\n      }\r\n      else {\r\n        //Cambio il Planning attuale visualizzato\r\n        this.actualPlanning = this.actualSlotDay.changeSelectionSlotTime(slotClicked);\r\n      }\r\n      \r\n    }\r\n    \r\n  }\r\n\r\n  /**\r\n   * Mostra un alert per contattare la struttura\r\n   */\r\n  showAlertContattaStruttura() {\r\n    let myButton = [];\r\n    let myMessage = ''\r\n\r\n    myMessage = 'Per la prenotazione dello slot è necessario contattare la struttura telefonicamente';\r\n    myButton = [\r\n      {\r\n        text: 'OK',\r\n        role: 'cancel'\r\n      }\r\n    ];\r\n\r\n\r\n     if (this.selectedLocation.TELEFONO && this.selectedLocation.TELEFONO.length > 0) {\r\n\r\n      myMessage = myMessage + ' al ' + this.selectedLocation.TELEFONO;\r\n\r\n      if (!this.startService.isDesktop) {\r\n\r\n        myButton = [\r\n          {\r\n            text: 'OK',\r\n            role: 'cancel'\r\n          },\r\n          {\r\n            text: 'Chiama',\r\n            handler: () => {\r\n              const number = this.selectedLocation.TELEFONO;\r\n              const link: HTMLAnchorElement = document.createElement('a');\r\n              link.setAttribute('href', `tel:${number}`);\r\n              link.click();\r\n  \r\n            }\r\n          }\r\n        ];\r\n\r\n      }\r\n\r\n\r\n      \r\n    }\r\n\r\n    this.alertController.create({\r\n      header: 'Contattare la struttura',\r\n      subHeader: 'per richiedere informazioni',\r\n      message: myMessage,\r\n      buttons: myButton\r\n    })\r\n    .then(elAlert => {\r\n      elAlert.present();\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * il Footer contiene la prenotazione attiva che uno sta implementando\r\n   * Viene visualizzato solo se c'e' una prenotazione attiva\r\n   * cioè se sono presenti le DATAORAINIZIO e DATAORAFINE\r\n   */\r\n  visibleFooter()  {\r\n    let visible = false;\r\n    if (this.actualPlanning) {\r\n      if (this.actualPlanning.DATAORAINIZIO && this.actualPlanning.DATAORAFINE) {\r\n        visible = true;\r\n      }\r\n    }\r\n\r\n    return visible;\r\n  }\r\n\r\n  /**\r\n   * Evento Click sul pulsante di prenotazione presente nel footer\r\n   */\r\n  myClickPrenota(docPianificazione: PrenotazionePianificazione) {\r\n    \r\n    //Non solo loggato, devo loggarmi\r\n    if (!this.userLogged) {\r\n\r\n      //Prima di aprire la pagina di login\r\n      //impostare nel servizio Start forceIdArea = \r\n      console.log('Forzo l\\'Area');\r\n      this.startService.setIdAreaForcedForLogin();\r\n      \r\n      //Ora preparo e creo la pagina di Login\r\n      this.modalCtrl.create({\r\n        component:NewLoginPage\r\n      })\r\n        .then(modal=>{\r\n          modal.present();\r\n        });\r\n\r\n    }\r\n    else {\r\n\r\n      let paramsVerifica : ParamsVerifica;\r\n      paramsVerifica = this.docUtente.getParamsVerifica(this.startService.actualStartConfig.gruppo)\r\n      if (paramsVerifica){\r\n        //se ci sono parametri, significa che devo chiamare la pagina di verifica\r\n        this.modalCtrl.create({\r\n          component: VerifyPage,\r\n          componentProps:{\r\n            params: paramsVerifica\r\n          } \r\n        })\r\n        .then(elModal => {\r\n          elModal.present();\r\n        })\r\n      }\r\n      else{\r\n        //sono loggato e l'account è completo; posso prenotare\r\n        this.execPrenotazione(docPianificazione);\r\n\r\n      }\r\n\r\n      \r\n    }\r\n    \r\n\r\n  }\r\n\r\n  private execPrenotazione(docPianificazione: PrenotazionePianificazione) {\r\n\r\n    //Inizializzo con i dati di Prenotazione\r\n    this.startService.initActivePrenotazione(this.selectedLocation.IDAREAOPERATIVA);\r\n    this.startService.setIDUtenteActivePrenotazione(this.docUtente);\r\n\r\n    //Impostiamo Location e Campo\r\n    docPianificazione.IDAREAOPERATIVA = this.selectedLocation.IDAREAOPERATIVA;\r\n    docPianificazione.IDLOCATION = this.selectedLocation.ID;\r\n    docPianificazione.IDCAMPO = this.selectedCampo.ID;\r\n    docPianificazione.IDSPORT = this.selectedSport.ID;\r\n    docPianificazione._DESCRCAMPO = this.selectedCampo.DENOMINAZIONE;\r\n    docPianificazione._DESCRSPORT = this.selectedSport.DENOMINAZIONE;\r\n\r\n    //Indico al servizio di memorizzarsi la Pianificazione per poterla passare alle altre pagine\r\n    this.startService.setPianificazioneSingola(docPianificazione);\r\n\r\n    //Indico al servizio di mantenere (non Observable) le info del campo selezionato\r\n    this.startService.setSelectedCampoPrenotazione(this.selectedCampo);\r\n\r\n    //Chiedo al server il calcolo del totale\r\n    this.calcolaTotale();\r\n  }\r\n\r\n   /**\r\n   * Richiede al server il calcolo degli importi della prenotazione\r\n   */\r\n  calcolaTotale() {\r\n    this.loadingController\r\n        .create({\r\n          message: 'Verifica Prenotazione...',\r\n          spinner: 'circular'\r\n        })\r\n        .then (elLoading => {\r\n          //Mostro il loading\r\n          elLoading.present();\r\n\r\n          //Chiedo al server di calcolare l'importo\r\n          this.startService\r\n              .requestImportoPrenotazione()\r\n              .pipe(\r\n                catchError(this.handleError)\r\n              )\r\n              .subscribe(resultData => {\r\n                \r\n                //Chiudo il loading\r\n                elLoading.dismiss();\r\n\r\n                //Converto il documento ricevuto\r\n                let newPrenotazione = Prenotazione.getPrenotazioneFromJson(resultData);\r\n                \r\n\r\n                // Risposta corretta del server\r\n                if (newPrenotazione.ISVALID === true) {\r\n                  \r\n                  let myPianificazione = newPrenotazione.PRENOTAZIONEPIANIFICAZIONE[0];\r\n                  myPianificazione._DESCRCAMPO = this.selectedCampo.DENOMINAZIONE;\r\n                  myPianificazione._DESCRSPORT = this.selectedSport.DENOMINAZIONE;\r\n                  \r\n                  //Invio al servizio il documento\r\n                  this.startService.setActivePrenotazione(newPrenotazione);\r\n\r\n\r\n                  //Procedo al passaggio di finalizzazione\r\n                  this.goToFinalizza();\r\n                }\r\n                else {\r\n                  \r\n                  let msg = (newPrenotazione.MSGINVALID ? newPrenotazione.MSGINVALID: 'Errore comunicazione imprevisto');\r\n                  this.showMessage(msg);\r\n                }\r\n\r\n\r\n              }, error => {\r\n                //Chiudo il loading\r\n                elLoading.dismiss();\r\n                this.showMessage(error);\r\n              });\r\n        });\r\n    \r\n  }\r\n\r\n\r\n  /**\r\n   * E' tutto a posto e posso spostarmi alla pagina di Finalizza Prenotazione\r\n   */\r\n  goToFinalizza() {\r\n    /* VERSIONE MODALE */\r\n    this.modalCtrl.create({\r\n      component: BookingsummaryPage,\r\n      componentProps: {\r\n        bookId: this.activePrenotazione.ID,\r\n        locationId : this.selectedLocation.ID\r\n      }\r\n    })\r\n    .then(modal => modal.present());\r\n\r\n    /* VERSIONE PAGINA FULLSCREEN\r\n    this.navController.navigateForward(['/','location',\r\n                                              this.selectedLocation.ID,\r\n                                            'booking','bookingsummary',\r\n                                            this.activePrenotazione.ID]);\r\n    */                                            \r\n  }\r\n\r\n  /**\r\n   * Visualizza un messaggio come Toast\r\n   * @param message Messaggio da mostrare\r\n   */\r\n  showMessage(message: string) {\r\n\r\n    //Creo un messaggio\r\n    this.toastCtrl.create({\r\n      message: message,\r\n      duration: 3000\r\n    })\r\n    .then(tstMsg => {\r\n      tstMsg.present();\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * Gestore errori http\r\n   * @param error Errore http rilevato\r\n   */\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('Errore di chiamata:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Errore Backend Codice ${error.status}, ` +\r\n        `Body: ${error.error}`);\r\n    }\r\n    // return an observable with a user-facing error message\r\n      return throwError('Si sono verificati errori. Riprovare AHIME.');\r\n  };\r\n\r\n\r\n  onClickChangeCampo(){\r\n    \r\n    \r\n    //creo i bottoni\r\n    let buttons = [];\r\n    this.availableFields.forEach(element => {\r\n      let btn = {\r\n        text: element.DENOMINAZIONE,\r\n        icon: 'location',\r\n        handler: () =>{\r\n          this.selectedCampo = element;\r\n          this.getOccupazioni();\r\n          let newPosition = this.availableFields.findIndex(el => {\r\n            return el.ID == this.selectedCampo.ID\r\n          })\r\n          this.sliderCampi.slideTo(newPosition);\r\n        }\r\n      }\r\n\r\n      buttons.push(btn);\r\n    });\r\n\r\n\r\n    //ora che ho i bottoni, creo l'actionsheet e lo presento\r\n    this.actionSheetController.create({\r\n      header: 'Scegli il campo',\r\n      buttons: buttons\r\n    })\r\n    .then(elActionSheet => {\r\n      elActionSheet.present();\r\n    })\r\n  }\r\n\r\n  \r\n\r\n\r\n}\r\n","<ion-header #headBook>\r\n\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button  defaultHref=\"/\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>Prenota</ion-title>\r\n  </ion-toolbar>\r\n\r\n  <div \r\n    class=\"custom-toolbar\" \r\n    *ngIf = \"ricevuti\">\r\n    <!-- MODALITA AUTOMATICA, MANUALE-->\r\n    <!-- <ion-segment \r\n      class=\"ion-no-margin ion-no-padding\"\r\n      (ionChange)=\"onChangeVersion($event)\" \r\n      value=\"manual\"\r\n      *ngIf = \"ricevuti\">\r\n\r\n    <ion-segment-button \r\n      value=\"manual\">\r\n        <ion-label>Manuale</ion-label>\r\n    </ion-segment-button>\r\n\r\n    <ion-segment-button \r\n      value=\"auto\">\r\n        <ion-label>Automatico</ion-label>\r\n    </ion-segment-button>\r\n  </ion-segment> -->\r\n\r\n    <app-sport-scroll \r\n        \r\n        [selectedSport]=\"selectedSport\" \r\n        [sportList]=\"listLocationSport\" \r\n        (sportChanged)=\"onChangeSport($event)\" >\r\n    </app-sport-scroll>\r\n\r\n    <app-campi-scroll \r\n        [selectedCampo]=\"selectedCampo\" \r\n        [campiList]=\"availableFields\" \r\n        [canChoose]=\"ricevuti && bookable\"\r\n        [selectedLocation]=\"selectedLocation\"\r\n        (campoChanged)=\"onChangeCampo($event)\">\r\n    </app-campi-scroll>\r\n\r\n  </div>\r\n\r\n</ion-header>\r\n\r\n<!-- <ion-content [scrollEvents]=\"ricevuti && bookable\" \r\n              appHideHeader \r\n              [header]=\"headBook\" \r\n              [scrollThreshold]=\"isOnAppleSystem ? 50 : 0\"> -->\r\n<ion-content>\r\n  <!-- SE SIAMO PRONTI A MOSTRARE LA PAGINA -->\r\n  <div *ngIf=\"ricevuti\">\r\n    \r\n    \r\n    <!-- ITEM DEL CALENDARIO POTREI VISUALIZZARLO SEMPRE -->\r\n    <!-- *ngIf=\"ricevuti && bookable\"  -->\r\n    <app-calendarscroll \r\n      [activeDay]=\"actualBookDay\"\r\n      (onChangeActiveDay)=\"onChangeBookDay($event)\"></app-calendarscroll>\r\n  \r\n    <!-- DIV CON  DTI RICEVUTI E BOOK DISPONIBILE-->      \r\n    <div *ngIf=\"ricevuti && bookable\">\r\n      \r\n      <!-- TITOLO SLOT TIME -->\r\n      <div *ngIf=\"actualSlotDay.APERTOCHIUSO\">\r\n  \r\n        <ion-item class=\"item-transparent\" >\r\n          <ion-label class=\"ion-padding-horizontal\">SCEGLI L'ORARIO:</ion-label>\r\n          <ion-spinner name=\"circular\" color=\"primary\" *ngIf=\"actualSlotDay._TEMPLATELOCK\"></ion-spinner>\r\n        </ion-item>\r\n    \r\n        <!-- VISUALIZZO GLI SLOT TIME SE E' APERTO-->\r\n        \r\n          <ion-grid>\r\n          <ion-row class=\"ion-no-margin ion-no-padding\">\r\n            <ion-col\r\n                class=\"ion-no-margin ion-no-padding\" \r\n                *ngFor=\"let slot of actualSlotDay.SLOTTIMES\"\r\n                size=\"6\"\r\n                sizeXl=\"3\"\r\n                sizeLg=\"4\"\r\n                sizeMd=\"6\"\r\n                sizeSm=\"12\"\r\n                sizeXs=\"12\">\r\n              <app-slottime  \r\n                [mySlot]=\"slot\" \r\n                [readOnly]=\"actualSlotDay._TEMPLATELOCK\" \r\n                (clickSlot)=\"myClickSlot($event)\"></app-slottime>\r\n            </ion-col>\r\n          </ion-row>\r\n        </ion-grid>\r\n  \r\n      </div>\r\n  \r\n  \r\n      <div class=\"nofind-cnt\" *ngIf=\"!actualSlotDay.APERTOCHIUSO\">\r\n        <!-- <img src=\"https://ingliando.files.wordpress.com/2012/02/stop.png\"> -->\r\n        <br/>\r\n        <ion-label>Prenotazione non effettuabile</ion-label>\r\n        <br/>\r\n        <ion-label>Cercare slot liberi modificando</ion-label>\r\n        <br/>\r\n        <ion-label>data, attività o struttura</ion-label>\r\n      </div>\r\n  \r\n    </div>\r\n\r\n    <!-- PRENOTAZIONE NON POSSIBILE-->\r\n    <div class=\"nofind-cnt\" *ngIf=\"!bookable\">\r\n      <ion-label>Prenotazione</ion-label>\r\n      <ion-label>non disponibile</ion-label>\r\n    </div>\r\n  </div>\r\n\r\n\r\n</ion-content>\r\n<!-- PRENOTAZIONE SELEZIONATA -->\r\n<ion-footer *ngIf=\"visibleFooter()\">\r\n  <app-footbooked \r\n    [myPrenotaPianifica]=\"actualPlanning\" \r\n    (clickPrenota)=\"myClickPrenota($event)\"></app-footbooked>\r\n</ion-footer>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { StartService } from 'src/app/services/start.service';\r\nimport { NavController, LoadingController, ToastController, NavParams, ModalController, Platform } from '@ionic/angular';\r\n\r\nimport { Subscription } from 'rxjs';\r\nimport { Prenotazione } from 'src/app/models/prenotazione.model';\r\nimport { Location } from 'src/app/models/location.model';\r\nimport { Utente } from 'src/app/models/utente.model';\r\nimport { PrenotazionePianificazione } from 'src/app/models/prenotazionepianificazione.model';\r\nimport { Campo } from 'src/app/models/campo.model';\r\nimport { Gruppo } from 'src/app/models/gruppo.model';\r\nimport { PaymentProcess } from 'src/app/models/payment-process.model';\r\nimport { PageType, PaymentMode, SettorePagamentiAttivita } from 'src/app/models/valuelist.model';\r\n\r\nimport { AlertController } from '@ionic/angular';\r\nimport { Plugins } from '@capacitor/core';\r\nimport { Area } from 'src/app/models/area.model';\r\nimport { AreaPaymentSetting } from 'src/app/models/areapaymentsetting.model';\r\nimport { PaymentPage } from 'src/app/pages/payment/payment.page';\r\nimport { AreaLink } from 'src/app/models/arealink.model';\r\nconst { Browser } = Plugins;\r\n\r\n@Component({\r\n  selector: 'app-bookingsummary',\r\n  templateUrl: './bookingsummary.page.html',\r\n  styleUrls: ['./bookingsummary.page.scss'],\r\n})\r\nexport class BookingsummaryPage implements OnInit, OnDestroy {\r\n\r\n  //Prenotazione Master\r\n  activePrenotazione: Prenotazione;\r\n  subActivePrenotazione: Subscription;\r\n\r\n  docPianificazione: PrenotazionePianificazione;\r\n\r\n //Location selezionata\r\n  selectedLocation: Location;\r\n  \r\n  //Campo in versione normale\r\n  selectedCampo: Campo;\r\n\r\n  //Area selezionata\r\n  docArea: Area;\r\n  listenArea: Subscription;\r\n  \r\n  userLogged: boolean;      //TRUE-FALSE: Utente Loggato\r\n  subUserLogged: Subscription;  \r\n  \r\n  docUtente: Utente;\r\n  subDocUtente: Subscription; \r\n\r\n  docGruppo: Gruppo;\r\n  subStartConfig: Subscription; \r\n\r\n  idPrenotazione = '';\r\n  idLocation = '';\r\n  \r\n  //Viene effettuato il controllo tra Id Prenotazione e Id del bookId\r\n  checkBookId = true; \r\n\r\n  //accettazione delle condizioni di vendita\r\n  disclaimer: boolean =false;\r\n\r\n\r\n\r\n  //Configurazioni di pagamento\r\n  myListPayment: AreaPaymentSetting[];\r\n  mySelectedPayment: AreaPaymentSetting;\r\n  myPaymentMode: PaymentMode;\r\n\r\n\r\n  subPaymentResult: Subscription;\r\n\r\n  \r\n  \r\n  constructor(private startService:StartService,\r\n              private navCtrl: NavController,\r\n              private loadingController: LoadingController,\r\n              private toastCtrl: ToastController,\r\n              private navParams: NavParams, \r\n              private modalCtrl: ModalController,\r\n              private platform: Platform,\r\n              private alertCtrl: AlertController\r\n              ) {\r\n\r\n    \r\n      //Recupero dell'area selezionata\r\n      this.docArea = this.startService.areaSelectedValue;\r\n      \r\n      //Impostazione tipologie pagamento\r\n      this.setListPayment();\r\n\r\n  }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.disclaimer=false;\r\n    \r\n    let result = true;\r\n    let errMessage = '';\r\n     \r\n    //#region MODALE\r\n    /* VERSIONE MODALE*/\r\n      this.idLocation = this.navParams.get('locationId');\r\n\r\n      if (this.idLocation.length !== 0) {\r\n        // Chiedo Location\r\n        this.selectedLocation = this.startService.findLocationByID(this.idLocation);        \r\n          \r\n        if (!this.selectedLocation) {\r\n          result = false;\r\n          errMessage = 'Location null';\r\n        }\r\n      }\r\n      else {\r\n        result = false;\r\n        errMessage = 'idLocation Empty';\r\n      }\r\n\r\n      if (result) {\r\n        this.idPrenotazione = this.navParams.get('bookId');\r\n\r\n        //IDPrenotazione presente\r\n        if (this.idPrenotazione) {\r\n  \r\n          //Recupero la prenotazione \r\n          this.recuperaPrenotazione();\r\n        }\r\n        else {\r\n          result = false;\r\n        }\r\n      }\r\n\r\n      if (result) {\r\n        //Controllo dell'utente loggato\r\n        this.subUserLogged = this.startService.utenteLogged.subscribe(element => {\r\n                this.userLogged = element;\r\n        });\r\n  \r\n        //Richiedo lo User\r\n        this.subDocUtente = this.startService.utente.subscribe(element => {\r\n          this.docUtente = element;\r\n        });\r\n  \r\n        //Recupero il campo selezionato\r\n        this.selectedCampo = this.startService.getSelectedCampoPrenotazione();\r\n      }\r\n\r\n\r\n\r\n      //Si sono verificati errori\r\n      if (!result) {\r\n        errMessage = 'ngOnInit Failed ' + errMessage;\r\n        console.error (errMessage);\r\n        this.onBookIdWrong();\r\n      }\r\n\r\n    //#endregion\r\n\r\n    \r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subUserLogged) {\r\n      this.subUserLogged.unsubscribe();\r\n    }\r\n\r\n    if (this.subActivePrenotazione) {\r\n      this.subActivePrenotazione.unsubscribe();\r\n    }\r\n\r\n    if (this.subDocUtente) {\r\n      this.subDocUtente.unsubscribe();\r\n    }\r\n\r\n    if (this.subPaymentResult) {\r\n      this.subPaymentResult.unsubscribe();\r\n    }\r\n\r\n  }\r\n\r\n  //Mi sottoscrivo alla ricezione della Prenotazione\r\n  recuperaPrenotazione() {\r\n\r\n    this.subActivePrenotazione = this.startService.activePrenotazione\r\n        .subscribe(elPrenotazione => {\r\n              \r\n              //Recupero la prenotazione\r\n              this.activePrenotazione = elPrenotazione;\r\n              //Recupero la Pianificazione dentro alla Prenotazione\r\n              this.docPianificazione = this.activePrenotazione.getPianificazione();\r\n\r\n              //Probabilmente è la prima richiesta e devo controllare l'entrata\r\n              //tramite la congruenza del BookId e IDPrenotazione\r\n              if (this.checkBookId) {\r\n\r\n                //Spegno il controllo\r\n                this.checkBookId = false;\r\n                //Id Book è diverso da quello in arrivo dalla prenotazione\r\n                if (this.activePrenotazione == null) {\r\n                  console.error('activePrenotazione null');\r\n                  this.onBookIdWrong();\r\n                }\r\n                else if (this.idPrenotazione != this.activePrenotazione.ID) {\r\n\r\n                  console.error('idPrenotazione <> activePrenotazione.ID');\r\n                  console.error(`idPrenotazione: ${this.idPrenotazione} - activePrenotazione ${this.activePrenotazione.ID}`);\r\n                  this.onBookIdWrong();\r\n\r\n                } else if (this.docPianificazione == null) {\r\n\r\n                  console.error('docPianificazione null');\r\n                  this.onBookIdWrong();\r\n                  \r\n                }\r\n              }\r\n              \r\n    });\r\n  }\r\n\r\n  /**\r\n   * Book ID Errato devo uscire\r\n   */\r\n  onBookIdWrong() {\r\n\r\n    this.showMessage('Errore dati prenotazione');\r\n    this.closeModal();\r\n\r\n  }\r\n\r\n  /**\r\n   * Chiude questa videata modale \r\n   */\r\n  closeModal() {\r\n    this.modalCtrl.dismiss();\r\n  }\r\n\r\n  //E' cambiato il numero dei giocatori\r\n  onChangedNumPlayer(nPlayer: number)\r\n  {\r\n    //Memorizzo il numero Partecipanti\r\n    this.docPianificazione.NUMPARTECIPANTI=nPlayer;\r\n\r\n    this.calcolaTotale();\r\n  }\r\n\r\n  //Effettua le operazioni per il calcolo del totale\r\n  calcolaTotale() {\r\n    this.loadingController\r\n      .create({\r\n        message: 'Ricalcolo importo...',\r\n        spinner: 'circular'\r\n      })\r\n      .then(elLoading => {\r\n        //Mostro il loading\r\n        elLoading.present();\r\n\r\n        //Contatto il server \r\n        this.startService\r\n                     .requestImportoPrenotazione()\r\n                     .subscribe(resultData => {\r\n\r\n                          //Chiudo il loading\r\n                          elLoading.dismiss();\r\n\r\n                          //Converto il documento ricevuto\r\n                          let newPrenotazione = Prenotazione.getPrenotazioneFromJson(resultData);\r\n\r\n                          //Invio al servizio il documento\r\n                          this.startService\r\n                            .setActivePrenotazione(newPrenotazione);\r\n\r\n                            //Se non è valida visualizzo un messsaggio\r\n                          if (!newPrenotazione.ISVALID) {\r\n                            this.showMessage(newPrenotazione.MSGINVALID);\r\n                          }\r\n\r\n                        },\r\n                        error => {\r\n                          //Chiudo il loading\r\n                          elLoading.dismiss();\r\n                          this.showMessage(error);\r\n                        });\r\n\r\n        \r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  //Ritorna un indirizzo Location da mostrare\r\n  getAddressLocation() {\r\n    let value = '';\r\n    if (this.selectedLocation) {\r\n      if (this.selectedLocation.INDIRIZZO && this.selectedLocation.INDIRIZZO.length !== 0)  {\r\n        value = this.selectedLocation.INDIRIZZO;\r\n      }\r\n      else if (this.selectedLocation.COMUNE && this.selectedLocation.COMUNE.length !== 0) {\r\n        value = this.selectedLocation.COMUNE;\r\n      }\r\n    }\r\n    \r\n\r\n    return value;\r\n  }\r\n  \r\n\r\n  /**\r\n   * Pressione del pulsante in interfaccia di conferma \r\n   */\r\n  onConfirm()\r\n  {\r\n    //Vado al pagamento\r\n     this.onExecPayment();\r\n  }\r\n  \r\n  /**\r\n   * Prenotazione salvata nel sistema posso andare via\r\n   */\r\n  onAfterSavePrenotazione()\r\n  {\r\n    this.showMessage('Prenotazione confermata');\r\n    //1) Chiudere la modale\r\n    this.closeModal();\r\n    //2) Andare alla History sulla scheda\r\n    this.navCtrl.navigateRoot(['historylist/booking', this.activePrenotazione.ID + '-' + this.docPianificazione.ID]);\r\n\r\n  }\r\n\r\n\r\n  //#region METODI GESTIONE PAGAMENTO\r\n\r\n  /**\r\n   * Recupera i metodi di pagamento sulla base dell'Area e popola \r\n   * l'array myListPayment e l'elemento mySelectedPayament\r\n   */  \r\n  setListPayment() {\r\n\r\n    //Svuota l'array\r\n    this.myListPayment = [];\r\n\r\n\r\n    //Ho il documento dell'Area\r\n    if (this.docArea) {\r\n      \r\n      this.myListPayment = this.docArea.getPaymentFor(SettorePagamentiAttivita.settorePagamentoPrenotazione)\r\n\r\n      if (this.myListPayment && this.myListPayment.length != 0) {\r\n        this.mySelectedPayment = this.myListPayment[0];\r\n      }\r\n      else {\r\n        this.mySelectedPayment = null;\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Ricezione pagamento da utilizzare\r\n   * @param value Valore Pagamento\r\n   */\r\n  onPaymentSelected(value) {\r\n    this.mySelectedPayment = value;\r\n  }\r\n\r\n  /**\r\n   * Cambiato il modo di pagamento\r\n   * @param valPaymentMode Modo di pagamento\r\n   */\r\n  onPaymentModeSelected(valPaymentMode: PaymentMode) {\r\n    this.myPaymentMode = valPaymentMode;\r\n  }\r\n\r\n\r\n  /**\r\n   * Richiesta di esecuzione del pagamento di qualsiasi tipologia\r\n   * 1) Se onSite conclude subito dicendo che va bene\r\n   * 2) Per altre tipologie viene aperta la pagina del pagamento\r\n   *\r\n   */\r\n  onExecPayment() {\r\n\r\n    let arModes:PaymentMode[]=[PaymentMode.pagaAdesso, PaymentMode.pagaBonifico, PaymentMode.pagaStruttura];\r\n\r\n    //Presente un totale da pagare\r\n    if (this.activePrenotazione.TOTALE != 0) {\r\n\r\n      //L'utente ha selezionato come pagare\r\n      if (arModes.includes(this.myPaymentMode)) {\r\n  \r\n        //Pagamento non dentro all'App\r\n        if (this.myPaymentMode == PaymentMode.pagaBonifico || this.myPaymentMode == PaymentMode.pagaStruttura) {\r\n  \r\n          //Creo il risultato del pagamento, passando la modalità\r\n          let docPaymentResult = new PaymentProcess(this.myPaymentMode);\r\n          // Essendo una modalita che non prevede interazioni app\r\n          // viene impostato automaticamento il channelPayment \r\n          // e il processResult = TRUE\r\n          \r\n          //Passo subito al Success\r\n          this.onPaymentSuccess(docPaymentResult);\r\n  \r\n        }\r\n        else {\r\n          \r\n          //Qui invece bisogna gestire il pagamento\r\n  \r\n          //Preparo un oggetto per processare il pagamento\r\n          let myCheckoutPayment = new PaymentProcess(this.myPaymentMode);\r\n          \r\n          myCheckoutPayment.amount = this.activePrenotazione.RESIDUO;\r\n          myCheckoutPayment.description = 'Pagamento Prenotazione';\r\n          myCheckoutPayment.currency = 'EUR';\r\n  \r\n          //il channelPayment viene impostato nel componente\r\n          //esterno che si preoccupa del pagamento\r\n          //Passo alla modale in paymentData = myCheckoutPayment\r\n          this.modalCtrl.create({\r\n            component: PaymentPage,\r\n            componentProps: {\r\n              paymentData: myCheckoutPayment,\r\n              listAreaPaymentSettings: this.myListPayment\r\n            }\r\n          })\r\n          .then(elModal => {\r\n            elModal.present();\r\n  \r\n            return elModal.onDidDismiss()\r\n          })\r\n          .then((returnData) => {\r\n  \r\n            //recupero il risultato del pagamento\r\n            let myPaymentResult: PaymentProcess = returnData['data'];\r\n\r\n            if (myPaymentResult) {\r\n\r\n              //Il Risultato del processo di pagamento è TRUE, posso proseguire\r\n              if (myPaymentResult.processResult) {\r\n                \r\n                //Pagamento avvenuto correttamente\r\n                this.onPaymentSuccess(myPaymentResult); \r\n  \r\n              }\r\n              else {\r\n  \r\n                //Pagamento Fallito\r\n                this.onPaymentFailed(myPaymentResult);\r\n  \r\n              }\r\n            }\r\n            else {\r\n              \r\n              //Stranamente non mi ha tornato nulla, quindi il pagamento è fallito\r\n              myPaymentResult = new PaymentProcess(this.myPaymentMode);\r\n              myPaymentResult.processResult = false;\r\n              myPaymentResult.messageResult = 'Pagamento fallito';\r\n\r\n              //Pagamento Fallito\r\n              this.onPaymentFailed(myPaymentResult);\r\n\r\n            }\r\n          })\r\n  \r\n  \r\n        }\r\n  \r\n      }\r\n      else {\r\n        //Pagamento non selezionato\r\n        this.showMessage('E\\' necessario selezionare un pagamento');\r\n      }\r\n      \r\n    }\r\n    else {\r\n      this.showMessage('Contattare la struttura. Prenotazioni gratuite concluse');\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  /**\r\n   * Pagamento andato a buon fine\r\n   * @param resultPayment Risultato del pagamento\r\n   */\r\n  onPaymentSuccess(resultPayment?: PaymentProcess) {\r\n\r\n    //Pagamento corretto\r\n    if (resultPayment && resultPayment.processResult)  {\r\n\r\n      //Nessuna transazione sembra avvenuta\r\n      if (resultPayment.idElectronicResult.length == 0) {\r\n\r\n        this.activePrenotazione.IDTRANSACTION = '';\r\n        this.activePrenotazione.IDORDER = '';\r\n\r\n        this.activePrenotazione.CHANNELPAYMENT = resultPayment.channelPayment;\r\n\r\n        //Imposto nella prenotazione che il residuo è il totale\r\n        this.activePrenotazione.RESIDUO = this.activePrenotazione.TOTALE;\r\n        //e che non ho incassato nulla\r\n        this.activePrenotazione.INCASSATO = 0;\r\n\r\n\r\n      }\r\n      else {\r\n\r\n        this.activePrenotazione.RESIDUO = 0;\r\n        this.activePrenotazione.INCASSATO = this.activePrenotazione.TOTALE;\r\n        \r\n        //Non riesco ad ottenere idTransaction e quindi non lo mando\r\n        this.activePrenotazione.IDTRANSACTION = '';\r\n        \r\n        //Dovrebbe essere idOrder\r\n        this.activePrenotazione.IDORDER = resultPayment.idElectronicResult;\r\n        this.activePrenotazione.CHANNELPAYMENT = resultPayment.channelPayment;\r\n\r\n      }\r\n\r\n\r\n      //Pagamento avvenuto correttamente\r\n      //Posso salvare la prenotazione e poi scappare\r\n          //Visualizzo il loading controller\r\n          this.loadingController.create({\r\n            message: 'Salvataggio Prenotazione',\r\n            spinner: 'circular'\r\n          })\r\n          .then(elLoading => {\r\n            //Creo il loading\r\n            elLoading.present();\r\n  \r\n            //Effettuo il salvataggio\r\n            this.startService\r\n                .requestSavePrenotazione()\r\n                .then(docPrenotazione => {\r\n                  //Salvataggio avvenuto correttamente\r\n                  //Chiudo il loading\r\n                  elLoading.dismiss();\r\n  \r\n                  //Ecco il documento ricevuto\r\n                  this.activePrenotazione = docPrenotazione;\r\n  \r\n                    //Se non è valida visualizzo un messsaggio\r\n                  if (!docPrenotazione.ISVALID) {\r\n  \r\n                    this.showMessage(docPrenotazione.MSGINVALID);\r\n  \r\n                  }\r\n                  else {\r\n                    //Imposto anche la pianificazione\r\n                    this.docPianificazione = this.activePrenotazione.PRENOTAZIONEPIANIFICAZIONE[0];\r\n                  }\r\n  \r\n                  \r\n                  //Eseguo operazioni successive al salvataggio\r\n                  this.onAfterSavePrenotazione();\r\n  \r\n  \r\n                })\r\n                .catch(errMessage => {\r\n                      //Chiudo il loader\r\n                      elLoading.dismiss();\r\n                      this.showMessage(errMessage);\r\n                  });  \r\n                \r\n          });\r\n\r\n\r\n    }\r\n\r\n\r\n    \r\n    \r\n\r\n  }\r\n\r\n  /**\r\n   * Si sono verificati errori nel pagamento\r\n   * @param resultPayment Risultato Pagamento Fallito\r\n   */\r\n  onPaymentFailed(resultPayment?: PaymentProcess) {\r\n    let message = 'Si sono verificati errori nel pagamento';\r\n    let title = 'Pagamento Fallito';\r\n\r\n    if (resultPayment) {\r\n      if (resultPayment.messageResult) {\r\n        message = resultPayment.messageResult;\r\n      }\r\n    }\r\n\r\n    //Visualizzo il messaggio\r\n    this.showAlert(message, title);\r\n    \r\n  }\r\n\r\n  //#endregion\r\n\r\n     /**\r\n   * Visualizza un messaggio come Toast\r\n   * @param message Messaggio da mostrare\r\n   */\r\n  showMessage(message: string) {\r\n\r\n    //Creo un messaggio\r\n    this.toastCtrl.create({\r\n      message: message,\r\n      duration: 3000\r\n    })\r\n    .then(tstMsg => {\r\n      tstMsg.present();\r\n    });\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * Visualizza un alert con un pulsante Ok se !buttons, oppure con i bottoni dell'array\r\n   * @param messaggio Messaggio\r\n   * @param titolo Titolo\r\n   */\r\n  showAlert(messaggio:string, titolo?:string, bottoni?:string[]) {\r\n\r\n    if (!bottoni || bottoni.length == 0) {\r\n      bottoni = [];\r\n      bottoni.push('Ok');\r\n    }\r\n\r\n    //Mostro l'alert richiesto\r\n    this.alertCtrl.create({      \r\n      header: (titolo?titolo:'Attenzione'),      \r\n      message: messaggio,\r\n      buttons: bottoni\r\n    })\r\n    .then(elAlert => {\r\n      elAlert.present();\r\n    })\r\n  }\r\n  \r\n\r\n  openLink(url:string)\r\n  {\r\n    Browser.open({url:url})\r\n  }\r\n\r\n\r\n  /**\r\n * Recupera il link per le condizioni di vendita Prenotazioni e apre il browser\r\n */\r\n  onClickCondizioniVendita(): void {\r\n    let link: AreaLink;\r\n\r\n\r\n    if (this.docArea) {\r\n\r\n      link = this.docArea.findAreaLinkByPageType(PageType.condizioniVenditaPrenotazioni);\r\n  \r\n      if (link && link.REFERURL) {\r\n\r\n        //Apro il link\r\n        this.openLink(link.REFERURL);\r\n\r\n      }\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  \r\n}\r\n\r\n\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"primary\">\r\n      <ion-button (click)=\"closeModal()\">\r\n        <ion-icon slot=\"icon-only\" ios=\"close\" md=\"close\"></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n\r\n    <ion-title>Finalizza</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <div style=\"background-color:#EFF1F8\" >\r\n    <ion-grid class=\"griglia-principale\">\r\n      <ion-row>\r\n        <ion-col>\r\n          <ion-button \r\n              color=\"danger\" \r\n              expand=\"block\" \r\n              class=\"full-buttons\" \r\n              (click)=\"closeModal()\">\r\n            Aspetta, voglio modificare\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row>\r\n        <ion-col>\r\n          <ion-card>\r\n            <ion-grid>\r\n              <ion-row class=\"ion-align-items-center\">\r\n                <ion-col size=\"3\" class=\"ion-text-center  left-col\">\r\n                  <h6 class=\"ion-no-margin\">{{ docPianificazione?.DATAORAINIZIO | date: \"EEE\" | uppercase}}</h6>\r\n                  <h4 class=\"ion-no-margin\" style=\"margin-top: 0px; margin-bottom: 0px;\">{{docPianificazione?.DATAORAINIZIO | date: \"dd\"}}</h4>\r\n                  <p class=\"ion-no-margin\">{{ docPianificazione?.DATAORAINIZIO | date: \"MMMM\" | titlecase}}</p>\r\n                </ion-col>\r\n                <ion-col size=\"9\">\r\n                  <h6>{{docPianificazione?._DESCRSPORT}}</h6>\r\n                  <h4>{{selectedCampo?.DENOMINAZIONE}}</h4>\r\n                  <h6>{{getAddressLocation()|titlecase}}</h6>\r\n                </ion-col>\r\n              </ion-row>\r\n            </ion-grid>\r\n          </ion-card>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row>\r\n        <ion-col>\r\n          <ion-card>\r\n            <ion-grid>\r\n              <ion-row class=\"ion-align-items-center\">\r\n                <ion-col size=\"3\" class=\"ion-text-center left-col\">\r\n                  <h6 class=\"ion-no-margin\">{{docPianificazione?.DATAORAINIZIO | date: \"HH:mm\" | uppercase}}</h6>\r\n                  <h6 class=\"ion-no-margin\">{{docPianificazione?.DATAORAFINE | date: \"HH:mm\"}}</h6>\r\n                </ion-col>\r\n                <ion-col size=\"9\">\r\n                  <h5 class=\"ion-no-margin\">{{docPianificazione?.DURATAORE}} {{docPianificazione?.DURATAORE!=1? \"Ore\":\"Ora\"}}</h5>\r\n                </ion-col>\r\n              </ion-row>\r\n            </ion-grid>\r\n          </ion-card>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row>\r\n        <ion-col>\r\n          <app-player-number [numPlayer]=\"docPianificazione?.NUMPARTECIPANTI\" (changeNumPlayer)=\"onChangedNumPlayer($event)\" ></app-player-number>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n\r\n\r\n\r\n  </div>\r\n\r\n\r\n\r\n</ion-content>\r\n<ion-footer>\r\n\r\n  <ion-grid>\r\n    <ion-list>\r\n      <ion-item button (click)=\"disclaimer=!disclaimer; \" lines=\"full\" >\r\n        <ion-checkbox \r\n              [(ngModel)]=\"disclaimer\" \r\n              slot=\"start\"\r\n              (click)=\"$event.stopPropagation();\">\r\n        </ion-checkbox>\r\n        <ion-label class=\"ion-text-wrap\">\r\n          <p>Lette e approvate le\r\n          <a (click)=\"$event.stopPropagation(); onClickCondizioniVendita();\">condizioni di vendita</a>\r\n        </p>\r\n        </ion-label>\r\n      </ion-item>\r\n\r\n      <!-- Componente scelta Pagamento -->  \r\n        <app-payment-mode\r\n          [arPayment]=\"myListPayment\"\r\n          (onPaymentModeChoosed)=\"onPaymentModeSelected($event)\"></app-payment-mode>\r\n          \r\n\r\n        <ion-item lines=\"none\" id=\"item-totale\">\r\n          <ion-label slot=\"start\">Totale</ion-label> \r\n          <ion-label style=\"text-align:right;\">\r\n          {{activePrenotazione?.TOTALE | currency: \"EUR\"}}\r\n          </ion-label>\r\n        </ion-item>\r\n\r\n    </ion-list>\r\n\r\n    <ion-row>\r\n      <ion-col>\r\n        <ion-button \r\n            color=\"tertiary\" \r\n            expand=\"block\" \r\n            class=\"full-buttons\" \r\n            [disabled]=\"!disclaimer || !activePrenotazione?.ISVALID || !mySelectedPayment \" \r\n            (click)=\"onConfirm()\">\r\n          Conferma Prenotazione\r\n        </ion-button>\r\n      </ion-col>\r\n    </ion-row>\r\n  </ion-grid>\r\n</ion-footer>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PaypalPageRoutingModule } from './payment-routing.module';\r\n\r\nimport { PaymentPage } from './payment.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    PaypalPageRoutingModule\r\n  ],\r\n  declarations: [PaymentPage],\r\n  exports: [PaymentPage]\r\n})\r\nexport class PaypalPageModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { BookingPage } from './booking.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BookingPage\r\n  },\r\n  {\r\n    path: 'bookingsummary/:bookId',\r\n    loadChildren: () => import('./bookingsummary/bookingsummary.module').then( m => m.BookingsummaryPageModule)\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class BookingPageRoutingModule {}\r\n"],"sourceRoot":"webpack:///"}