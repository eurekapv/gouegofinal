{"version":3,"sources":["webpack:///src/app/pages/location/booking/bookingsummary/bookingsummary.module.ts","webpack:///src/app/pages/location/booking/booking.module.ts","webpack:///src/app/pages/location/booking/bookingsummary/bookingsummary-routing.module.ts","webpack:///src/app/pages/payment/payment-routing.module.ts","webpack:///src/app/pages/location/booking/booking.page.ts","webpack:///src/app/pages/location/booking/booking.page.html","webpack:///src/app/pages/location/booking/bookingsummary/bookingsummary.page.ts","webpack:///src/app/pages/location/booking/bookingsummary/bookingsummary.page.html","webpack:///src/app/pages/payment/payment.module.ts","webpack:///src/app/pages/location/booking/booking-routing.module.ts"],"names":["BookingsummaryPageModule","BookingPageModule","routes","path","component","BookingsummaryPageRoutingModule","forChild","PaypalPageRoutingModule","BookingPage","router","startService","navController","loadingController","toastCtrl","modalCtrl","actionSheetController","alertController","idLocation","versionBooking","listLocationSport","bookable","templateWeekSlot","actualBookDay","Date","actualCaptionButtonSelected","actualPlanning","availableFields","indexCount","showExtraToolbar","isOnAppleSystem","myDebug","element","actDebug","console","log","selectedLocation","CAMPO","filter","el","trovato","selectedSport","CAMPOSPORT","iterator","IDSPORT","ID","create","message","spinner","backdropDismiss","then","loading","present","ricevuti","paramMap","subscribe","param","has","get","requestLocationSport","sottoscrizioneListaSport","requestLocationByID","dismiss","showMessage","sottoscrizioneLocationCampi","subUserLogged","utenteLogged","userLogged","subDocUtente","utente","docUtente","subActualSlotDay","docOccupazione","elActualDay","actualSlotDay","subActivePrenotazione","activePrenotazione","elPrenotazione","navigateForward","subSelectedLocation","unsubscribe","subListLocationSport","activeLocation","dataLocation","do_inserted","length","getTemplateWeek","onRefresh","resultData","undefined","value","getAvalaibleFields","selectedCampo","getOccupazioni","newCampo","e","sliderCampi","getActiveIndex","index","newDate","newSport","docLocation","getTemplateSlotWeek","getCopySlotDay","requestSlotOccupazioni","APERTOCHIUSO","isFestivita","IDAREAOPERATIVA","slotClicked","STATO","contattare","showAlertContattaStruttura","changeSelectionSlotTime","myButton","myMessage","text","role","TELEFONO","isDesktop","handler","number","link","document","createElement","setAttribute","click","header","subHeader","buttons","elAlert","visible","DATAORAINIZIO","DATAORAFINE","docPianificazione","setIdAreaForcedForLogin","modal","paramsVerifica","getParamsVerifica","actualStartConfig","gruppo","componentProps","params","elModal","execPrenotazione","initActivePrenotazione","setIDUtenteActivePrenotazione","IDLOCATION","IDCAMPO","_DESCRCAMPO","DENOMINAZIONE","_DESCRSPORT","setPianificazioneSingola","setSelectedCampoPrenotazione","calcolaTotale","elLoading","requestImportoPrenotazione","pipe","handleError","newPrenotazione","getPrenotazioneFromJson","ISVALID","myPianificazione","PRENOTAZIONEPIANIFICAZIONE","setActivePrenotazione","goToFinalizza","msg","MSGINVALID","error","bookId","locationId","duration","tstMsg","ErrorEvent","status","forEach","btn","icon","newPosition","findIndex","slideTo","push","elActionSheet","Browser","BookingsummaryPage","navCtrl","navParams","platform","alertCtrl","idPrenotazione","checkBookId","disclaimer","docArea","areaSelectedValue","setListPayment","result","errMessage","findLocationByID","recuperaPrenotazione","getSelectedCampoPrenotazione","onBookIdWrong","subPaymentResult","getPianificazione","closeModal","nPlayer","NUMPARTECIPANTI","INDIRIZZO","COMUNE","onExecPayment","navigateRoot","myListPayment","getPaymentFor","settorePagamentoPrenotazione","mySelectedPayment","valPaymentMode","myPaymentMode","arModes","pagaAdesso","pagaBonifico","pagaStruttura","TOTALE","includes","docPaymentResult","onPaymentSuccess","myCheckoutPayment","amount","RESIDUO","description","currency","paymentData","listAreaPaymentSettings","onDidDismiss","returnData","myPaymentResult","processResult","onPaymentFailed","messageResult","resultPayment","idElectronicResult","IDTRANSACTION","IDORDER","CHANNELPAYMENT","channelPayment","INCASSATO","requestSavePrenotazione","docPrenotazione","onAfterSavePrenotazione","title","showAlert","messaggio","titolo","bottoni","url","open","findAreaLinkByPageType","condizioniVenditaPrenotazioni","REFERURL","openLink","onChangedNumPlayer","$event","stopPropagation","onClickCondizioniVendita","onPaymentModeSelected","onConfirm","PaypalPageModule","loadChildren","m","BookingPageRoutingModule"],"mappings":"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","file":"booking-booking-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { BookingsummaryPageRoutingModule } from './bookingsummary-routing.module';\r\nimport { PaymentChooseComponent } from 'src/app/shared/components/payment-choose/payment-choose.component';\r\n\r\n\r\nimport { BookingsummaryPage } from './bookingsummary.page';\r\nimport { PaypalPageModule } from '../../../payment/payment.module';\r\nimport { PaymentPage } from '../../../payment/payment.page';\r\nimport { SharedComponentsModule } from 'src/app/shared/components/shared-components.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    BookingsummaryPageRoutingModule,\r\n    \r\n    PaypalPageModule,\r\n    SharedComponentsModule\r\n  ],\r\n  declarations: [BookingsummaryPage],\r\n  entryComponents:[PaymentChooseComponent, PaymentPage],\r\n  exports:[BookingsummaryPage]\r\n})\r\nexport class BookingsummaryPageModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { BookingPageRoutingModule } from './booking-routing.module';\r\n\r\nimport { BookingPage } from './booking.page';\r\n\r\nimport { BookingsummaryPage } from './bookingsummary/bookingsummary.page';\r\nimport{ BookingsummaryPageModule } from './bookingsummary/bookingsummary.module'\r\nimport { VerifyPageModule } from 'src/app/pages/auth/verify/verify.module'\r\nimport { VerifyPage } from 'src/app/pages/auth/verify/verify.page'\r\nimport { SharedComponentsModule } from 'src/app/shared/components/shared-components.module';\r\nimport { NewLoginPage } from '../../auth/new-login/new-login.page'\r\nimport { NewLoginPageModule } from '../../auth/new-login/new-login.module'\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IonicModule,\r\n    BookingPageRoutingModule,\r\n    BookingsummaryPageModule,\r\n    VerifyPageModule,\r\n    SharedComponentsModule, \r\n    NewLoginPageModule   \r\n  ],\r\n  declarations: [BookingPage],\r\n  entryComponents: [BookingsummaryPage, VerifyPage, NewLoginPage]\r\n})\r\nexport class BookingPageModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { BookingsummaryPage } from './bookingsummary.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BookingsummaryPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class BookingsummaryPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PaymentPage } from './payment.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PaymentPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PaypalPageRoutingModule {}\r\n","import { Component, OnInit, OnDestroy, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { StartService } from 'src/app/services/start.service';\r\nimport { NavController, IonSlides, LoadingController, ToastController, ModalController, ActionSheetController, AlertController} from '@ionic/angular';\r\nimport { Location } from 'src/app/models/location.model';\r\nimport { throwError, Subscription } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Campo } from 'src/app/models/campo.model';\r\nimport { Utente, ParamsVerifica } from 'src/app/models/utente.model';\r\nimport { SlotWeek } from 'src/app/models/imdb/slotweek.model';\r\nimport { SlotDay } from 'src/app/models/imdb/slotday.model';\r\nimport { SlotTime } from 'src/app/models/imdb/slottime.model';\r\nimport { PrenotazionePianificazione } from 'src/app/models/prenotazionepianificazione.model';\r\nimport { Prenotazione } from 'src/app/models/prenotazione.model';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { BookingsummaryPage } from './bookingsummary/bookingsummary.page';\r\nimport { Sport } from 'src/app/models/sport.model';\r\nimport { NewLoginPage } from 'src/app/pages/auth/new-login/new-login.page'\r\nimport { VerifyPage } from '../../auth/verify/verify.page';\r\nimport { StatoSlot } from 'src/app/models/valuelist.model';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-booking',\r\n  templateUrl: './booking.page.html',\r\n  styleUrls: ['./booking.page.scss'],\r\n})\r\nexport class BookingPage implements OnInit,  OnDestroy {\r\n\r\n  idLocation = '';\r\n  versionBooking = 'manual'; //Versione di Booking (Automatico, Manuale)\r\n\r\n  listLocationSport: Sport[] = [];  //Lista Sport presenti sulla Location\r\n  subListLocationSport: Subscription;\r\n\r\n  selectedLocation: Location;\r\n  subSelectedLocation: Subscription;\r\n  selectedCampo: Campo;\r\n\r\n  userLogged: boolean;      //TRUE-FALSE: Utente Loggato\r\n  subUserLogged: Subscription;  \r\n  \r\n  docUtente: Utente;\r\n  subDocUtente: Subscription; \r\n\r\n  ricevuti: boolean; //Dati Ricevuti\r\n  bookable: boolean = false; //Ho ricevuto dei campi, quindi potrei effettuare prenotazioni\r\n\r\n  templateWeekSlot: SlotWeek = new SlotWeek(); //Template con gli slotTime settimanali relativi alla location\r\n  \r\n  actualBookDay = new Date(); //Giorno di Pianificazione\r\n  actualSlotDay: SlotDay; //E' lo Slot Day attualmente in visualizzazione\r\n  actualCaptionButtonSelected = ''; //E' il testo visualizato sul bottone selezionato\r\n  \r\n  //Prenotazione Attiva\r\n  activePrenotazione: Prenotazione;\r\n  //Singola Data Pianificata\r\n  actualPlanning: PrenotazionePianificazione = new PrenotazionePianificazione(); //E' la pianificazione attuale che l'utente vorrebbe prenotare\r\n  \r\n  subActualPlanning: Subscription;\r\n  subActualSlotDay: Subscription;\r\n  subActivePrenotazione: Subscription;\r\n\r\n  selectedSport: Sport; //lo sport selezionato\r\n\r\n  availableFields: Campo[]=[]; //un array dei soli campi per lo sport selezionato\r\n\r\n  @ViewChild('sliderCampi')sliderCampi: IonSlides;\r\n  indexCount: number = 0;\r\n  showExtraToolbar = true;\r\n  isOnAppleSystem = false; //Sta girando su sistemi IOS (Introdotto per animare diversamente la toolbar Hide)\r\n  \r\n\r\n  constructor(private router: ActivatedRoute, \r\n              private startService:StartService,\r\n              private navController: NavController,\r\n              private loadingController: LoadingController,\r\n              private toastCtrl: ToastController,\r\n              private modalCtrl: ModalController,\r\n              private actionSheetController: ActionSheetController,\r\n              private alertController: AlertController) { \r\n\r\n\r\n    //Creo un documento di Pianificazione\r\n    this.actualPlanning = new PrenotazionePianificazione;\r\n    \r\n    this.myDebug('Constructor Booking Page');\r\n    this.myDebug(this.actualPlanning);\r\n    //Ricavo la piattaforma di esecuzione\r\n    //in HTML sul content viene usata una direttiva per una animazione diversa della toolbar in Ios\r\n    this.isOnAppleSystem = this.startService.isOnAppleSystem;\r\n\r\n  }\r\n  \r\n// Problematica dell'animazione toolbar\r\n//https://github.com/ionic-team/ionic-framework/issues/17728\r\n//https://github.com/ionic-team/ionic-framework/pull/17224\r\n\r\n\r\n  /**\r\n   * \r\n   * @param element Element \r\n   */\r\n  myDebug(element) {\r\n    let actDebug = false;\r\n    if (actDebug) {\r\n      console.log(element);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Crea l'array con i soli Campi dove è possibile effettuare l'attività selezionata\r\n   */\r\n  updateAvailableFields()\r\n  {\r\n     if (this.selectedLocation) {\r\n      if (this.selectedLocation.CAMPO) {\r\n\r\n        this.availableFields = this.selectedLocation.CAMPO.filter( el=> {\r\n          let trovato =false;\r\n\r\n          if (this.selectedSport) {\r\n\r\n            for (const iterator of el.CAMPOSPORT) {\r\n              if (iterator.IDSPORT==this.selectedSport.ID)\r\n              {\r\n                trovato=true;\r\n                break;\r\n              }\r\n            }\r\n\r\n          }\r\n          \r\n          return trovato;\r\n        });\r\n\r\n\r\n      }\r\n     }\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    this.loadingController.create({\r\n      message: 'Caricamento',\r\n      spinner: 'circular',\r\n      backdropDismiss: true\r\n\r\n    }).then(loading=>{\r\n\r\n        this.myDebug('Presentazione Loading');\r\n\r\n        loading.present()\r\n        this.ricevuti = false;\r\n        this.bookable = false;\r\n      \r\n\r\n        //Controllo dei parametri del router\r\n      this.router.paramMap.subscribe(param => {\r\n        \r\n        this.myDebug('Controllo Routing locationId');\r\n        \r\n        if (param.has('locationId')) {\r\n          \r\n          this.myDebug('locationId trovata');\r\n\r\n          //Location sulla barra\r\n          this.idLocation = param.get('locationId');\r\n          \r\n          if (this.idLocation) {\r\n\r\n            this.myDebug('locationId: ' + this.idLocation);\r\n            \r\n            //Chiedo al server gli Sport praticati nella location\r\n            this.myDebug('Richiesta al server Sport Praticati nella location ');\r\n            this.startService.requestLocationSport(this.idLocation);\r\n            \r\n            //Mi sottoscrivo alla ricezione degli Sport\r\n            this.sottoscrizioneListaSport();\r\n          \r\n            // Chiedo al server Location, Campi e CampiSport (3 Livelli)\r\n            this.myDebug('Richiesta al server Location, Campi e CampiSport ');\r\n\r\n            this.startService.requestLocationByID(this.idLocation, 3)\r\n              .then(()=>{\r\n                  this.ricevuti=true;\r\n                  loading.dismiss();\r\n              },()=>{\r\n                  loading.dismiss();\r\n                  this.showMessage('Errore di connessione');\r\n            });\r\n\r\n            //Mi sottoscrivo alla ricezione\r\n            this.sottoscrizioneLocationCampi();\r\n          \r\n          \r\n            //Controllo dell'utente loggato\r\n            this.subUserLogged = this.startService.utenteLogged.subscribe(element => {\r\n              this.userLogged = element;\r\n            });\r\n            \r\n            //Richiedo lo User\r\n            this.subDocUtente = this.startService.utente.subscribe(element => {\r\n              this.docUtente = element;\r\n            });\r\n            \r\n            // Mi metto in ascolto di variazioni di Slot attuale\r\n            this.subActualSlotDay = this.startService.docOccupazione.subscribe(elActualDay => {\r\n              this.myDebug('Variazione Slot Day');\r\n              this.actualSlotDay = elActualDay;\r\n              this.myDebug(elActualDay);\r\n            });\r\n            \r\n            //Ascolto documento di Prenotazione\r\n            //Sia la prima volta che entra nel OnInit\r\n            //Esegue tutte le volte che la prenotazione cambia\r\n            this.subActivePrenotazione = this.startService.activePrenotazione.subscribe(elPrenotazione => {\r\n              this.activePrenotazione = elPrenotazione;\r\n            });\r\n          \r\n        }\r\n        else {\r\n          // Dico che non posso prenotare\r\n          this.bookable = false;\r\n          this.ricevuti = true;\r\n        }\r\n        \r\n      }\r\n      else {\r\n        //Rimando alla HOME\r\n        this.navController.navigateForward(['/']);\r\n      }\r\n\r\n    })\r\n});\r\n    \r\n  }\r\n\r\n\r\n  \r\n  ngOnDestroy() {\r\n    \r\n    \r\n    if (this.subSelectedLocation) {\r\n      this.subSelectedLocation.unsubscribe();\r\n    }\r\n\r\n    if (this.subUserLogged) {\r\n      this.subUserLogged.unsubscribe();\r\n    }\r\n\r\n    if (this.subDocUtente) {\r\n      this.subDocUtente.unsubscribe();\r\n    }    \r\n\r\n    if (this.subActualSlotDay) {\r\n      this.subActualSlotDay.unsubscribe();\r\n    }\r\n\r\n    if (this.subActivePrenotazione) {\r\n\r\n      this.subActivePrenotazione.unsubscribe();\r\n    }   \r\n    \r\n    if (this.subListLocationSport) {\r\n      this.subListLocationSport.unsubscribe();\r\n    }\r\n\r\n\r\n  }\r\n\r\n  /*\r\n  Sottoscrivo alla ricezione di Location e Campi\r\n  */\r\n  private sottoscrizioneLocationCampi() {\r\n\r\n    this.myDebug('Sottoscrizione Location, Campi e CampiSport ');\r\n    this.subSelectedLocation = this.startService.activeLocation\r\n      .subscribe(dataLocation => {\r\n\r\n        // Chiedo la Location\r\n        this.selectedLocation = dataLocation;\r\n\r\n        /* Se ho la location */\r\n        if (this.selectedLocation && !this.selectedLocation.do_inserted && this.selectedLocation.CAMPO.length !== 0) {\r\n\r\n          this.myDebug('Ricezione Location, Campi e CampiSport ');\r\n\r\n          //RECUPERO IL TEMPLATE WEEK SLOT TIME\r\n          this.getTemplateWeek(this.selectedLocation);\r\n\r\n          //Recupero Campi, e Occupazioni\r\n          this.onRefresh();\r\n\r\n        }\r\n        else {\r\n          if (this.selectedLocation && this.selectedLocation.CAMPO) {\r\n            this.myDebug('Location');\r\n            this.myDebug(this.selectedLocation);\r\n            this.myDebug(this.selectedLocation.CAMPO);\r\n          }\r\n          else {\r\n            this.myDebug('Non ho la location oppure i campi ')\r\n          }\r\n        }\r\n\r\n      });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Chiamata per sottoscriversi alla ricezione degli Sport praticati nella location\r\n   */\r\n  private sottoscrizioneListaSport() {\r\n\r\n    //Mi sottoscrivo alla ricezione degli Sport praticati\r\n    this.subListLocationSport = this.startService.listLocationSport\r\n          .subscribe(resultData => {\r\n\r\n\r\n\r\n                //Popolo Lista degli Sport\r\n                this.listLocationSport = resultData;\r\n\r\n                //Prendo il primo e lo seleziono\r\n                if (this.listLocationSport) {\r\n            \r\n                  if (this.listLocationSport.length !== 0) {\r\n                    this.selectedSport = this.listLocationSport[0];\r\n                  }\r\n                  else {\r\n                    this.selectedSport = undefined;\r\n                  }\r\n                }\r\n                else {\r\n                  this.selectedSport = undefined;\r\n                }\r\n\r\n                //Chiedo di eseguire il refresh dell'Interfaccia, dove recupero i campi legati allo sport e le occupazioni\r\n                this.onRefresh();\r\n            });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Manual o Auto\r\n   * @param value Modifica della versione\r\n   */\r\n  onChangeVersion(value: string) {\r\n    this.versionBooking = value;\r\n  }\r\n\r\n\r\n  /**\r\n   * Evento che occorre quando cambia lo Sport Selezionato\r\n   * 1) Attribuzione di una nuova collection di Campi\r\n   * 2) this.selectedCampo viene impostato al 1 Campo disponibile\r\n   * 3) Rielaborazione degli Slot e di tutto il resto\r\n   */\r\n  onRefresh() {\r\n    \r\n    \r\n\r\n    if (this.selectedSport) {\r\n\r\n      //this.selectedLocation è la Location, che contiene la Collection dei Campi, con dentro i CampiSport\r\n      this.availableFields = this.selectedLocation.getAvalaibleFields(this.selectedSport.ID);\r\n\r\n      //Seleziono come Campo il primo disponibile\r\n      if (this.availableFields.length !== 0) {\r\n        this.selectedCampo = this.availableFields[0];\r\n      }\r\n\r\n      if (this.selectedCampo) {\r\n\r\n        this.myDebug('Richiesto Refresh success, getOccupazioni');\r\n        this.bookable = (this.selectedCampo?true:false);\r\n\r\n        //Richiesta delle nuove occupazioni e impostazione nuova Pianificazione\r\n        this.getOccupazioni();\r\n        \r\n      }\r\n      else {\r\n        this.myDebug('Richiesto Refresh failed NO SELECTED CAMPO');\r\n      }\r\n    }\r\n    else {\r\n      this.myDebug('Richiesto Refresh failed NO SELECTED SPORT');\r\n    }\r\n\r\n\r\n  }\r\n\r\n  /**\r\n   * E' stato richiesta la modifica del campo Selezionato\r\n   * @param newCampo nuovo Campo\r\n   */\r\n  onChangeCampo(newCampo: Campo) {\r\n    this.selectedCampo = newCampo;\r\n    //Richiedo le occupazioni\r\n    this.getOccupazioni();\r\n  }\r\n\r\n  /**\r\n   * Ha cambiato il campo nello Slide\r\n   */\r\n  onDidChangeCampo(e: any) {\r\n    \r\n    //Indice Slide è Zero Base\r\n    this.sliderCampi.getActiveIndex().then((index: number) => {\r\n      \r\n      //Ricavo il campo selezionato\r\n      if (index <= this.availableFields.length) {\r\n\r\n        this.selectedCampo = this.availableFields[index];\r\n        //Richiedo le occupazioni\r\n        this.getOccupazioni();\r\n\r\n      }\r\n\r\n      \r\n    });\r\n    \r\n    \r\n  }\r\n\r\n  \r\n\r\n  /**\r\n   * E' stata selezionata un'altra data\r\n   * @param newDate Nuova Data\r\n   */\r\n  onChangeBookDay(newDate: Date) {\r\n    \r\n    this.actualBookDay = newDate;\r\n\r\n    //Richiedo le occupazioni\r\n    this.getOccupazioni();\r\n  }\r\n\r\n  /**\r\n   * Al cambio dello Sport devo rieseguire un Refresh della UI\r\n   * @param newSport Oggetto del Nuovo Sport\r\n   */\r\n  onChangeSport(newSport)\r\n  {\r\n    if (newSport) {\r\n      this.selectedSport=newSport;\r\n      this.onRefresh();\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  /**\r\n   * Recupera il template Week Slot Time per la generazione degli slot di prenotazioni\r\n   * @param docLocation Location prenotazione\r\n   */\r\n  getTemplateWeek(docLocation: Location) {\r\n    \r\n    this.templateWeekSlot = this.startService.getTemplateSlotWeek(docLocation);\r\n\r\n  }\r\n\r\n  /**\r\n   * Recupero le occupazioni quando\r\n   * 1) CAMBIA IL CAMPO\r\n   * 2) CAMBIA IL GIORNO\r\n   * \r\n   * Procedura: \r\n   * a) Viene cercato nel templateWeek lo SlotDay e viene applicata una copia a actualSlotDay\r\n   * b) Viene chiamato il servizio passando actualSlotDay\r\n   * c) il servizio chiama il server, e mi ritorna actualSlotDay come Observable\r\n   * \r\n   */\r\n  getOccupazioni() {\r\n    \r\n    //Step a) Chiedo al TemplateWeek una copia del Template di una Giornata (TRUE-> Chiedo di aggiornare la data su tutti i record figli SLOTTIME)\r\n    this.actualSlotDay = this.templateWeekSlot.getCopySlotDay(this.actualBookDay, true);\r\n    \r\n      \r\n    this.myDebug('Richiesta Slot Occupazioni');\r\n    \r\n    //Step b) Chiamo il servizio\r\n    this.startService.requestSlotOccupazioni(this.actualSlotDay, \r\n      this.selectedLocation, \r\n      this.selectedCampo, \r\n      this.actualBookDay)\r\n      \r\n      .then(() => {\r\n        //Per gli orario del centro saremmo aperti (come giornata)\r\n        if (this.actualSlotDay.APERTOCHIUSO == true) {\r\n          //Controlliamo se per caso è un giorno FESTIVO o di chiusura generale\r\n          //this.actualBookDay è il giorno\r\n          let isFestivita = this.startService.isFestivita(this.actualBookDay, \r\n                                                    this.selectedLocation.IDAREAOPERATIVA, \r\n                                                    this.selectedLocation.ID, \r\n                                                    this.selectedCampo.ID);\r\n          if (isFestivita) {\r\n            this.actualSlotDay.APERTOCHIUSO = false;\r\n          }\r\n          else {\r\n            this.actualSlotDay.APERTOCHIUSO = true;\r\n          }\r\n        }\r\n\r\n      });\r\n      \r\n      \r\n\r\n      \r\n    //Step c) Creo un nuovo oggetto di prenotazione\r\n    this.actualPlanning = new PrenotazionePianificazione;\r\n\r\n    //Ora tutto avviene in modalità asincrona\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  /**\r\n   * E' stato cliccato uno slot tempo\r\n   * @param slotClicked SlotTime Cliccato\r\n   */\r\n  myClickSlot(slotClicked: SlotTime) {\r\n    \r\n    if (slotClicked) {\r\n      if (slotClicked.STATO == StatoSlot.contattare) {\r\n        //Mostro un alert per telefonare alla struttura\r\n        this.showAlertContattaStruttura();\r\n      }\r\n      else {\r\n        //Cambio il Planning attuale visualizzato\r\n        this.actualPlanning = this.actualSlotDay.changeSelectionSlotTime(slotClicked);\r\n      }\r\n      \r\n    }\r\n    \r\n  }\r\n\r\n  /**\r\n   * Mostra un alert per contattare la struttura\r\n   */\r\n  showAlertContattaStruttura() {\r\n    let myButton = [];\r\n    let myMessage = ''\r\n\r\n    myMessage = 'Per la prenotazione dello slot è necessario contattare la struttura telefonicamente';\r\n    myButton = [\r\n      {\r\n        text: 'OK',\r\n        role: 'cancel'\r\n      }\r\n    ];\r\n\r\n\r\n     if (this.selectedLocation.TELEFONO && this.selectedLocation.TELEFONO.length > 0) {\r\n\r\n      myMessage = myMessage + ' al ' + this.selectedLocation.TELEFONO;\r\n\r\n      if (!this.startService.isDesktop) {\r\n\r\n        myButton = [\r\n          {\r\n            text: 'OK',\r\n            role: 'cancel'\r\n          },\r\n          {\r\n            text: 'Chiama',\r\n            handler: () => {\r\n              const number = this.selectedLocation.TELEFONO;\r\n              const link: HTMLAnchorElement = document.createElement('a');\r\n              link.setAttribute('href', `tel:${number}`);\r\n              link.click();\r\n  \r\n            }\r\n          }\r\n        ];\r\n\r\n      }\r\n\r\n\r\n      \r\n    }\r\n\r\n    this.alertController.create({\r\n      header: 'Contattare la struttura',\r\n      subHeader: 'per richiedere informazioni',\r\n      message: myMessage,\r\n      buttons: myButton\r\n    })\r\n    .then(elAlert => {\r\n      elAlert.present();\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * il Footer contiene la prenotazione attiva che uno sta implementando\r\n   * Viene visualizzato solo se c'e' una prenotazione attiva\r\n   * cioè se sono presenti le DATAORAINIZIO e DATAORAFINE\r\n   */\r\n  visibleFooter()  {\r\n    let visible = false;\r\n    if (this.actualPlanning) {\r\n      if (this.actualPlanning.DATAORAINIZIO && this.actualPlanning.DATAORAFINE) {\r\n        visible = true;\r\n      }\r\n    }\r\n\r\n    return visible;\r\n  }\r\n\r\n  /**\r\n   * Evento Click sul pulsante di prenotazione presente nel footer\r\n   */\r\n  myClickPrenota(docPianificazione: PrenotazionePianificazione) {\r\n    \r\n    //Non solo loggato, devo loggarmi\r\n    if (!this.userLogged) {\r\n\r\n      //Prima di aprire la pagina di login\r\n      //impostare nel servizio Start forceIdArea = \r\n      console.log('Forzo l\\'Area');\r\n      this.startService.setIdAreaForcedForLogin();\r\n      \r\n      //Ora preparo e creo la pagina di Login\r\n      this.modalCtrl.create({\r\n        component:NewLoginPage\r\n      })\r\n        .then(modal=>{\r\n          modal.present();\r\n        });\r\n\r\n    }\r\n    else {\r\n\r\n      let paramsVerifica : ParamsVerifica;\r\n      paramsVerifica = this.docUtente.getParamsVerifica(this.startService.actualStartConfig.gruppo)\r\n      if (paramsVerifica){\r\n        //se ci sono parametri, significa che devo chiamare la pagina di verifica\r\n        this.modalCtrl.create({\r\n          component: VerifyPage,\r\n          componentProps:{\r\n            params: paramsVerifica\r\n          } \r\n        })\r\n        .then(elModal => {\r\n          elModal.present();\r\n        })\r\n      }\r\n      else{\r\n        //sono loggato e l'account è completo; posso prenotare\r\n        this.execPrenotazione(docPianificazione);\r\n\r\n      }\r\n\r\n      \r\n    }\r\n    \r\n\r\n  }\r\n\r\n  private execPrenotazione(docPianificazione: PrenotazionePianificazione) {\r\n\r\n    //Inizializzo con i dati di Prenotazione\r\n    this.startService.initActivePrenotazione(this.selectedLocation.IDAREAOPERATIVA);\r\n    this.startService.setIDUtenteActivePrenotazione(this.docUtente);\r\n\r\n    //Impostiamo Location e Campo\r\n    docPianificazione.IDAREAOPERATIVA = this.selectedLocation.IDAREAOPERATIVA;\r\n    docPianificazione.IDLOCATION = this.selectedLocation.ID;\r\n    docPianificazione.IDCAMPO = this.selectedCampo.ID;\r\n    docPianificazione.IDSPORT = this.selectedSport.ID;\r\n    docPianificazione._DESCRCAMPO = this.selectedCampo.DENOMINAZIONE;\r\n    docPianificazione._DESCRSPORT = this.selectedSport.DENOMINAZIONE;\r\n\r\n    //Indico al servizio di memorizzarsi la Pianificazione per poterla passare alle altre pagine\r\n    this.startService.setPianificazioneSingola(docPianificazione);\r\n\r\n    //Indico al servizio di mantenere (non Observable) le info del campo selezionato\r\n    this.startService.setSelectedCampoPrenotazione(this.selectedCampo);\r\n\r\n    //Chiedo al server il calcolo del totale\r\n    this.calcolaTotale();\r\n  }\r\n\r\n   /**\r\n   * Richiede al server il calcolo degli importi della prenotazione\r\n   */\r\n  calcolaTotale() {\r\n    this.loadingController\r\n        .create({\r\n          message: 'Verifica Prenotazione...',\r\n          spinner: 'circular'\r\n        })\r\n        .then (elLoading => {\r\n          //Mostro il loading\r\n          elLoading.present();\r\n\r\n          //Chiedo al server di calcolare l'importo\r\n          this.startService\r\n              .requestImportoPrenotazione()\r\n              .pipe(\r\n                catchError(this.handleError)\r\n              )\r\n              .subscribe(resultData => {\r\n                \r\n                //Chiudo il loading\r\n                elLoading.dismiss();\r\n\r\n                //Converto il documento ricevuto\r\n                let newPrenotazione = Prenotazione.getPrenotazioneFromJson(resultData);\r\n                \r\n\r\n                // Risposta corretta del server\r\n                if (newPrenotazione.ISVALID === true) {\r\n                  \r\n                  let myPianificazione = newPrenotazione.PRENOTAZIONEPIANIFICAZIONE[0];\r\n                  myPianificazione._DESCRCAMPO = this.selectedCampo.DENOMINAZIONE;\r\n                  myPianificazione._DESCRSPORT = this.selectedSport.DENOMINAZIONE;\r\n                  \r\n                  //Invio al servizio il documento\r\n                  this.startService.setActivePrenotazione(newPrenotazione);\r\n\r\n\r\n                  //Procedo al passaggio di finalizzazione\r\n                  this.goToFinalizza();\r\n                }\r\n                else {\r\n                  \r\n                  let msg = (newPrenotazione.MSGINVALID ? newPrenotazione.MSGINVALID: 'Errore comunicazione imprevisto');\r\n                  this.showMessage(msg);\r\n                }\r\n\r\n\r\n              }, error => {\r\n                //Chiudo il loading\r\n                elLoading.dismiss();\r\n                this.showMessage(error);\r\n              });\r\n        });\r\n    \r\n  }\r\n\r\n\r\n  /**\r\n   * E' tutto a posto e posso spostarmi alla pagina di Finalizza Prenotazione\r\n   */\r\n  goToFinalizza() {\r\n    /* VERSIONE MODALE */\r\n    this.modalCtrl.create({\r\n      component: BookingsummaryPage,\r\n      componentProps: {\r\n        bookId: this.activePrenotazione.ID,\r\n        locationId : this.selectedLocation.ID\r\n      }\r\n    })\r\n    .then(modal => modal.present());\r\n\r\n    /* VERSIONE PAGINA FULLSCREEN\r\n    this.navController.navigateForward(['/','location',\r\n                                              this.selectedLocation.ID,\r\n                                            'booking','bookingsummary',\r\n                                            this.activePrenotazione.ID]);\r\n    */                                            \r\n  }\r\n\r\n  /**\r\n   * Visualizza un messaggio come Toast\r\n   * @param message Messaggio da mostrare\r\n   */\r\n  showMessage(message: string) {\r\n\r\n    //Creo un messaggio\r\n    this.toastCtrl.create({\r\n      message: message,\r\n      duration: 3000\r\n    })\r\n    .then(tstMsg => {\r\n      tstMsg.present();\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * Gestore errori http\r\n   * @param error Errore http rilevato\r\n   */\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('Errore di chiamata:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Errore Backend Codice ${error.status}, ` +\r\n        `Body: ${error.error}`);\r\n    }\r\n    // return an observable with a user-facing error message\r\n      return throwError('Si sono verificati errori. Riprovare AHIME.');\r\n  };\r\n\r\n\r\n  onClickChangeCampo(){\r\n    \r\n    \r\n    //creo i bottoni\r\n    let buttons = [];\r\n    this.availableFields.forEach(element => {\r\n      let btn = {\r\n        text: element.DENOMINAZIONE,\r\n        icon: 'location',\r\n        handler: () =>{\r\n          this.selectedCampo = element;\r\n          this.getOccupazioni();\r\n          let newPosition = this.availableFields.findIndex(el => {\r\n            return el.ID == this.selectedCampo.ID\r\n          })\r\n          this.sliderCampi.slideTo(newPosition);\r\n        }\r\n      }\r\n\r\n      buttons.push(btn);\r\n    });\r\n\r\n\r\n    //ora che ho i bottoni, creo l'actionsheet e lo presento\r\n    this.actionSheetController.create({\r\n      header: 'Scegli il campo',\r\n      buttons: buttons\r\n    })\r\n    .then(elActionSheet => {\r\n      elActionSheet.present();\r\n    })\r\n  }\r\n\r\n  \r\n\r\n\r\n}\r\n","<ion-header #headBook>\r\n\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button  defaultHref=\"/\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>Prenota</ion-title>\r\n  </ion-toolbar>\r\n\r\n  <div \r\n    class=\"custom-toolbar\" \r\n    *ngIf = \"ricevuti\">\r\n    <!-- MODALITA AUTOMATICA, MANUALE-->\r\n    <!-- <ion-segment \r\n      class=\"ion-no-margin ion-no-padding\"\r\n      (ionChange)=\"onChangeVersion($event)\" \r\n      value=\"manual\"\r\n      *ngIf = \"ricevuti\">\r\n\r\n    <ion-segment-button \r\n      value=\"manual\">\r\n        <ion-label>Manuale</ion-label>\r\n    </ion-segment-button>\r\n\r\n    <ion-segment-button \r\n      value=\"auto\">\r\n        <ion-label>Automatico</ion-label>\r\n    </ion-segment-button>\r\n  </ion-segment> -->\r\n\r\n    <app-sport-scroll \r\n        \r\n        [selectedSport]=\"selectedSport\" \r\n        [sportList]=\"listLocationSport\" \r\n        (sportChanged)=\"onChangeSport($event)\" >\r\n    </app-sport-scroll>\r\n\r\n    <app-campi-scroll \r\n        [selectedCampo]=\"selectedCampo\" \r\n        [campiList]=\"availableFields\" \r\n        [canChoose]=\"ricevuti && bookable\"\r\n        [selectedLocation]=\"selectedLocation\"\r\n        (campoChanged)=\"onChangeCampo($event)\">\r\n    </app-campi-scroll>\r\n\r\n  </div>\r\n\r\n</ion-header>\r\n\r\n<!-- <ion-content [scrollEvents]=\"ricevuti && bookable\" \r\n              appHideHeader \r\n              [header]=\"headBook\" \r\n              [scrollThreshold]=\"isOnAppleSystem ? 50 : 0\"> -->\r\n<ion-content>\r\n  <!-- SE SIAMO PRONTI A MOSTRARE LA PAGINA -->\r\n  <div *ngIf=\"ricevuti\">\r\n    \r\n    \r\n    <!-- ITEM DEL CALENDARIO POTREI VISUALIZZARLO SEMPRE -->\r\n    <!-- *ngIf=\"ricevuti && bookable\"  -->\r\n    <app-calendarscroll \r\n      [activeDay]=\"actualBookDay\"\r\n      (onChangeActiveDay)=\"onChangeBookDay($event)\"></app-calendarscroll>\r\n  \r\n    <!-- DIV CON  DTI RICEVUTI E BOOK DISPONIBILE-->      \r\n    <div *ngIf=\"ricevuti && bookable\">\r\n      \r\n      <!-- TITOLO SLOT TIME -->\r\n      <div *ngIf=\"actualSlotDay.APERTOCHIUSO\">\r\n  \r\n        <ion-item class=\"item-transparent\" >\r\n          <ion-label class=\"ion-padding-horizontal\">SCEGLI L'ORARIO:</ion-label>\r\n          <ion-spinner name=\"circular\" color=\"primary\" *ngIf=\"actualSlotDay._TEMPLATELOCK\"></ion-spinner>\r\n        </ion-item>\r\n    \r\n        <!-- VISUALIZZO GLI SLOT TIME SE E' APERTO-->\r\n        \r\n          <ion-grid>\r\n          <ion-row class=\"ion-no-margin ion-no-padding\">\r\n            <ion-col\r\n                class=\"ion-no-margin ion-no-padding\" \r\n                *ngFor=\"let slot of actualSlotDay.SLOTTIMES\"\r\n                size=\"6\"\r\n                sizeXl=\"3\"\r\n                sizeLg=\"4\"\r\n                sizeMd=\"6\"\r\n                sizeSm=\"12\"\r\n                sizeXs=\"12\">\r\n              <app-slottime  \r\n                [mySlot]=\"slot\" \r\n                [readOnly]=\"actualSlotDay._TEMPLATELOCK\" \r\n                (clickSlot)=\"myClickSlot($event)\"></app-slottime>\r\n            </ion-col>\r\n          </ion-row>\r\n        </ion-grid>\r\n  \r\n      </div>\r\n  \r\n  \r\n      <div class=\"nofind-cnt\" *ngIf=\"!actualSlotDay.APERTOCHIUSO\">\r\n        <!-- <img src=\"https://ingliando.files.wordpress.com/2012/02/stop.png\"> -->\r\n        <br/>\r\n        <ion-label>Prenotazione non effettuabile</ion-label>\r\n        <br/>\r\n        <ion-label>Cercare slot liberi modificando</ion-label>\r\n        <br/>\r\n        <ion-label>data, attività o struttura</ion-label>\r\n      </div>\r\n  \r\n    </div>\r\n\r\n    <!-- PRENOTAZIONE NON POSSIBILE-->\r\n    <div class=\"nofind-cnt\" *ngIf=\"!bookable\">\r\n      <ion-label>Prenotazione</ion-label>\r\n      <ion-label>non disponibile</ion-label>\r\n    </div>\r\n  </div>\r\n\r\n\r\n</ion-content>\r\n<!-- PRENOTAZIONE SELEZIONATA -->\r\n<ion-footer *ngIf=\"visibleFooter()\">\r\n  <app-footbooked \r\n    [myPrenotaPianifica]=\"actualPlanning\" \r\n    (clickPrenota)=\"myClickPrenota($event)\"></app-footbooked>\r\n</ion-footer>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { StartService } from 'src/app/services/start.service';\r\nimport { NavController, LoadingController, ToastController, NavParams, ModalController, Platform } from '@ionic/angular';\r\n\r\nimport { Subscription } from 'rxjs';\r\nimport { Prenotazione } from 'src/app/models/prenotazione.model';\r\nimport { Location } from 'src/app/models/location.model';\r\nimport { Utente } from 'src/app/models/utente.model';\r\nimport { PrenotazionePianificazione } from 'src/app/models/prenotazionepianificazione.model';\r\nimport { Campo } from 'src/app/models/campo.model';\r\nimport { Gruppo } from 'src/app/models/gruppo.model';\r\nimport { PaymentProcess } from 'src/app/models/payment-process.model';\r\nimport { PageType, PaymentMode, SettorePagamentiAttivita } from 'src/app/models/valuelist.model';\r\n\r\nimport { AlertController } from '@ionic/angular';\r\nimport { Plugins } from '@capacitor/core';\r\nimport { Area } from 'src/app/models/area.model';\r\nimport { AreaPaymentSetting } from 'src/app/models/areapaymentsetting.model';\r\nimport { PaymentPage } from 'src/app/pages/payment/payment.page';\r\nimport { AreaLink } from 'src/app/models/arealink.model';\r\nconst { Browser } = Plugins;\r\n\r\n@Component({\r\n  selector: 'app-bookingsummary',\r\n  templateUrl: './bookingsummary.page.html',\r\n  styleUrls: ['./bookingsummary.page.scss'],\r\n})\r\nexport class BookingsummaryPage implements OnInit, OnDestroy {\r\n\r\n  //Prenotazione Master\r\n  activePrenotazione: Prenotazione;\r\n  subActivePrenotazione: Subscription;\r\n\r\n  docPianificazione: PrenotazionePianificazione;\r\n\r\n //Location selezionata\r\n  selectedLocation: Location;\r\n  \r\n  //Campo in versione normale\r\n  selectedCampo: Campo;\r\n\r\n  //Area selezionata\r\n  docArea: Area;\r\n  listenArea: Subscription;\r\n  \r\n  userLogged: boolean;      //TRUE-FALSE: Utente Loggato\r\n  subUserLogged: Subscription;  \r\n  \r\n  docUtente: Utente;\r\n  subDocUtente: Subscription; \r\n\r\n  docGruppo: Gruppo;\r\n  subStartConfig: Subscription; \r\n\r\n  idPrenotazione = '';\r\n  idLocation = '';\r\n  \r\n  //Viene effettuato il controllo tra Id Prenotazione e Id del bookId\r\n  checkBookId = true; \r\n\r\n  //accettazione delle condizioni di vendita\r\n  disclaimer: boolean =false;\r\n\r\n\r\n\r\n  //Configurazioni di pagamento\r\n  myListPayment: AreaPaymentSetting[];\r\n  mySelectedPayment: AreaPaymentSetting;\r\n  myPaymentMode: PaymentMode;\r\n\r\n\r\n  subPaymentResult: Subscription;\r\n\r\n  \r\n  \r\n  constructor(private startService:StartService,\r\n              private navCtrl: NavController,\r\n              private loadingController: LoadingController,\r\n              private toastCtrl: ToastController,\r\n              private navParams: NavParams, \r\n              private modalCtrl: ModalController,\r\n              private platform: Platform,\r\n              private alertCtrl: AlertController\r\n              ) {\r\n\r\n    \r\n      //Recupero dell'area selezionata\r\n      this.docArea = this.startService.areaSelectedValue;\r\n      \r\n      //Impostazione tipologie pagamento\r\n      this.setListPayment();\r\n\r\n  }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.disclaimer=false;\r\n    \r\n    let result = true;\r\n    let errMessage = '';\r\n     \r\n    //#region MODALE\r\n    /* VERSIONE MODALE*/\r\n      this.idLocation = this.navParams.get('locationId');\r\n\r\n      if (this.idLocation.length !== 0) {\r\n        // Chiedo Location\r\n        this.selectedLocation = this.startService.findLocationByID(this.idLocation);        \r\n          \r\n        if (!this.selectedLocation) {\r\n          result = false;\r\n          errMessage = 'Location null';\r\n        }\r\n      }\r\n      else {\r\n        result = false;\r\n        errMessage = 'idLocation Empty';\r\n      }\r\n\r\n      if (result) {\r\n        this.idPrenotazione = this.navParams.get('bookId');\r\n\r\n        //IDPrenotazione presente\r\n        if (this.idPrenotazione) {\r\n  \r\n          //Recupero la prenotazione \r\n          this.recuperaPrenotazione();\r\n        }\r\n        else {\r\n          result = false;\r\n        }\r\n      }\r\n\r\n      if (result) {\r\n        //Controllo dell'utente loggato\r\n        this.subUserLogged = this.startService.utenteLogged.subscribe(element => {\r\n                this.userLogged = element;\r\n        });\r\n  \r\n        //Richiedo lo User\r\n        this.subDocUtente = this.startService.utente.subscribe(element => {\r\n          this.docUtente = element;\r\n        });\r\n  \r\n        //Recupero il campo selezionato\r\n        this.selectedCampo = this.startService.getSelectedCampoPrenotazione();\r\n      }\r\n\r\n\r\n\r\n      //Si sono verificati errori\r\n      if (!result) {\r\n        errMessage = 'ngOnInit Failed ' + errMessage;\r\n        console.error (errMessage);\r\n        this.onBookIdWrong();\r\n      }\r\n\r\n    //#endregion\r\n\r\n    \r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subUserLogged) {\r\n      this.subUserLogged.unsubscribe();\r\n    }\r\n\r\n    if (this.subActivePrenotazione) {\r\n      this.subActivePrenotazione.unsubscribe();\r\n    }\r\n\r\n    if (this.subDocUtente) {\r\n      this.subDocUtente.unsubscribe();\r\n    }\r\n\r\n    if (this.subPaymentResult) {\r\n      this.subPaymentResult.unsubscribe();\r\n    }\r\n\r\n  }\r\n\r\n  //Mi sottoscrivo alla ricezione della Prenotazione\r\n  recuperaPrenotazione() {\r\n\r\n    this.subActivePrenotazione = this.startService.activePrenotazione\r\n        .subscribe(elPrenotazione => {\r\n              \r\n              //Recupero la prenotazione\r\n              this.activePrenotazione = elPrenotazione;\r\n              //Recupero la Pianificazione dentro alla Prenotazione\r\n              this.docPianificazione = this.activePrenotazione.getPianificazione();\r\n\r\n              //Probabilmente è la prima richiesta e devo controllare l'entrata\r\n              //tramite la congruenza del BookId e IDPrenotazione\r\n              if (this.checkBookId) {\r\n\r\n                //Spegno il controllo\r\n                this.checkBookId = false;\r\n                //Id Book è diverso da quello in arrivo dalla prenotazione\r\n                if (this.activePrenotazione == null) {\r\n                  console.error('activePrenotazione null');\r\n                  this.onBookIdWrong();\r\n                }\r\n                else if (this.idPrenotazione != this.activePrenotazione.ID) {\r\n\r\n                  console.error('idPrenotazione <> activePrenotazione.ID');\r\n                  console.error(`idPrenotazione: ${this.idPrenotazione} - activePrenotazione ${this.activePrenotazione.ID}`);\r\n                  this.onBookIdWrong();\r\n\r\n                } else if (this.docPianificazione == null) {\r\n\r\n                  console.error('docPianificazione null');\r\n                  this.onBookIdWrong();\r\n                  \r\n                }\r\n              }\r\n              \r\n    });\r\n  }\r\n\r\n  /**\r\n   * Book ID Errato devo uscire\r\n   */\r\n  onBookIdWrong() {\r\n\r\n    this.showMessage('Errore dati prenotazione');\r\n    this.closeModal();\r\n\r\n  }\r\n\r\n  /**\r\n   * Chiude questa videata modale \r\n   */\r\n  closeModal() {\r\n    this.modalCtrl.dismiss();\r\n  }\r\n\r\n  //E' cambiato il numero dei giocatori\r\n  onChangedNumPlayer(nPlayer: number)\r\n  {\r\n    //Memorizzo il numero Partecipanti\r\n    this.docPianificazione.NUMPARTECIPANTI=nPlayer;\r\n\r\n    this.calcolaTotale();\r\n  }\r\n\r\n  //Effettua le operazioni per il calcolo del totale\r\n  calcolaTotale() {\r\n    this.loadingController\r\n      .create({\r\n        message: 'Ricalcolo importo...',\r\n        spinner: 'circular'\r\n      })\r\n      .then(elLoading => {\r\n        //Mostro il loading\r\n        elLoading.present();\r\n\r\n        //Contatto il server \r\n        this.startService\r\n                     .requestImportoPrenotazione()\r\n                     .subscribe(resultData => {\r\n\r\n                          //Chiudo il loading\r\n                          elLoading.dismiss();\r\n\r\n                          //Converto il documento ricevuto\r\n                          let newPrenotazione = Prenotazione.getPrenotazioneFromJson(resultData);\r\n\r\n                          //Invio al servizio il documento\r\n                          this.startService\r\n                            .setActivePrenotazione(newPrenotazione);\r\n\r\n                            //Se non è valida visualizzo un messsaggio\r\n                          if (!newPrenotazione.ISVALID) {\r\n                            this.showMessage(newPrenotazione.MSGINVALID);\r\n                          }\r\n\r\n                        },\r\n                        error => {\r\n                          //Chiudo il loading\r\n                          elLoading.dismiss();\r\n                          this.showMessage(error);\r\n                        });\r\n\r\n        \r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  //Ritorna un indirizzo Location da mostrare\r\n  getAddressLocation() {\r\n    let value = '';\r\n    if (this.selectedLocation) {\r\n      if (this.selectedLocation.INDIRIZZO && this.selectedLocation.INDIRIZZO.length !== 0)  {\r\n        value = this.selectedLocation.INDIRIZZO;\r\n      }\r\n      else if (this.selectedLocation.COMUNE && this.selectedLocation.COMUNE.length !== 0) {\r\n        value = this.selectedLocation.COMUNE;\r\n      }\r\n    }\r\n    \r\n\r\n    return value;\r\n  }\r\n  \r\n\r\n  /**\r\n   * Pressione del pulsante in interfaccia di conferma \r\n   */\r\n  onConfirm()\r\n  {\r\n    //Vado al pagamento\r\n     this.onExecPayment();\r\n  }\r\n  \r\n  /**\r\n   * Prenotazione salvata nel sistema posso andare via\r\n   */\r\n  onAfterSavePrenotazione()\r\n  {\r\n    this.showMessage('Prenotazione confermata');\r\n    //1) Chiudere la modale\r\n    this.closeModal();\r\n    //2) Andare alla History sulla scheda\r\n    this.navCtrl.navigateRoot(['historylist/booking', this.activePrenotazione.ID + '-' + this.docPianificazione.ID]);\r\n\r\n  }\r\n\r\n\r\n  //#region METODI GESTIONE PAGAMENTO\r\n\r\n  /**\r\n   * Recupera i metodi di pagamento sulla base dell'Area e popola \r\n   * l'array myListPayment e l'elemento mySelectedPayament\r\n   */  \r\n  setListPayment() {\r\n\r\n    //Svuota l'array\r\n    this.myListPayment = [];\r\n\r\n\r\n    //Ho il documento dell'Area\r\n    if (this.docArea) {\r\n      \r\n      this.myListPayment = this.docArea.getPaymentFor(SettorePagamentiAttivita.settorePagamentoPrenotazione)\r\n\r\n      if (this.myListPayment && this.myListPayment.length != 0) {\r\n        this.mySelectedPayment = this.myListPayment[0];\r\n      }\r\n      else {\r\n        this.mySelectedPayment = null;\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Ricezione pagamento da utilizzare\r\n   * @param value Valore Pagamento\r\n   */\r\n  onPaymentSelected(value) {\r\n    this.mySelectedPayment = value;\r\n  }\r\n\r\n  /**\r\n   * Cambiato il modo di pagamento\r\n   * @param valPaymentMode Modo di pagamento\r\n   */\r\n  onPaymentModeSelected(valPaymentMode: PaymentMode) {\r\n    this.myPaymentMode = valPaymentMode;\r\n  }\r\n\r\n\r\n  /**\r\n   * Richiesta di esecuzione del pagamento di qualsiasi tipologia\r\n   * 1) Se onSite conclude subito dicendo che va bene\r\n   * 2) Per altre tipologie viene aperta la pagina del pagamento\r\n   *\r\n   */\r\n  onExecPayment() {\r\n\r\n    let arModes:PaymentMode[]=[PaymentMode.pagaAdesso, PaymentMode.pagaBonifico, PaymentMode.pagaStruttura];\r\n\r\n    //Presente un totale da pagare\r\n    if (this.activePrenotazione.TOTALE != 0) {\r\n\r\n      //L'utente ha selezionato come pagare\r\n      if (arModes.includes(this.myPaymentMode)) {\r\n  \r\n        //Pagamento non dentro all'App\r\n        if (this.myPaymentMode == PaymentMode.pagaBonifico || this.myPaymentMode == PaymentMode.pagaStruttura) {\r\n  \r\n          //Creo il risultato del pagamento, passando la modalità\r\n          let docPaymentResult = new PaymentProcess(this.myPaymentMode);\r\n          // Essendo una modalita che non prevede interazioni app\r\n          // viene impostato automaticamento il channelPayment \r\n          // e il processResult = TRUE\r\n          \r\n          //Passo subito al Success\r\n          this.onPaymentSuccess(docPaymentResult);\r\n  \r\n        }\r\n        else {\r\n          \r\n          //Qui invece bisogna gestire il pagamento\r\n  \r\n          //Preparo un oggetto per processare il pagamento\r\n          let myCheckoutPayment = new PaymentProcess(this.myPaymentMode);\r\n          \r\n          myCheckoutPayment.amount = this.activePrenotazione.RESIDUO;\r\n          myCheckoutPayment.description = 'Pagamento Prenotazione';\r\n          myCheckoutPayment.currency = 'EUR';\r\n  \r\n          //il channelPayment viene impostato nel componente\r\n          //esterno che si preoccupa del pagamento\r\n          //Passo alla modale in paymentData = myCheckoutPayment\r\n          this.modalCtrl.create({\r\n            component: PaymentPage,\r\n            componentProps: {\r\n              paymentData: myCheckoutPayment,\r\n              listAreaPaymentSettings: this.myListPayment\r\n            }\r\n          })\r\n          .then(elModal => {\r\n            elModal.present();\r\n  \r\n            return elModal.onDidDismiss()\r\n          })\r\n          .then((returnData) => {\r\n  \r\n            //recupero il risultato del pagamento\r\n            let myPaymentResult: PaymentProcess = returnData['data'];\r\n\r\n            if (myPaymentResult) {\r\n\r\n              //Il Risultato del processo di pagamento è TRUE, posso proseguire\r\n              if (myPaymentResult.processResult) {\r\n                \r\n                //Pagamento avvenuto correttamente\r\n                this.onPaymentSuccess(myPaymentResult); \r\n  \r\n              }\r\n              else {\r\n  \r\n                //Pagamento Fallito\r\n                this.onPaymentFailed(myPaymentResult);\r\n  \r\n              }\r\n            }\r\n            else {\r\n              \r\n              //Stranamente non mi ha tornato nulla, quindi il pagamento è fallito\r\n              myPaymentResult = new PaymentProcess(this.myPaymentMode);\r\n              myPaymentResult.processResult = false;\r\n              myPaymentResult.messageResult = 'Pagamento fallito';\r\n\r\n              //Pagamento Fallito\r\n              this.onPaymentFailed(myPaymentResult);\r\n\r\n            }\r\n          })\r\n  \r\n  \r\n        }\r\n  \r\n      }\r\n      else {\r\n        //Pagamento non selezionato\r\n        this.showMessage('E\\' necessario selezionare un pagamento');\r\n      }\r\n      \r\n    }\r\n    else {\r\n      this.showMessage('Contattare la struttura. Prenotazioni gratuite concluse');\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  /**\r\n   * Pagamento andato a buon fine\r\n   * @param resultPayment Risultato del pagamento\r\n   */\r\n  onPaymentSuccess(resultPayment?: PaymentProcess) {\r\n\r\n    //Pagamento corretto\r\n    if (resultPayment && resultPayment.processResult)  {\r\n\r\n      //Nessuna transazione sembra avvenuta\r\n      if (resultPayment.idElectronicResult.length == 0) {\r\n\r\n        this.activePrenotazione.IDTRANSACTION = '';\r\n        this.activePrenotazione.IDORDER = '';\r\n\r\n        this.activePrenotazione.CHANNELPAYMENT = resultPayment.channelPayment;\r\n\r\n        //Imposto nella prenotazione che il residuo è il totale\r\n        this.activePrenotazione.RESIDUO = this.activePrenotazione.TOTALE;\r\n        //e che non ho incassato nulla\r\n        this.activePrenotazione.INCASSATO = 0;\r\n\r\n\r\n      }\r\n      else {\r\n\r\n        this.activePrenotazione.RESIDUO = 0;\r\n        this.activePrenotazione.INCASSATO = this.activePrenotazione.TOTALE;\r\n        \r\n        //Non riesco ad ottenere idTransaction e quindi non lo mando\r\n        this.activePrenotazione.IDTRANSACTION = '';\r\n        \r\n        //Dovrebbe essere idOrder\r\n        this.activePrenotazione.IDORDER = resultPayment.idElectronicResult;\r\n        this.activePrenotazione.CHANNELPAYMENT = resultPayment.channelPayment;\r\n\r\n      }\r\n\r\n\r\n      //Pagamento avvenuto correttamente\r\n      //Posso salvare la prenotazione e poi scappare\r\n          //Visualizzo il loading controller\r\n          this.loadingController.create({\r\n            message: 'Salvataggio Prenotazione',\r\n            spinner: 'circular'\r\n          })\r\n          .then(elLoading => {\r\n            //Creo il loading\r\n            elLoading.present();\r\n  \r\n            //Effettuo il salvataggio\r\n            this.startService\r\n                .requestSavePrenotazione()\r\n                .then(docPrenotazione => {\r\n                  //Salvataggio avvenuto correttamente\r\n                  //Chiudo il loading\r\n                  elLoading.dismiss();\r\n  \r\n                  //Ecco il documento ricevuto\r\n                  this.activePrenotazione = docPrenotazione;\r\n  \r\n                    //Se non è valida visualizzo un messsaggio\r\n                  if (!docPrenotazione.ISVALID) {\r\n  \r\n                    this.showMessage(docPrenotazione.MSGINVALID);\r\n  \r\n                  }\r\n                  else {\r\n                    //Imposto anche la pianificazione\r\n                    this.docPianificazione = this.activePrenotazione.PRENOTAZIONEPIANIFICAZIONE[0];\r\n                  }\r\n  \r\n                  \r\n                  //Eseguo operazioni successive al salvataggio\r\n                  this.onAfterSavePrenotazione();\r\n  \r\n  \r\n                })\r\n                .catch(errMessage => {\r\n                      //Chiudo il loader\r\n                      elLoading.dismiss();\r\n                      this.showMessage(errMessage);\r\n                  });  \r\n                \r\n          });\r\n\r\n\r\n    }\r\n\r\n\r\n    \r\n    \r\n\r\n  }\r\n\r\n  /**\r\n   * Si sono verificati errori nel pagamento\r\n   * @param resultPayment Risultato Pagamento Fallito\r\n   */\r\n  onPaymentFailed(resultPayment?: PaymentProcess) {\r\n    let message = 'Si sono verificati errori nel pagamento';\r\n    let title = 'Pagamento Fallito';\r\n\r\n    if (resultPayment) {\r\n      if (resultPayment.messageResult) {\r\n        message = resultPayment.messageResult;\r\n      }\r\n    }\r\n\r\n    //Visualizzo il messaggio\r\n    this.showAlert(message, title);\r\n    \r\n  }\r\n\r\n  //#endregion\r\n\r\n     /**\r\n   * Visualizza un messaggio come Toast\r\n   * @param message Messaggio da mostrare\r\n   */\r\n  showMessage(message: string) {\r\n\r\n    //Creo un messaggio\r\n    this.toastCtrl.create({\r\n      message: message,\r\n      duration: 3000\r\n    })\r\n    .then(tstMsg => {\r\n      tstMsg.present();\r\n    });\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * Visualizza un alert con un pulsante Ok se !buttons, oppure con i bottoni dell'array\r\n   * @param messaggio Messaggio\r\n   * @param titolo Titolo\r\n   */\r\n  showAlert(messaggio:string, titolo?:string, bottoni?:string[]) {\r\n\r\n    if (!bottoni || bottoni.length == 0) {\r\n      bottoni = [];\r\n      bottoni.push('Ok');\r\n    }\r\n\r\n    //Mostro l'alert richiesto\r\n    this.alertCtrl.create({      \r\n      header: (titolo?titolo:'Attenzione'),      \r\n      message: messaggio,\r\n      buttons: bottoni\r\n    })\r\n    .then(elAlert => {\r\n      elAlert.present();\r\n    })\r\n  }\r\n  \r\n\r\n  openLink(url:string)\r\n  {\r\n    Browser.open({url:url})\r\n  }\r\n\r\n\r\n  /**\r\n * Recupera il link per le condizioni di vendita Prenotazioni e apre il browser\r\n */\r\n  onClickCondizioniVendita(): void {\r\n    let link: AreaLink;\r\n\r\n\r\n    if (this.docArea) {\r\n\r\n      link = this.docArea.findAreaLinkByPageType(PageType.condizioniVenditaPrenotazioni);\r\n  \r\n      if (link && link.REFERURL) {\r\n\r\n        //Apro il link\r\n        this.openLink(link.REFERURL);\r\n\r\n      }\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  \r\n}\r\n\r\n\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"primary\">\r\n      <ion-button (click)=\"closeModal()\">\r\n        <ion-icon slot=\"icon-only\" ios=\"close\" md=\"close\"></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n\r\n    <ion-title>Finalizza</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <div style=\"background-color:#EFF1F8\" >\r\n    <ion-grid class=\"griglia-principale\">\r\n      <ion-row>\r\n        <ion-col>\r\n          <ion-button \r\n              color=\"danger\" \r\n              expand=\"block\" \r\n              class=\"full-buttons\" \r\n              (click)=\"closeModal()\">\r\n            Aspetta, voglio modificare\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row>\r\n        <ion-col>\r\n          <ion-card>\r\n            <ion-grid>\r\n              <ion-row class=\"ion-align-items-center\">\r\n                <ion-col size=\"3\" class=\"ion-text-center  left-col\">\r\n                  <h6 class=\"ion-no-margin\">{{ docPianificazione?.DATAORAINIZIO | date: \"EEE\" | uppercase}}</h6>\r\n                  <h4 class=\"ion-no-margin\" style=\"margin-top: 0px; margin-bottom: 0px;\">{{docPianificazione?.DATAORAINIZIO | date: \"dd\"}}</h4>\r\n                  <p class=\"ion-no-margin\">{{ docPianificazione?.DATAORAINIZIO | date: \"MMMM\" | titlecase}}</p>\r\n                </ion-col>\r\n                <ion-col size=\"9\">\r\n                  <h6>{{docPianificazione?._DESCRSPORT}}</h6>\r\n                  <h4>{{selectedCampo?.DENOMINAZIONE}}</h4>\r\n                  <h6>{{getAddressLocation()|titlecase}}</h6>\r\n                </ion-col>\r\n              </ion-row>\r\n            </ion-grid>\r\n          </ion-card>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row>\r\n        <ion-col>\r\n          <ion-card>\r\n            <ion-grid>\r\n              <ion-row class=\"ion-align-items-center\">\r\n                <ion-col size=\"3\" class=\"ion-text-center left-col\">\r\n                  <h6 class=\"ion-no-margin\">{{docPianificazione?.DATAORAINIZIO | date: \"HH:mm\" | uppercase}}</h6>\r\n                  <h6 class=\"ion-no-margin\">{{docPianificazione?.DATAORAFINE | date: \"HH:mm\"}}</h6>\r\n                </ion-col>\r\n                <ion-col size=\"9\">\r\n                  <h5 class=\"ion-no-margin\">{{docPianificazione?.DURATAORE}} {{docPianificazione?.DURATAORE!=1? \"Ore\":\"Ora\"}}</h5>\r\n                </ion-col>\r\n              </ion-row>\r\n            </ion-grid>\r\n          </ion-card>\r\n        </ion-col>\r\n      </ion-row>\r\n      <ion-row>\r\n        <ion-col>\r\n          <app-player-number [numPlayer]=\"docPianificazione?.NUMPARTECIPANTI\" (changeNumPlayer)=\"onChangedNumPlayer($event)\" ></app-player-number>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n\r\n\r\n\r\n  </div>\r\n\r\n\r\n\r\n</ion-content>\r\n<ion-footer>\r\n\r\n  <ion-grid>\r\n    <ion-list>\r\n      <ion-item button (click)=\"disclaimer=!disclaimer; \" lines=\"full\" >\r\n        <ion-checkbox \r\n              [(ngModel)]=\"disclaimer\" \r\n              slot=\"start\"\r\n              (click)=\"$event.stopPropagation();\">\r\n        </ion-checkbox>\r\n        <ion-label class=\"ion-text-wrap\">\r\n          <p>Lette e approvate le\r\n          <a (click)=\"$event.stopPropagation(); onClickCondizioniVendita();\">condizioni di vendita</a>\r\n        </p>\r\n        </ion-label>\r\n      </ion-item>\r\n\r\n      <!-- Componente scelta Pagamento -->  \r\n        <app-payment-mode\r\n          [arPayment]=\"myListPayment\"\r\n          (onPaymentModeChoosed)=\"onPaymentModeSelected($event)\"></app-payment-mode>\r\n          \r\n\r\n        <ion-item lines=\"none\" id=\"item-totale\">\r\n          <ion-label slot=\"start\">Totale</ion-label> \r\n          <ion-label style=\"text-align:right;\">\r\n          {{activePrenotazione?.TOTALE | currency: \"EUR\"}}\r\n          </ion-label>\r\n        </ion-item>\r\n\r\n    </ion-list>\r\n\r\n    <ion-row>\r\n      <ion-col>\r\n        <ion-button \r\n            color=\"tertiary\" \r\n            expand=\"block\" \r\n            class=\"full-buttons\" \r\n            [disabled]=\"!disclaimer || !activePrenotazione?.ISVALID || !mySelectedPayment \" \r\n            (click)=\"onConfirm()\">\r\n          Conferma Prenotazione\r\n        </ion-button>\r\n      </ion-col>\r\n    </ion-row>\r\n  </ion-grid>\r\n</ion-footer>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PaypalPageRoutingModule } from './payment-routing.module';\r\n\r\nimport { PaymentPage } from './payment.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    PaypalPageRoutingModule\r\n  ],\r\n  declarations: [PaymentPage],\r\n  exports: [PaymentPage]\r\n})\r\nexport class PaypalPageModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { BookingPage } from './booking.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BookingPage\r\n  },\r\n  {\r\n    path: 'bookingsummary/:bookId',\r\n    loadChildren: () => import('./bookingsummary/bookingsummary.module').then( m => m.BookingsummaryPageModule)\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class BookingPageRoutingModule {}\r\n"]}