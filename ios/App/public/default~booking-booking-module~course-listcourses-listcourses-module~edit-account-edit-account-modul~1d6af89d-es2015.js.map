{"version":3,"sources":["./src/app/pages/auth/verify/verify.page.ts","./src/app/pages/auth/verify/verify.page.html","./src/app/pages/auth/verify/verify.module.ts","./src/app/pages/auth/verify/verify-routing.module.ts"],"names":[],"mappings":"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","file":"default~booking-booking-module~course-listcourses-listcourses-module~edit-account-edit-account-modul~1d6af89d-es2015.js","sourcesContent":["import { Component, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\r\nimport { ModalController, LoadingController, ToastController, NavController, AlertController, NavParams } from '@ionic/angular';\r\nimport { StartConfiguration } from 'src/app/models/start-configuration.model';\r\nimport { StartService } from 'src/app/services/start.service';\r\nimport { Utente, ParamsVerifica } from 'src/app/models/utente.model';\r\nimport { Plugins } from '@capacitor/core';\r\nimport { Gruppo } from 'src/app/models/gruppo.model';\r\nimport { TipoVerificaAccount, PageType, RequestPincodeUse, ValueList, Sesso } from 'src/app/models/valuelist.model';\r\nimport { Area } from 'src/app/models/area.model';\r\nimport { AreaLink } from 'src/app/models/arealink.model';\r\nimport { AccountRequestCode, AccountOperationResponse, AccountVerifyCode } from 'src/app/models/accountregistration.model';\r\n\r\nimport { CryptoService } from 'src/app/library/services/crypto.service';\r\nconst { Browser } = Plugins;\r\nimport { MyDateTime } from 'src/app/library/models/mydatetime.model';\r\nimport { PostResponse } from 'src/app/library/models/postResult.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-verify',\r\n  templateUrl: './verify.page.html',\r\n  styleUrls: ['./verify.page.scss'],\r\n})\r\nexport class VerifyPage implements OnInit {\r\n\r\n    //se mostrare l'input cap nascita\r\n    showInputCapNascita = false\r\n    //l'oggetto ricevuto come parametro all'apertura della videata in modale\r\n    params : ParamsVerifica = new ParamsVerifica\r\n\r\n   //per utilizzare l'enum nell'html\r\n   pageState: typeof PageState=PageState;\r\n   tipoVerifica: typeof TipoVerificaAccount = TipoVerificaAccount;\r\n \r\n   //variabile che indica lo stato della pagina\r\n   //Se posizionato su  Register, Verifiy o Welcome\r\n   actualStatePage:PageState;\r\n \r\n \r\n   //Array con gli step possibili in registrazione\r\n   stepRegistration: PageState[] = [];\r\n   indexStepRegistration: number = 0;\r\n \r\n   //Documento per la richiesta invio codici al server\r\n   docRichiestaCodici: AccountRequestCode = new AccountRequestCode();\r\n  \r\n \r\n   //varibili formGroup (per usare i reactive forms)\r\n   formRegister: FormGroup;\r\n   formVerifyTel: FormGroup;\r\n   formVerifyMail: FormGroup;\r\n   formContact: FormGroup;\r\n \r\n   //Dati\r\n   startConfig:StartConfiguration;\r\n   docGruppo: Gruppo;\r\n   docArea: Area;\r\n   \r\n   //Utente\r\n   docUtente: Utente;\r\n   \r\n   //Restituisce true se l'app sta girando su Desktop\r\n   isDesktop:boolean;\r\n   \r\n   //Verifiche\r\n   emailVerifyNeeded: boolean;\r\n   smsVerifyNeeded: boolean;\r\n   \r\n   //lista delle decodifiche del sesso\r\n   listSesso : ValueList[]=[];\r\n   //\r\n   today: string;\r\n \r\n   //#region questi servono per accedere ai corrispettivi elementi in HTML\r\n   @ViewChild('c1') c1;\r\n   @ViewChild('c2') c2;\r\n   @ViewChild('c3') c3;\r\n   @ViewChild('c4') c4;\r\n   @ViewChild('c5') c5;\r\n   @ViewChild('c6') c6;\r\n   @ViewChild('c7') c7;\r\n   @ViewChild('c8') c8;\r\n   @ViewChild('c9') c9;\r\n   @ViewChild('c10') c10;\r\n   \r\n   //#endregion\r\n \r\n \r\n   constructor(\r\n     private modalCtrl:ModalController,\r\n     private startService:StartService,\r\n     private loadingController:LoadingController,\r\n     private toastCtrl:ToastController,\r\n     private alertCtrl: AlertController,\r\n     private cryptoService: CryptoService,\r\n     private navParams: NavParams\r\n   ) {\r\n    \r\n    //per il momento, imposto che non devo verificare niente\r\n    this.emailVerifyNeeded = false;\r\n    this.smsVerifyNeeded = false \r\n\r\n     //Stato Pagina registrazione\r\n     this.indexStepRegistration = 0;\r\n \r\n     //Posizionato sulla pagina di login\r\n     this.actualStatePage = PageState.REGISTRATION;\r\n    \r\n \r\n     //Richiedo lo startConfig\r\n      this.startConfig = startService.actualStartConfig\r\n      if (this.startConfig && this.startConfig.gruppo) {\r\n\r\n\r\n        //Memorizzo il Gruppo con le sue Opzioni\r\n        this.docGruppo = this.startConfig.gruppo;\r\n      }\r\n\r\n     //Prelevo l'area selezionata \r\n     this.docArea = this.startService.areaSelectedValue;\r\n\r\n     //recupero l'utente\r\n     this.docUtente=this.startService.actualUtente;\r\n\r\n    //recupero il parametro\r\n    \r\n    this.params = this.navParams.get('params');\r\n    if (this.params==null||this.params==undefined){\r\n      //se non ho i parametri, esco\r\n      this.showMessage(\"Errore\");\r\n      this.closeModal();\r\n    }\r\n     \r\n    \r\n\r\n\r\n    //recupero le decodifiche della lista sesso\r\n    this.listSesso= ValueList.getArray(Sesso);\r\n\r\n    //il giorno attuale per filtrare la data di nascita in input\r\n    this.today=this.today=MyDateTime.formatDateISO(new Date);\r\n\r\n  }\r\n \r\n   ngOnInit() {\r\n     this.createArrayStepRegistration(this.docGruppo);\r\n     this.createRegisterForm();\r\n     this.createVerifyForm();\r\n     this.createContactForm();\r\n     this.isDesktop=this.startService.isDesktop\r\n   }\r\n \r\n\r\n \r\n \r\n   /**\r\n    * Crea un array con i passaggi disponibili in registrazione\r\n    * a seconda delle richieste del gruppo\r\n    * Se il gruppo non vuole verifiche, si passa subito ai dati\r\n    */\r\n    createArrayStepRegistration(docGruppo: Gruppo) {\r\n     this.stepRegistration = [];\r\n     \r\n      \r\n      switch (this.params.tipoVerifica){\r\n        \r\n        //se mi passano \"verificaemail\", devo verificare solo la mail\r\n        case TipoVerificaAccount.verificaemail:\r\n        this.emailVerifyNeeded=true;\r\n        this.smsVerifyNeeded=false;\r\n        break;\r\n        \r\n        //se mi passano \"verificasms\", devo verificare solo l'sms\r\n        case TipoVerificaAccount.verificasms:\r\n        this.emailVerifyNeeded=false;\r\n        this.smsVerifyNeeded=true;\r\n        break;\r\n        \r\n        //se mi passano verificaemailsms, devo verificare entrambi\r\n        case TipoVerificaAccount.verificaemailsms:\r\n        this.emailVerifyNeeded=true;\r\n        this.smsVerifyNeeded=true;\r\n        break;\r\n        \r\n        //in tutti gli altri casi, non devo verificare niente\r\n        default:\r\n        this.smsVerifyNeeded=false;\r\n        this.emailVerifyNeeded=false;\r\n        break;\r\n      }\r\n\r\n      //se devo verificare email, sms, o entrambi, aggiungo pagina contact e verify all'array di pagine\r\n      if (this.emailVerifyNeeded||this.smsVerifyNeeded){\r\n\r\n        this.stepRegistration.push(PageState.CONTACT);\r\n        this.stepRegistration.push(PageState.VERIFY);\r\n      }\r\n\r\n      //se mi è stato detto di fare anche l'aggiornamento dell'anagrafica, aggiungo lo step necessario\r\n      if (this.params.updateDocUtente){\r\n        this.stepRegistration.push(this.pageState.REGISTRATION);\r\n      }\r\n\r\n      //Mi posiziono sul primo step\r\n      if (this.stepRegistration[0]){\r\n        this.actualStatePage=this.stepRegistration[0];\r\n      }\r\n   }\r\n \r\n   /**\r\n    * Effettua l'avanzamento di pagina nello Step Registrazione\r\n    */\r\n   nextStepRegistration() {\r\n     \r\n     if (this.indexStepRegistration + 1 < this.stepRegistration.length) {\r\n       this.indexStepRegistration++;\r\n       this.actualStatePage=this.stepRegistration[this.indexStepRegistration];\r\n       \r\n     }\r\n     else{\r\n       this.closeModal();\r\n     }\r\n   }\r\n \r\n   /**\r\n    * Torna indietro negli Step di Registrazione\r\n    */\r\n   backStepRegistration() {\r\n \r\n     if (this.indexStepRegistration - 1 >= 0) {\r\n       this.indexStepRegistration--;\r\n       this.actualStatePage=this.stepRegistration[this.indexStepRegistration];\r\n  \r\n       }\r\n     }    \r\n   \r\n   /**\r\n    * Chiusura della videata\r\n    */  \r\n   closeModal(){\r\n     this.modalCtrl.dismiss();\r\n   }\r\n \r\n \r\n \r\n   /**\r\n    * Pulsante Avanti o Acced presente nel footer\r\n    */\r\n   onClickFooterAvanti() {\r\n     switch(this.actualStatePage) {\r\n \r\n       case PageState.CONTACT:\r\n           //Siamo sulla pagina dei Contatti e dobbiamo gestirne la fase\r\n           this.onClickAvantiContact();\r\n         break;\r\n \r\n       case PageState.VERIFY:\r\n         //Siamo sulla pagina di inserimento codici da verificare\r\n         this.onClickAvantiVerifica();\r\n         break;\r\n \r\n       case PageState.REGISTRATION:\r\n         //Siamo nella parte finale della registrazione con i dati \r\n         //e l'invio dei dati al server\r\n         this.onClickAggiornaDati();\r\n       \r\n       default:\r\n         break;\r\n \r\n     }\r\n   }\r\n  \r\n   //#region GESTIONE PAGINA CONTATTI E CODICI\r\n \r\n   /*\r\n   L'intera fase di registrazione è gestita con un array this.stepRegistration\r\n   Dentro ci sono i passaggi richiesti (che sono variabili a seconda delle verifiche richieste)\r\n \r\n   this.indexStepRegistration è l'indice dell'array su cui siamo posizionati\r\n   this.actualStatePage è lo Stato Attuale (recuperato dall'array)\r\n \r\n   */\r\n \r\n   /**\r\n    * Click di Avanti sulla pagina con i contatti\r\n    */\r\n   onClickAvantiContact() {\r\n\r\n      if (this.formContact.valid){\r\n        \r\n        //azzero il documento di richiesta\r\n        this.docRichiestaCodici = new AccountRequestCode();\r\n        this.docRichiestaCodici.REQUESTEMAILCODE=false;\r\n        this.docRichiestaCodici.REQUESTSMSCODE=false;\r\n\r\n        //inserisco i dati generali \r\n         this.docRichiestaCodici.IDAREA = this.docArea.ID;\r\n         this.docRichiestaCodici.USE = RequestPincodeUse.forValidation; \r\n\r\n        //se devo verificare la mail, inserisco i dati nel documento\r\n        if (this.emailVerifyNeeded){\r\n          this.docRichiestaCodici.REQUESTEMAILCODE=true;\r\n          this.docRichiestaCodici.EMAIL=this.formContact.value.email;\r\n        }\r\n\r\n        //se devo verificare il tel, inserisco i dati nel documento\r\n        if (this.smsVerifyNeeded){\r\n          this.docRichiestaCodici.REQUESTSMSCODE=true;\r\n          this.docRichiestaCodici.TELEPHONE=this.formContact.value.telephone;\r\n        }\r\n\r\n        //ora posso fare la richiesta al server\r\n        this.sendServerRichiestaCodici(true);\r\n\r\n      }\r\n\r\n      //se il form non è valido, non faccio niente\r\n      else {\r\n        return;\r\n      }\r\n    }\r\n\r\n\r\n  \r\n \r\n   /**\r\n    * Chiede al server di inviare i codici pin necessari\r\n    * Se tutto va a buon fine si sposta nella pagina di verifica, altrimenti segnala l'errore\r\n    * @param onSuccessChangePage Se l'operazione ha successo passa alla pagina successiva\r\n    * @param customSuccessMessage Se presente viene mostrato in caso di richiesta a buon fine\r\n    */\r\n   sendServerRichiestaCodici(onSuccessChangePage:boolean = true, customSuccessMessage='Codice inviato con successo!', customErrorMessage='Errore nell\\'invio del codice, riprova') {\r\n \r\n     this.loadingController\r\n       .create({\r\n           message: 'Invio Codici in corso...'\r\n       })\r\n       .then(element => {\r\n \r\n         //Creo il loading\r\n         element.present();\r\n \r\n         //Ora chiedo al server di inviare i codici\r\n \r\n         //Chiamo il servizio\r\n\r\n         \r\n         this.startService\r\n               .validationSendCodici(this.docRichiestaCodici, this.docUtente)\r\n               .then((responseServer:AccountOperationResponse) => {\r\n \r\n                 //Chiudo il Loading Controller\r\n                 element.dismiss();\r\n \r\n                 if (responseServer.result){\r\n\r\n                  //Qui in teoria i codici sono stati inviati\r\n                  //Memorizzo IDREFER per le chiamate successive\r\n                  this.docRichiestaCodici.IDREFER = responseServer.idRefer;\r\n  \r\n                  //Azzero i flag che servono a richiedere i codici\r\n                  this.docRichiestaCodici.REQUESTSMSCODE = false;\r\n                  this.docRichiestaCodici.REQUESTEMAILCODE = false;\r\n                  \r\n                  this.showMessage(customSuccessMessage);\r\n                  //Mi sposto alla pagina successiva (di verifica)\r\n                  if (onSuccessChangePage) {\r\n\r\n                    //Cancello gli input code presenti nelle formTel e Mail\r\n                    this.clearInputPinCode();\r\n                    \r\n                    //Devo spostarmi alla pagina di verifica\r\n                    this.nextStepRegistration();\r\n                  }\r\n                }\r\n                else{\r\n                  //se il server ha risposto, ma non è riuscito ad inviare\r\n                  \r\n                  this.showMessage(customErrorMessage);\r\n                }\r\n               })\r\n               .catch(err => {\r\n                   //Chiudo il Loading Controller\r\n                   element.dismiss();\r\n                   //Visualizzo il messaggio\r\n                   console.log(err);\r\n                   this.showMessage(\"Errore di connessione\");\r\n               })\r\n\r\n     });\r\n     \r\n   }\r\n \r\n \r\n   //#endregion\r\n \r\n \r\n   //#region GESTIONE PAGINA VERIFICA\r\n \r\n   /**\r\n    * evento scatenato quando l'utente tappa su \"reinvia codice\"\r\n    * Eì possibile richiedere il reinvio di 1 solo codice alla volta\r\n    * @param tipo Reinvio Codice Email oppure Sms\r\n    */\r\n   onClickReinviaCodice(tipo: TipoVerificaAccount){\r\n     let askMessage = '';\r\n     let askEmail = false;\r\n     let askTel = false;\r\n \r\n     if (this.docRichiestaCodici) {\r\n \r\n       askMessage = 'Verrà inviato un nuovo codice a ';\r\n \r\n       switch (tipo) {\r\n         case TipoVerificaAccount.verificaemail:\r\n             askMessage += this.docRichiestaCodici.EMAIL;\r\n             //Uso le variabili temporanee per indicare che vorrebbe il codice in email\r\n             askEmail = true;\r\n \r\n           break;\r\n \r\n         case TipoVerificaAccount.verificasms:\r\n             askMessage += this.docRichiestaCodici.TELEPHONE;\r\n             //Uso le variabili temporanee per indicare che vorrebbe il codice su telefono\r\n             askTel= true;\r\n           break;\r\n       \r\n         default:\r\n           break;\r\n       }\r\n \r\n       //Faccio la richiesta se desidera un reinvio codici\r\n       this.alertCtrl.create({\r\n         header: 'Reinvio pincode',\r\n         message: askMessage,\r\n\r\n         buttons: [\r\n           {\r\n             text: 'Annulla',\r\n             role: 'cancel',\r\n           },\r\n           {\r\n             text: 'Reinvia',\r\n             handler: () => {\r\n               \r\n               //Reimposto il documenti di Richiesta con quello che vuole\r\n               this.docRichiestaCodici.REQUESTEMAILCODE = askEmail;\r\n               this.docRichiestaCodici.REQUESTSMSCODE = askTel;\r\n \r\n               const msg = 'Codice reinviato con successo';\r\n               //Faccio la richiesta al server e indico di non cambiare\r\n               //pagina al termine della richiesta\r\n               this.sendServerRichiestaCodici(false, msg);\r\n             }\r\n           }\r\n         ]\r\n       })\r\n       .then (element => {\r\n         element.present();\r\n       })\r\n \r\n       \r\n     }\r\n \r\n   }\r\n \r\n   \r\n   /**\r\n   * evento scatenato quando l'utente clicca sul pulsante conferma della videata di verifica\r\n   * dei recapiti\r\n   */\r\n   onClickAvantiVerifica()\r\n   {\r\n     //Devo inviare al server i dati inseriti dall'utente\r\n     let altMessage = '';\r\n     let docVerify: AccountVerifyCode;\r\n \r\n     if (!this.isEnableAvantiOnVerify()) {\r\n       altMessage = 'Controllare i dati inseriti';\r\n     }\r\n     else {\r\n       //I codici sono stati richiesti e dovrei avere l'IDREFER\r\n       if (this.docRichiestaCodici && this.docRichiestaCodici.IDREFER) {\r\n         \r\n           if (this.docRichiestaCodici.IDREFER.length !== 0) {\r\n             //Posso preparare il documento per la verifica\r\n             docVerify = new AccountVerifyCode();\r\n             docVerify.IDAREA = this.docRichiestaCodici.IDAREA;\r\n             docVerify.IDREFER = this.docRichiestaCodici.IDREFER;\r\n             \r\n             //Devo passare il pincode Email\r\n             if (this.docGruppo.APPTIPOVERIFICA == TipoVerificaAccount.verificaemail || \r\n               this.docGruppo.APPTIPOVERIFICA == TipoVerificaAccount.verificaemailsms\r\n                ) \r\n                {\r\n                  docVerify.EMAILPINCODE = this.getInputVerifyCode(TipoVerificaAccount.verificaemail);\r\n                }\r\n \r\n \r\n             //Devo passare il pincode SMS\r\n             if (this.docGruppo.APPTIPOVERIFICA == TipoVerificaAccount.verificasms || \r\n               this.docGruppo.APPTIPOVERIFICA == TipoVerificaAccount.verificaemailsms\r\n                ) \r\n                {\r\n                  docVerify.SMSPINCODE = this.getInputVerifyCode(TipoVerificaAccount.verificasms);\r\n                }\r\n \r\n             \r\n             //Tutto pronto per effettuare la richiesta di verifica pincode\r\n             this.sendServerVerificaCodici(docVerify);\r\n \r\n \r\n           }\r\n           else {\r\n             altMessage = 'Errore: Richiedere il reinvio';\r\n           }\r\n \r\n       }\r\n       else {\r\n         altMessage = 'Errore: Richiedere il reinvio';\r\n       }\r\n     }\r\n \r\n \r\n     //Nel caso mostro un messaggio di errore\r\n     if (altMessage.length!=0) {\r\n       this.showMessage(altMessage);\r\n     }\r\n   }\r\n \r\n \r\n \r\n   /**\r\n    * Invio al server i pincode inseriti dall'utente\r\n    * Se tutto va a buon fine, le informazioni saranno rese VERIFICATE\r\n    * @param docVerifica Documento per la verifica dei codici\r\n    */\r\n   sendServerVerificaCodici(docVerifica: AccountVerifyCode) {\r\n \r\n     if (docVerifica) {\r\n \r\n       this.loadingController\r\n       .create({\r\n           message: 'Verifica Codici...'\r\n       })\r\n       .then(elLoading => {\r\n \r\n         //Creo il loading\r\n         elLoading.present();\r\n \r\n         //Faccio la richiesta al server\r\n         this.startService\r\n           .validationVerifyCodici(docVerifica)\r\n           .then((response:AccountOperationResponse) => {\r\n \r\n             //Chiudo il Loading \r\n             elLoading.dismiss();\r\n \r\n             //Verifica codici passata\r\n             if (response.result) {\r\n \r\n               //se nella richiesta (andata a buon fine), ho verificato la mail, lo segno nel docutente\r\n               if (this.docRichiestaCodici.REQUESTEMAILCODE) {\r\n                 this.docUtente.VERIFICATAMAIL=true;\r\n                 this.docUtente.EMAIL = this.docRichiestaCodici.EMAIL;\r\n               }\r\n\r\n               //se nella richiesta (andata a buon fine), ho verificato il cell, lo segno nel docutente\r\n               if (this.docRichiestaCodici.REQUESTSMSCODE){\r\n\r\n                 this.docUtente.VERIFICATAMOBILE=true;\r\n                 this.docUtente.MOBILENUMBER = this.docRichiestaCodici.TELEPHONE;\r\n               }\r\n               \r\n              \r\n                this.showMessage(\"Verifica completata con successo\");\r\n                //Posso spostarmi alla pagina successiva\r\n                this.nextStepRegistration();\r\n \r\n             }\r\n             else {\r\n \r\n               //Il server ha risposto, ma la verifica non è andata a buon fine (presumo codice errato)\r\n               this.showMessage(response.message);\r\n             }\r\n           })\r\n           .catch(err => {\r\n             //Qui qualcosa è andato storto\r\n \r\n             //Chiudo il Loading\r\n             elLoading.dismiss();\r\n \r\n             //Mostro il messaggio\r\n             this.showMessage(\"Errore di connessione\");\r\n           });\r\n       });\r\n     }\r\n     else{\r\n       this.showMessage('Errore, richiedere un nuovo codice');\r\n     }\r\n   }\r\n \r\n \r\n   //#endregion\r\n \r\n \r\n \r\n\r\n\r\n   \r\n \r\n   /**\r\n    * evento scatenato quando l'utente clicca \"aggiorna\" \r\n    * sulla pagina di inserimento dati\r\n    */\r\n   onClickAggiornaDati()\r\n   {\r\n     this.execAggiornaDati();\r\n   }\r\n   /**\r\n    * Invia al server i dati di registrazione\r\n    */\r\n   \r\n\r\n   execAggiornaDati() {\r\n\r\n\r\n    //recupero tutti i dati dal form\r\n    if (this.formRegister.valid)\r\n    {\r\n      \r\n      this.docUtente.NOMINATIVO='';\r\n      this.docUtente.NOME=this.formRegister.value.nome;\r\n      this.docUtente.COGNOME=this.formRegister.value.cognome;\r\n      this.docUtente.SESSO=this.formRegister.value.sesso;\r\n      this.docUtente.CODICEFISCALE=this.formRegister.value.cf;\r\n\r\n      this.docUtente.INDIRIZZO=this.formRegister.value.indResidenza;\r\n      this.docUtente.COMUNE=this.formRegister.value.comResidenza;\r\n      this.docUtente.CAP=this.formRegister.value.capResidenza;\r\n      this.docUtente.PROVINCIA=this.formRegister.value.provResidenza;\r\n      this.docUtente.ISOSTATO=this.formRegister.value.statoResidenza;\r\n\r\n      \r\n      if (this.formRegister.value.nascita) {\r\n        this.docUtente.NATOIL = new Date(this.formRegister.value.nascita);\r\n      }\r\n\r\n      this.docUtente.NATOA=this.formRegister.value.comNascita;\r\n      this.docUtente.NATOCAP=this.formRegister.value.capNascita;\r\n      this.docUtente.NATOPROV=this.formRegister.value.provNascita;\r\n      this.docUtente.NATOISOSTATO=this.formRegister.value.statoNascita;\r\n      \r\n      //EMAIL E NUMERO DI TELEFONO NON LI MODIFICO MAI\r\n\r\n      //USO IL LOADING CONTROLLER \r\n      this.loadingController\r\n            .create({\r\n              message: 'Aggiornamento dati...',\r\n              spinner: 'circular'\r\n            })\r\n            .then (elLoading => {\r\n              // Mostro il loading\r\n              elLoading.present();\r\n\r\n              //richiesta di aggiornamento al server\r\n              this.startService\r\n                  .updateUtente(this.docUtente)\r\n                  .then(result => {\r\n\r\n                      //visto che siamo nel then, l'operazione è sicuramente andata a buon fine\r\n                      elLoading.dismiss();\r\n                        this.showMessage('Info Aggiornate');\r\n                        this.closeModal();\r\n\r\n                  })\r\n                  .catch(error => {\r\n                    elLoading.dismiss();\r\n                    this.showMessage(error);\r\n                    console.log(error);\r\n                  });\r\n           });\r\n\r\n    }\r\n  }\r\n \r\n   /**\r\n    * Al termine della registrazione se tutto va a buon fine, procedo con il login automatico\r\n    */\r\n   loginAfterRegister(username: string, password: string)\r\n   {\r\n \r\n     if (username && password) {\r\n \r\n       // Chiamo il Servizio per eseguire l'autorizzazione\r\n       this.startService\r\n       .userLogin(username, password)\r\n       .then((dataResult:PostResponse) => {\r\n \r\n           // E' Arrivata una risposta NEGATIVA\r\n           if (!dataResult.result) {\r\n \r\n             this.showMessage(dataResult.message);\r\n           }\r\n           else {\r\n             //LOGIN ACCETTATO\r\n             \r\n             // MEMORIZZO LE CREDENZIALI PER UN SUCCESSIVO RECUPERO\r\n             this.startService.saveStorageUtente(username,password);\r\n           }\r\n       });\r\n     }\r\n \r\n \r\n     \r\n   }\r\n \r\n \r\n \r\n \r\n \r\n   /**\r\n    * procedura che sposta il focus sulla casella di input successiva\r\n    * @param evento parametri $event dell'eveno \"ion-input\", necessari a identificare\r\n    * in quale casella c'è stato l'input\r\n    */\r\n   changeFocus(evento)\r\n   {\r\n     let id=evento['target']['id'];\r\n         switch (id) {\r\n         case '1':\r\n           this.c2.setFocus();\r\n           break;\r\n         case '2':\r\n           this.c3.setFocus();\r\n           break;\r\n         case '3':\r\n           this.c4.setFocus();\r\n           break;\r\n         case '4':\r\n           this.c5.setFocus();\r\n           break;\r\n         case '6':\r\n           this.c7.setFocus();\r\n           break;\r\n         case '7':\r\n           this.c8.setFocus();\r\n           break;\r\n         case '8':\r\n           this.c9.setFocus();\r\n           break;\r\n         case '9': \r\n           this.c10.setFocus();\r\n           break;\r\n       \r\n         default:\r\n           break;\r\n       }\r\n     \r\n   }\r\n    \r\n \r\n //#region CREAZIONI FORM\r\n \r\n \r\n   /**\r\n    * Funzione di creazione della Form Contatti, usata come prima pagina \r\n    * nello StepRegistrazione\r\n    */\r\n   createContactForm(){\r\n     let pattTelefono = '^[+]*[0-9]*';\r\n     //Spiegazione pattern \r\n     //Per altre spiegazioni guardare qui https://regexr.com/3c53v\r\n \r\n     // ^ Il match parte dall'inizio della stringa\r\n     // [+] Qualsiasi elemento contenuto nelle quadre (quindi il +)\r\n     // * la regola precedente è opzionale\r\n     // [0-9] Qualsiasi elemento delle quadre\r\n     // * la regola precedente è opzionale\r\n \r\n \r\n     //form dei contatti (mail e telefono)\r\n     this.formContact=new FormGroup({\r\n       email: new FormControl(null, {\r\n         updateOn: 'change',\r\n         validators: [this.emailVerifyNeeded? Validators.required : Validators.nullValidator, Validators.email]\r\n       }),\r\n       telephone: new FormControl(null, {\r\n         updateOn: 'change',\r\n         validators: [this.smsVerifyNeeded? Validators.required : Validators.nullValidator, Validators.pattern(pattTelefono)]\r\n       })\r\n     });\r\n \r\n   }\r\n \r\n \r\n \r\n \r\n   createRegisterForm(){\r\n     let patternCodice = '^[A-Za-z]{6}[0-9]{2}[A-Za-z]{1}[0-9]{2}[A-Za-z]{1}[0-9]{3}[A-Za-z]{1}';\r\n     //form di registrazione\r\n     this.formRegister=new FormGroup({\r\n      nome:new FormControl(this.docUtente.NOME, {\r\n        updateOn:'change',\r\n        validators: [Validators.required]\r\n      }),\r\n      cognome:new FormControl(this.docUtente.COGNOME, {\r\n        updateOn:'change',\r\n        validators: [Validators.required]\r\n      }),\r\n      sesso:new FormControl(this.docUtente.SESSO, {\r\n        updateOn:'change',\r\n        validators: [Validators.required]\r\n      }),\r\n      nascita:new FormControl((this.docUtente.NATOIL ? this.docUtente.NATOIL.toISOString(): this.docUtente.NATOIL), {\r\n        updateOn:'change',\r\n        validators: [Validators.required]\r\n      }),\r\n      provNascita:new FormControl(this.docUtente.NATOPROV, {\r\n        updateOn:'change',\r\n        validators: [Validators.required]\r\n      }),\r\n      comNascita:new FormControl(this.docUtente.NATOA, {\r\n        updateOn:'change',\r\n        validators: [Validators.required]\r\n      }),\r\n      statoNascita:new FormControl(this.docUtente.NATOISOSTATO, {\r\n        updateOn:'change',\r\n        validators: [Validators.required]\r\n      }),\r\n      capNascita:new FormControl(this.docUtente.NATOCAP, {\r\n        updateOn:'change',\r\n        validators: [\r\n          \r\n        ]\r\n      }),\r\n      provResidenza:new FormControl(this.docUtente.PROVINCIA, {\r\n        updateOn:'change',\r\n        validators: [Validators.required]\r\n      }),\r\n      comResidenza:new FormControl(this.docUtente.COMUNE, {\r\n        updateOn:'change',\r\n        validators: [Validators.required]\r\n      }),\r\n      indResidenza:new FormControl(this.docUtente.INDIRIZZO, {\r\n        updateOn:'change',\r\n        validators: [Validators.required]\r\n      }),\r\n      capResidenza:new FormControl(this.docUtente.CAP, {\r\n        updateOn:'change',\r\n        validators: [Validators.required]\r\n      }),\r\n      statoResidenza:new FormControl(this.docUtente.ISOSTATO, {\r\n        updateOn:'change',\r\n        validators: [Validators.required]\r\n      }),\r\n      cf:new FormControl(this.docUtente.CODICEFISCALE, {\r\n        updateOn:'change',\r\n        validators: [Validators.required, Validators.pattern(patternCodice)]\r\n      })\r\n    })\r\n   }\r\n  \r\n\r\n   onCfChange(){\r\n\r\n    //se il cf cambia, quando l'utente esce dalla casella, provo a validarlo e riempire gli altri campi\r\n    let codFiscString: string = this.formRegister.value.cf;\r\n\r\n    if (codFiscString!=null&&codFiscString!=undefined){\r\n      \r\n      if (codFiscString.length != 0){\r\n  \r\n        //chiamo il servizio per decodificare il codice fiscale\r\n        this.startService.checkCodiceFiscale(codFiscString, true).then(codFiscObj => {\r\n          \r\n          //inserisco tutto quello che ho decodificato nel docutente\r\n          this.docUtente.NATOISOSTATO='Italia';\r\n          this.docUtente.NATOA=codFiscObj.comune;\r\n          this.docUtente.NATOPROV=codFiscObj.provincia;\r\n          this.docUtente.NATOIL=codFiscObj.dataNascita;\r\n          this.docUtente.SESSO=codFiscObj.sesso;\r\n          this.docUtente.NATOCAP=codFiscObj.cap;\r\n          \r\n\r\n          //aggiorno i campi del form\r\n\r\n          this.formRegister.get('comNascita').setValue(this.docUtente.NATOA);\r\n          this.formRegister.get('provNascita').setValue(this.docUtente.NATOPROV);\r\n          this.formRegister.get('nascita').setValue(this.docUtente.NATOIL.toISOString());\r\n          this.formRegister.get('sesso').setValue(this.docUtente.SESSO);\r\n          this.formRegister.get('statoNascita').setValue(this.docUtente.NATOISOSTATO);\r\n          this.formRegister.get('capNascita').setValue(this.docUtente.NATOCAP);\r\n\r\n          //setto il campo cf come valido\r\n          this.formRegister.controls['cf'].setErrors(null);\r\n\r\n  \r\n        }).catch(err => {\r\n\r\n          //qui in teoria il cf non ha passato neppure il check base, segno il campo come non valido\r\n          this.formRegister.controls['cf'].setErrors({'incorrect':true});\r\n          console.log(err);\r\n        })\r\n      }\r\n    }\r\n  }\r\n  \r\n \r\n   /**\r\n    * Funzione per la creazione del FORM relativo alla Verifica Pincode Email e SMS\r\n    */\r\n   createVerifyForm(){\r\n     this.formVerifyMail=new FormGroup({\r\n       c1: new FormControl(null, {\r\n         updateOn: 'change',\r\n         validators: [Validators.required, Validators.maxLength(1),Validators.minLength(1)]\r\n       }),\r\n       c2: new FormControl(null, {\r\n         updateOn: 'change',\r\n         validators: [Validators.required, Validators.maxLength(1),Validators.minLength(1)]\r\n       }),\r\n       c3: new FormControl(null, {\r\n         updateOn: 'change',\r\n         validators: [Validators.required, Validators.maxLength(1),Validators.minLength(1)]\r\n       }),\r\n       c4: new FormControl(null, {\r\n         updateOn: 'change',\r\n         validators: [Validators.required, Validators.maxLength(1),Validators.minLength(1)]\r\n       }),\r\n       c5: new FormControl(null, {\r\n         updateOn: 'change',\r\n         validators: [Validators.required, Validators.maxLength(1),Validators.minLength(1)]\r\n       })\r\n     });\r\n \r\n     this.formVerifyTel=new FormGroup({\r\n       c6: new FormControl(null, {\r\n         updateOn: 'change',\r\n         validators: [Validators.required, Validators.maxLength(1),Validators.minLength(1)]\r\n       }),\r\n       c7: new FormControl(null, {\r\n         updateOn: 'change',\r\n         validators: [Validators.required, Validators.maxLength(1),Validators.minLength(1)]\r\n       }),\r\n       c8: new FormControl(null, {\r\n         updateOn: 'change',\r\n         validators: [Validators.required, Validators.maxLength(1),Validators.minLength(1)]\r\n       }),\r\n       c9: new FormControl(null, {\r\n         updateOn: 'change',\r\n         validators: [Validators.required, Validators.maxLength(1),Validators.minLength(1)]\r\n       }),\r\n       c10: new FormControl(null, {\r\n         updateOn: 'change',\r\n         validators: [Validators.required, Validators.maxLength(1),Validators.minLength(1)]\r\n       })\r\n     });\r\n \r\n   }\r\n\r\n   /**\r\n    * Cancella i valori nelle caselle di input del form\r\n    * formVerifyMail e formVerifyTel\r\n    */\r\n   clearInputPinCode() {\r\n     for (let index = 1; index <= 5; index++) {\r\n       \r\n       this.formVerifyMail.get('c' + index).setValue(\"\");\r\n    \r\n     }\r\n\r\n     for (let index = 6; index <= 10; index++) {\r\n       \r\n      this.formVerifyTel.get('c' + index).setValue(\"\");\r\n   \r\n    }\r\n   }\r\n \r\n \r\n   /**\r\n    * \r\n    * @param tipo Tipo del codice richiesto\r\n    */\r\n   getInputVerifyCode(tipo: TipoVerificaAccount): string {\r\n     let strReturn: string = '';\r\n \r\n     if (tipo == TipoVerificaAccount.verificaemail) {\r\n       strReturn = this.formVerifyMail.value.c1 + \r\n                   this.formVerifyMail.value.c2 + \r\n                   this.formVerifyMail.value.c3 + \r\n                   this.formVerifyMail.value.c4 + \r\n                   this.formVerifyMail.value.c5;\r\n     }\r\n     else if (tipo == TipoVerificaAccount.verificasms) {\r\n       strReturn = this.formVerifyTel.value.c6 + \r\n                   this.formVerifyTel.value.c7 + \r\n                   this.formVerifyTel.value.c8 + \r\n                   this.formVerifyTel.value.c9 + \r\n                   this.formVerifyTel.value.c10;\r\n     }\r\n \r\n     return strReturn;\r\n   }\r\n \r\n   /**\r\n    * Il pulsante Avanti previsto nella form di Verifica\r\n    * deve tenere conto \r\n    * 1) Quanti sono i pincode da inserire \r\n    * 2) Quali ha inserito\r\n    */\r\n   isEnableAvantiOnVerify():boolean {\r\n     let enable = true;\r\n \r\n     if (this.docGruppo) {\r\n       if (this.docGruppo.APPTIPOVERIFICA !== TipoVerificaAccount.noverifica) {\r\n \r\n         switch (this.params.tipoVerifica) {\r\n           case TipoVerificaAccount.verificaemail:\r\n               enable = this.formVerifyMail.valid;\r\n             break;\r\n           case TipoVerificaAccount.verificasms:\r\n               enable = this.formVerifyTel.valid;\r\n             break;\r\n \r\n           case TipoVerificaAccount.verificaemailsms:\r\n             enable = this.formVerifyTel.valid && this.formVerifyMail.valid;\r\n             break;\r\n         \r\n           default:\r\n             break;\r\n         }\r\n \r\n       }\r\n     }\r\n     else {\r\n       enable = false;\r\n     }\r\n     return enable;\r\n   }\r\n \r\n \r\n \r\n \r\n //#endregion\r\n \r\n \r\n   //#region LINK ESTERNI\r\n \r\n   /**\r\n    * Controlla che nell'area ci sia il link della policy\r\n    */\r\n   isPolicyLink(): boolean {\r\n     let link: AreaLink;\r\n     let ready: boolean = false;\r\n \r\n     if (this.docArea) {\r\n \r\n       link = this.docArea.findAreaLinkByPageType(PageType.policyPrivacy);\r\n   \r\n       if (link && link.REFERURL) {\r\n         ready = true;\r\n       }\r\n     }\r\n \r\n     return ready;\r\n   }\r\n \r\n   //Apre il link delle Policy se presente\r\n   openPolicyLink() {\r\n     let link: AreaLink;\r\n     \r\n \r\n     if (this.docArea) {\r\n \r\n       link = this.docArea.findAreaLinkByPageType(PageType.policyPrivacy);\r\n   \r\n       if (link && link.REFERURL) {\r\n         this.openLink(link.REFERURL);\r\n       }\r\n     }\r\n \r\n     \r\n   }\r\n \r\n   //Apre un link in un'altra pagina\r\n   openLink(url:string)\r\n   {\r\n     Browser.open({url:url});\r\n   }\r\n \r\n   //#endregion\r\n \r\n     /**\r\n    * Procedura che visualizza un toast con il messaggio passato\r\n    * @param myMessage Il messaggio da visualizzare\r\n    */\r\n   async showMessage(myMessage: string) {\r\n     const toast = await this.toastCtrl\r\n       .create({\r\n         message: myMessage,\r\n         duration: 3000\r\n       });\r\n \r\n       toast.present();\r\n   }\r\n \r\n }\r\n \r\n \r\n enum PageState\r\n {\r\n   CONTACT = 210,\r\n   REGISTRATION = 220,\r\n   VERIFY = 230,\r\n   WELCOME = 300\r\n }\r\n ","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n      <ion-buttons \r\n              slot=\"start\" \r\n              *ngIf=\"actualStatePage==pageState.VERIFY\">\r\n\r\n          <ion-button fill=\"clear\" (click)=\"backStepRegistration()\">\r\n              <ion-icon name=\"arrow-back\"></ion-icon>\r\n          </ion-button>\r\n\r\n      </ion-buttons>\r\n\r\n      <ion-title *ngIf=\"actualStatePage!=pageState.REGISTRATION\">Verifica informazioni</ion-title>\r\n      <ion-title *ngIf=\"actualStatePage==pageState.REGISTRATION\">Aggiorna i tuoi dati</ion-title>\r\n\r\n      \r\n\r\n\r\n      <ion-buttons slot=\"end\">\r\n          <ion-button fill=\"clear\" (click)=\"closeModal()\">\r\n              <ion-icon name=\"close\" ></ion-icon>\r\n          </ion-button>\r\n      </ion-buttons>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n\r\n\r\n\r\n<!-- CONTENT PAGES -->\r\n<ion-content class=\"ion-padding\">\r\n  <div [ngClass]=\"this.isDesktop?'ion-text-center div-logo desktop':'ion-text-center div-logo'\">\r\n      <img [src]=\"startConfig.getUrlLogo()\">\r\n  </div>\r\n\r\n\r\n  <!-- PARTE CONTATTI -->\r\n  <div *ngIf=\"actualStatePage==pageState.CONTACT\" class=\"ion-padding-horizontal\">\r\n\r\n      <form [formGroup]=\"formContact\">\r\n\r\n\r\n          <ion-list>\r\n              <ion-item *ngIf=\"this.emailVerifyNeeded\">\r\n                  <ion-icon name=\"at-outline\" slot=\"start\" color=\"primary\"></ion-icon>\r\n                  <ion-input type=\"email\" placeholder=\"E-Mail\" formControlName=\"email\"></ion-input>\r\n              </ion-item>\r\n              <ion-item *ngIf=\"this.smsVerifyNeeded\">\r\n                  <ion-icon name=\"call-outline\" slot=\"start\" color=\"primary\"></ion-icon>\r\n                  <ion-input type=\"tel\" inputmode=\"tel\" placeholder=\"+39 Cellulare\" formControlName=\"telephone\" ></ion-input>\r\n              </ion-item>\r\n\r\n          </ion-list>\r\n\r\n          <ion-button \r\n                  fill=\"outline\" \r\n                  size=\"small\" \r\n                  expand=\"block\"\r\n                  *ngIf=\"isPolicyLink()\"\r\n                  (click)=\"openPolicyLink()\">\r\n              condizioni di trattamento dei dati\r\n          </ion-button>\r\n            \r\n\r\n          <div  class=\"ion-no-padding div-message\" *ngIf=\"this.emailVerifyNeeded&&!this.smsVerifyNeeded\">\r\n          <p>\r\n              <ion-text color=\"primary\">\r\n                  <ion-icon name=\"information-circle-outline\"></ion-icon>\r\n              </ion-text>\r\n              Indica una email valida dove sarà possibile inviarti le ricevute di prenotazioni, attestati dei corsi \r\n              ed altri documenti fiscali.                        \r\n          </p>\r\n\r\n          <h6>\r\n              Per effettuare la verifica ti inviamo una email contenente un pincode da inserire nei passaggi succesivi di registrazione\r\n          </h6>\r\n\r\n          <p>\r\n              <ion-text color=\"primary\">\r\n                  <h6><i>(in seguito potrai abilitare l'email anche per la ricezione di altro materiale informativo)</i></h6>\r\n              </ion-text>\r\n          </p>\r\n      </div>         \r\n      \r\n      \r\n      <div  class=\"ion-no-padding div-message\" *ngIf=\"this.emailVerifyNeeded&&this.smsVerifyNeeded\">\r\n          <p>\r\n              <ion-text color=\"primary\">\r\n                  <ion-icon name=\"information-circle-outline\"></ion-icon>\r\n              </ion-text>\r\n              Indica una email valida dove sarà possibile inviarti i documenti fiscali ed un numero di cellulare \r\n              per contattarti in caso di problemi.\r\n\r\n          </p>\r\n\r\n          <p>\r\n              <ion-text color=\"primary\">\r\n                  <h6><i>Per effettuare la verifica ti inviamo 2 pincode (email/SMS)  da inserire nei passaggi succesivi di registrazione</i></h6>\r\n              </ion-text>\r\n          </p>\r\n      </div>                  \r\n\r\n      <div  class=\"ion-no-padding div-message\" *ngIf=\"this.smsVerifyNeeded&&!this.emailVerifyNeeded\">\r\n          <p>\r\n              <ion-text color=\"primary\">\r\n                  <ion-icon name=\"information-circle-outline\"></ion-icon>\r\n              </ion-text>\r\n              Indica un numero di cellulare dove contattarti in caso di problematiche legate alle prenotazioni della struttura.\r\n\r\n          </p>\r\n              <p>\r\n              Per effettuare la verifica ti inviamo un SMS con un pincode da inserire nei passaggi succesivi di registrazione\r\n              </p>\r\n          <p>\r\n              <ion-text color=\"primary\">\r\n                  <h6><i>(non sarai mai contattato per promozioni o marketing)</i></h6>\r\n              </ion-text>\r\n          </p>\r\n      </div>                  \r\n\r\n\r\n              \r\n\r\n      </form>\r\n\r\n  </div>\r\n\r\n\r\n\r\n  <!-- PARTE VERIFICA CONTATTI -->\r\n  <div  *ngIf=\"actualStatePage==pageState.VERIFY\">\r\n      <div class=\"ion-no-padding div-message\" *ngIf=\"this.emailVerifyNeeded\">\r\n\r\n\r\n          <ion-item lines=\"none\">\r\n              <ion-button \r\n                  slot=\"start\" \r\n                  fill=\"clear\" \r\n                  color=\"danger\"\r\n                  (click)=\"onClickReinviaCodice(tipoVerifica.verificaemail)\">\r\n                  <ion-icon name=\"refresh-outline\"></ion-icon>\r\n              </ion-button>\r\n\r\n              <ion-label color=\"default\">Inserisci il pincode ricevuto tramite email</ion-label>\r\n          </ion-item>\r\n\r\n          <form [formGroup]=\"formVerifyMail\">\r\n              <div [ngClass]=\"this.isDesktop?'form-verifica desktop':'form-verifica'\">\r\n                  <ion-segment>\r\n                      <ion-input clearOnEdit type=\"tel\" inputmode=\"numeric\" class=\"ion-no-padding ion-align-self-center\" minlength=\"1\" maxlength=\"1\" formControlName=\"c1\" #c1 (ionInput)=\"changeFocus($event)\"id=\"1\"></ion-input>\r\n                      <ion-input clearOnEdit type=\"tel\" inputmode=\"numeric\" class=\"ion-no-padding ion-align-self-center\" minlength=\"1\" maxlength=\"1\" formControlName=\"c2\" #c2 (ionInput)=\"changeFocus($event)\"id=\"2\"></ion-input>\r\n                      <ion-input clearOnEdit type=\"tel\" inputmode=\"numeric\" class=\"ion-no-padding ion-align-self-center\" minlength=\"1\" maxlength=\"1\" formControlName=\"c3\" #c3 (ionInput)=\"changeFocus($event)\"id=\"3\"></ion-input>\r\n                      <ion-input clearOnEdit type=\"tel\" inputmode=\"numeric\" class=\"ion-no-padding ion-align-self-center\" minlength=\"1\" maxlength=\"1\" formControlName=\"c4\" #c4 (ionInput)=\"changeFocus($event)\"id=\"4\"></ion-input>\r\n                      <ion-input clearOnEdit type=\"tel\" inputmode=\"numeric\" class=\"ion-no-padding ion-align-self-center\" minlength=\"1\" maxlength=\"1\" formControlName=\"c5\" #c5 (ionInput)=\"changeFocus($event)\"id=\"5\"></ion-input>\r\n                  </ion-segment>\r\n              </div>\r\n          </form>\r\n\r\n      </div>\r\n\r\n      <div class=\"ion-no-padding div-message\" *ngIf=\"this.smsVerifyNeeded\">\r\n\r\n          <ion-item lines=\"none\">\r\n              <ion-button \r\n                  slot=\"start\" \r\n                  fill=\"clear\" \r\n                  color=\"danger\"\r\n                  (click)=\"onClickReinviaCodice(tipoVerifica.verificasms)\">\r\n                  <ion-icon name=\"refresh-outline\"></ion-icon>\r\n              </ion-button>\r\n              <ion-label color=\"default\" >\r\n                  Inserisci il pincode ricevuto tramite SMS</ion-label>\r\n          </ion-item>            \r\n\r\n          <form [formGroup]=\"formVerifyTel\">\r\n                  <div [ngClass]=\"this.isDesktop?'form-verifica desktop':'form-verifica'\">\r\n                      <ion-segment>\r\n                          <ion-input clearOnEdit type=\"tel\" inputmode=\"numeric\" class=\"ion-no-padding ion-align-self-center\" minlength=\"1\" maxlength=\"1\" formControlName=\"c6\" #c6 (ionInput)=\"changeFocus($event)\"id=\"6\"></ion-input>\r\n                          <ion-input clearOnEdit type=\"tel\" inputmode=\"numeric\" class=\"ion-no-padding ion-align-self-center\" minlength=\"1\" maxlength=\"1\" formControlName=\"c7\" #c7 (ionInput)=\"changeFocus($event)\"id=\"7\"></ion-input>\r\n                          <ion-input clearOnEdit type=\"tel\" inputmode=\"numeric\" class=\"ion-no-padding ion-align-self-center\" minlength=\"1\" maxlength=\"1\" formControlName=\"c8\" #c8 (ionInput)=\"changeFocus($event)\"id=\"8\"></ion-input>\r\n                          <ion-input clearOnEdit type=\"tel\" inputmode=\"numeric\" class=\"ion-no-padding ion-align-self-center\" minlength=\"1\" maxlength=\"1\" formControlName=\"c9\" #c9 (ionInput)=\"changeFocus($event)\"id=\"9\"></ion-input>\r\n                          <ion-input clearOnEdit type=\"tel\" inputmode=\"numeric\" class=\"ion-no-padding ion-align-self-center\" minlength=\"1\" maxlength=\"1\" formControlName=\"c10\" #c10 (ionInput)=\"changeFocus($event)\"id=\"10\"></ion-input>\r\n                      </ion-segment>\r\n                  </div>\r\n          </form>\r\n\r\n      </div>\r\n\r\n  </div>\r\n\r\n\r\n  <!-- PARTE AGGIORNAMENTO ANAGRAFICA -->\r\n  <div *ngIf=\"actualStatePage==pageState.REGISTRATION\">\r\n\r\n    <form [formGroup]=\"formRegister\">\r\n        <ion-list>\r\n          <ion-item-group>\r\n            <ion-item-divider color=\"light\">\r\n              <ion-icon \r\n                name=\"person-outline\" \r\n                slot=\"start\"\r\n                color=\"primary\"></ion-icon>\r\n              <ion-label>Come ti chiami ?</ion-label>\r\n            </ion-item-divider>\r\n            <ion-item>\r\n              <ion-label position=\"floating\">Nome</ion-label>\r\n              <ion-input formControlName=\"nome\"></ion-input>\r\n            </ion-item>\r\n            <ion-item>\r\n              <ion-label position=\"floating\">Cognome</ion-label>\r\n              <ion-input formControlName=\"cognome\"></ion-input>\r\n            </ion-item>\r\n            <ion-item>\r\n              <ion-label position=\"floating\">Sesso</ion-label>\r\n              <ion-select formControlName=\"sesso\" interface=\"popover\">\r\n                <ion-select-option \r\n                  *ngFor=\"let sesso of listSesso\"\r\n                  [value]=\"sesso.value\">\r\n                  {{ sesso.description }}\r\n                </ion-select-option>\r\n              </ion-select>\r\n            </ion-item>\r\n            <ion-item>\r\n              <ion-label position=\"floating\">Codice fiscale</ion-label>\r\n              <ion-input formControlName=\"cf\" (ionBlur)=\"onCfChange()\"></ion-input>\r\n            </ion-item >\r\n          </ion-item-group>\r\n    \r\n          <ion-item-group>\r\n            <ion-item-divider color=\"light\">\r\n              <ion-icon \r\n                name=\"home-outline\" \r\n                slot=\"start\"\r\n                color=\"primary\"></ion-icon>\r\n              <ion-label>Dove vivi ?</ion-label>\r\n            </ion-item-divider>\r\n\r\n            <ion-item>\r\n              <ion-label position=\"floating\">Indirizzo</ion-label>\r\n              <ion-input formControlName=\"indResidenza\"></ion-input>\r\n            </ion-item>\r\n\r\n            <ion-item>\r\n              <ion-label position=\"floating\">Comune</ion-label>\r\n              <ion-input formControlName=\"comResidenza\"></ion-input>\r\n            </ion-item>\r\n            <ion-item>\r\n              <ion-label position=\"floating\">Cap</ion-label>\r\n              <ion-input type=\"tel\" inputmode=\"tel\" maxlength=\"5\" formControlName=\"capResidenza\"></ion-input>\r\n            </ion-item>\r\n              <ion-item>\r\n              <ion-label position=\"floating\">Provincia</ion-label>\r\n              <ion-input formControlName=\"provResidenza\"></ion-input>\r\n            </ion-item>\r\n            <ion-item>\r\n                    <ion-label position=\"floating\">Stato</ion-label>\r\n                    <ion-input formControlName=\"statoResidenza\"></ion-input>\r\n            </ion-item>\r\n            \r\n          </ion-item-group>\r\n          <ion-item-group>\r\n            <ion-item-divider color=\"light\">\r\n              <ion-icon \r\n                name=\"logo-reddit\" \r\n                slot=\"start\"\r\n                color=\"primary\"></ion-icon>\r\n              <ion-label>Quando sei nato ?</ion-label>\r\n            </ion-item-divider>\r\n            <ion-item>\r\n              <ion-label position=\"floating\">Data</ion-label>\r\n              <ion-datetime formControlName=\"nascita\" \r\n                            displayFormat=\"DD-MM-YYYY\"\r\n                            [max]=\"today\"></ion-datetime>\r\n            </ion-item>\r\n            <ion-item>\r\n              <ion-label position=\"floating\">Comune</ion-label>\r\n              <ion-input formControlName=\"comNascita\"></ion-input>\r\n            </ion-item>\r\n            <ion-item *ngIf=\"showInputCapNascita\">\r\n              <ion-label position=\"floating\">Cap</ion-label>\r\n              <ion-input formControlName=\"capNascita\"></ion-input>\r\n            </ion-item>\r\n            <ion-item> \r\n              <ion-label position=\"floating\">Provincia</ion-label>\r\n              <ion-input formControlName=\"provNascita\"></ion-input>\r\n            </ion-item>\r\n            <ion-item>\r\n              <ion-label position=\"floating\">Stato</ion-label>\r\n              <ion-input formControlName=\"statoNascita\"></ion-input>\r\n            </ion-item>\r\n          </ion-item-group>\r\n        </ion-list>\r\n      </form>\r\n\r\n      <div  class=\"ion-no-padding div-message\">\r\n          <p>\r\n          <ion-text color=\"primary\">\r\n              <ion-icon name=\"information-circle-outline\"></ion-icon>\r\n          </ion-text>\r\n              Dobbiamo richiederti alcune informazioni personali per l'eventuale\r\n          </p>\r\n          <p>\r\n              emissione di documenti fiscali\r\n          </p>\r\n\r\n          <p>\r\n              <ion-text color=\"primary\">\r\n                  <h6><i>(ad esempio in caso di iscrizioni a corsi o prenotazioni della struttura)</i></h6>\r\n              </ion-text>\r\n          </p>\r\n      </div>\r\n  </div>\r\n\r\n\r\n</ion-content>\r\n\r\n<!-- FOOTER PAGES-->\r\n<ion-footer>\r\n\r\n  <div id=\"footer-contact\" *ngIf=\"actualStatePage==pageState.CONTACT\">\r\n      <ion-button \r\n              color=\"primary\"\r\n              class=\"btn-confirm\" \r\n              expand=\"block\"\r\n      [disabled]=\"!this.formContact.valid\"\r\n      (click)=\"onClickFooterAvanti()\">Avanti</ion-button>\r\n  </div>\r\n\r\n  <div id=\"footer-verify\" *ngIf=\"actualStatePage==pageState.VERIFY\">\r\n\r\n      <ion-button \r\n          class=\"btn-confirm\"\r\n          color=\"primary\"\r\n          expand=\"block\"\r\n          (click)=\"onClickFooterAvanti()\"\r\n          [disabled]=\"!isEnableAvantiOnVerify()\">\r\n          Verifica\r\n      </ion-button>\r\n\r\n      \r\n  </div>\r\n\r\n  <div id=\"footer-registration\" *ngIf=\"actualStatePage==pageState.REGISTRATION\">\r\n      \r\n\r\n          <ion-button \r\n              class=\"btn-confirm\" \r\n              color=\"primary\" \r\n              expand=\"block\" \r\n              (click)=\"onClickFooterAvanti()\" \r\n              [disabled]=\"!formRegister.valid\">\r\n              Aggiorna\r\n          </ion-button>\r\n      \r\n  </div>\r\n\r\n\r\n</ion-footer>\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { VerifyPageRoutingModule } from './verify-routing.module';\r\n\r\nimport { VerifyPage } from './verify.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    VerifyPageRoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [VerifyPage],\r\n  exports: [VerifyPage]\r\n})\r\nexport class VerifyPageModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { VerifyPage } from './verify.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: VerifyPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class VerifyPageRoutingModule {}\r\n"],"sourceRoot":"webpack:///"}