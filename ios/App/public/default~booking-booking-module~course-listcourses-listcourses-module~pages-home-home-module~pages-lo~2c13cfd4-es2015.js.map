{"version":3,"sources":["./src/app/pages/auth/psw-recovery/psw-recovery.module.ts","./src/app/pages/auth/new-login/new-login.module.ts","./src/app/pages/auth/psw-recovery/psw-recovery.page.ts","./src/app/pages/auth/psw-recovery/psw-recovery.page.html","./src/app/pages/auth/psw-recovery/psw-recovery-routing.module.ts","./src/app/pages/auth/new-login/new-login.page.ts","./src/app/pages/auth/new-login/new-login.page.html","./src/app/pages/auth/new-login/new-login-routing.module.ts"],"names":[],"mappings":"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","file":"default~booking-booking-module~course-listcourses-listcourses-module~pages-home-home-module~pages-lo~2c13cfd4-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PswRecoveryPageRoutingModule } from './psw-recovery-routing.module';\r\n\r\nimport { PswRecoveryPage } from './psw-recovery.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IonicModule,\r\n    PswRecoveryPageRoutingModule,\r\n    \r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  declarations: [PswRecoveryPage],\r\n  exports: [PswRecoveryPage]\r\n})\r\nexport class PswRecoveryPageModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { NewLoginPageRoutingModule } from './new-login-routing.module';\r\n\r\nimport { NewLoginPage } from './new-login.page'\r\nimport { PswRecoveryPage } from '../psw-recovery/psw-recovery.page'\r\nimport { PswRecoveryPageModule } from '../psw-recovery/psw-recovery.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    NewLoginPageRoutingModule,\r\n    \r\n    PswRecoveryPageModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  declarations: [NewLoginPage],\r\n  exports: [NewLoginPage],\r\n  entryComponents: [PswRecoveryPage]\r\n})\r\nexport class NewLoginPageModule {}\r\n","import { Component, OnInit, ViewChild} from '@angular/core';\r\nimport { ModalController, LoadingController, ToastController } from '@ionic/angular';\r\nimport { StartService } from 'src/app/services/start.service';\r\nimport { StartConfiguration } from 'src/app/models/start-configuration.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormControl, Validators, FormGroup, AbstractControl } from '@angular/forms';\r\nimport { AccountRequestCode, AccountOperationResponse, AccountVerifyCode } from 'src/app/models/accountregistration.model';\r\nimport { RequestPincodeUse, TipoVerificaAccount } from 'src/app/models/valuelist.model';\r\nimport { Utente } from 'src/app/models/utente.model';\r\nimport { CryptoService } from 'src/app/library/services/crypto.service';\r\n\r\n@Component({\r\n  selector: 'app-psw-recovery',\r\n  templateUrl: './psw-recovery.page.html',\r\n  styleUrls: ['./psw-recovery.page.scss'],\r\n})\r\nexport class PswRecoveryPage implements OnInit {\r\n\r\n\r\n  canUseMail = false;\r\n  canUseMobile = false;\r\n\r\n\r\n  //questo è per usare l'enum PageState nell'html\r\n  PageState : typeof PageState =PageState;\r\n\r\n  //Lo stato della pagina (inizialmente Richiesta codice)\r\n  stato: PageState= PageState.richiestaCodice;\r\n\r\n  //La startConfig\r\n  startConfig : StartConfiguration;\r\n\r\n  //I 3 formGroups (Mail/telefono, codice di verifica, nuova password)\r\n  formContact : FormGroup;\r\n  formVerify : FormGroup;\r\n  formPsw : FormGroup;\r\n\r\n  //oggetti per richiedere e verificare i codici\r\n  docRichiestaCodici : AccountRequestCode= new AccountRequestCode;\r\n  docVerifica: AccountVerifyCode = new AccountVerifyCode;\r\n\r\n  //l'id dell'utente che vuole cambiare la psw\r\n  idUtente: string='';\r\n  //la weblogin dell'utente\r\n  descrUtente: string='';\r\n\r\n\r\n   //#region questi servono per accedere ai corrispettivi elementi in HTML\r\n   @ViewChild('c1') c1;\r\n   @ViewChild('c2') c2;\r\n   @ViewChild('c3') c3;\r\n   @ViewChild('c4') c4;\r\n   @ViewChild('c5') c5; \r\n   //#endregion\r\n\r\n  constructor(\r\n    private modalController:ModalController,\r\n    private startService:StartService,\r\n    private loadingController:LoadingController,\r\n    private toastController:ToastController,\r\n    private cryptoService:CryptoService\r\n  )\r\n   {\r\n     \r\n      \r\n   }\r\n\r\n  ngOnInit() {\r\n\r\n    \r\n    //recupero la startconfig\r\n    this.startConfig=this.startService.actualStartConfig;\r\n\r\n    this.canUseMail = (\r\n      this.startConfig.gruppo.APPTIPOVERIFICA == TipoVerificaAccount.noverifica ||\r\n      this.startConfig.gruppo.APPTIPOVERIFICA == TipoVerificaAccount.verificaemail ||\r\n      this.startConfig.gruppo.APPTIPOVERIFICA == TipoVerificaAccount.verificaemailsms\r\n      )\r\n\r\n    this.canUseMobile = (\r\n      this.startConfig.gruppo.APPTIPOVERIFICA == TipoVerificaAccount.verificaemailsms ||\r\n      this.startConfig.gruppo.APPTIPOVERIFICA == TipoVerificaAccount.verificasms\r\n    )\r\n\r\n     //SETUP INIZIALE      \r\n      //creo i formGroups\r\n      this.createVerifyForm();\r\n      this.createContactForm();\r\n      this.createPswForm();\r\n\r\n  }\r\n\r\n  close(){\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  //ritorna true se siamo su Browser desktop\r\n  get isDesktop(){\r\n    return this.startService.isDesktop;\r\n  }\r\n\r\n  /**\r\n   * Crea un placeHolder per ion-input\r\n   */\r\n  getPlaceHolder() {\r\n    let placeH = '';\r\n    if (this.canUseMail && this.canUseMobile) {\r\n      placeH = 'Email o Cellulare';\r\n    }\r\n    else if (this.canUseMail && !this.canUseMobile) {\r\n      placeH = 'Email';\r\n    }\r\n    else if (!this.canUseMail && this.canUseMobile) {\r\n      placeH = 'Cellulare';\r\n    }\r\n\r\n    return placeH;\r\n  }\r\n\r\n  //creazione del ReactiveForm di inserimento del codice\r\n  createVerifyForm(){\r\n    this.formVerify=new FormGroup({\r\n      c1: new FormControl(null, {\r\n        updateOn: 'change',\r\n        validators: [Validators.required, Validators.maxLength(1),Validators.minLength(1)]\r\n      }),\r\n      c2: new FormControl(null, {\r\n        updateOn: 'change',\r\n        validators: [Validators.required, Validators.maxLength(1),Validators.minLength(1)]\r\n      }),\r\n      c3: new FormControl(null, {\r\n        updateOn: 'change',\r\n        validators: [Validators.required, Validators.maxLength(1),Validators.minLength(1)]\r\n      }),\r\n      c4: new FormControl(null, {\r\n        updateOn: 'change',\r\n        validators: [Validators.required, Validators.maxLength(1),Validators.minLength(1)]\r\n      }),\r\n      c5: new FormControl(null, {\r\n        updateOn: 'change',\r\n        validators: [Validators.required, Validators.maxLength(1),Validators.minLength(1)]\r\n      })\r\n    })\r\n  }\r\n  //creazione del ReactiveForm di inserimento del telefono/mail\r\n  createContactForm(){\r\n    let myValidators = [Validators.required];\r\n\r\n    //posso usare sia mail che mobile\r\n    if(this.canUseMail && this.canUseMobile){\r\n      //non serve alcun validator extra\r\n    }\r\n    //posso usare solo mail\r\n    else if(this.canUseMail){\r\n      myValidators.push(Validators.email)\r\n    }\r\n    //posso usare solo mobile\r\n    else if(this.canUseMobile){\r\n      myValidators.push(Validators.pattern(/^(\\+\\d{1,3}[- ]?)?\\d{10}$/))\r\n    }\r\n     \r\n    this.formContact=new FormGroup({\r\n      contatto: new FormControl(null, {\r\n        updateOn: 'change',\r\n        validators: myValidators\r\n      })\r\n    })\r\n  }\r\n  //creazione del form di inserimento nuova psw\r\n  createPswForm(){\r\n    this.formPsw=new FormGroup({\r\n      psw: new FormControl(null, {\r\n        updateOn: 'change',\r\n        validators: [Validators.required]\r\n      }),\r\n      confirmPsw: new FormControl(null, {\r\n        updateOn: 'change',\r\n        validators: [Validators.required]\r\n      })\r\n    },this.pswValidator)\r\n  }\r\n  /**\r\n   * funzione di controllo uguaglianza delle psw, per la validazione del PswFormGroup\r\n   * @param c \r\n   */\r\n  pswValidator(c:AbstractControl):{invalid:boolean}\r\n  {\r\n\r\n    if ((c.get('confirmPsw').value==c.get('psw').value))\r\n    {\r\n      return\r\n    }\r\n    else\r\n    {\r\n      return {invalid: true};\r\n    }\r\n\r\n  }\r\n\r\n  \r\n\r\n  \r\n  /**\r\n   * procedura che sposta il focus sulla casella di input successiva\r\n   * @param evento parametri $event dell'eveno \"ion-input\", necessari a identificare\r\n   * in quale casella c'è stato l'input\r\n   */\r\n  changeFocus(evento)\r\n  {\r\n    let id=evento['target']['id'];\r\n        switch (id) {\r\n        case '1':\r\n          this.c2.setFocus();\r\n          break;\r\n        case '2':\r\n          this.c3.setFocus();\r\n          break;\r\n        case '3':\r\n          this.c4.setFocus();\r\n          break;\r\n        case '4':\r\n          this.c5.setFocus();\r\n          break;      \r\n        default:\r\n          break;\r\n      }\r\n    \r\n  }\r\n\r\n  /**\r\n   * Evento click per la richiesta da effettuare al server dei codici\r\n   */\r\n  onClickInviaCodice() {\r\n    this.sendServerRichiestaCodici();\r\n  }\r\n\r\n  /**\r\n   * evento che si attiva quando l'utente clicca \"verifica\" dopo aver inserito il codice\r\n   * Preparo il documento docVerifica che sarà usato nell'invio dei codici\r\n   */\r\n  onClickVerifica(){\r\n\r\n    let prosegui = true;\r\n    let message = \"\";\r\n   \r\n    //Per poter proseguire devo avere il documento di Richiesta codice con IDREFER popolato\r\n    if (this.docRichiestaCodici && this.docRichiestaCodici.IDREFER) {\r\n\r\n      if (this.docRichiestaCodici.IDREFER.length != 0) {\r\n\r\n        //Preparo il documento di Verifica da inviare al server\r\n        this.docVerifica = new AccountVerifyCode();\r\n        this.docVerifica.IDREFER=this.docRichiestaCodici.IDREFER;\r\n        this.docVerifica.IDAREA=this.docRichiestaCodici.IDAREA;\r\n\r\n        //Invio il pincode ricevuto in mail\r\n        if (this.docRichiestaCodici.REQUESTEMAILCODE) {\r\n\r\n            //mi ha richiesto il codice tramite mail\r\n            this.docVerifica.EMAILPINCODE=this.getInputPin();\r\n\r\n\r\n        }\r\n        else if (this.docRichiestaCodici.REQUESTSMSCODE) {\r\n          //mi ha richiesto il codice via sms\r\n          this.docVerifica.SMSPINCODE=this.getInputPin();\r\n          \r\n        }\r\n        else{\r\n          //ci sono stati casini\r\n          prosegui =false;\r\n          message = \"C'è stato un problema, richiedi un nuovo codice\";\r\n        }\r\n      }\r\n      else{\r\n        //ci sono stati casini\r\n        prosegui =false;\r\n        message = \"C'è stato un problema, richiedi un nuovo codice\";\r\n      }\r\n    }\r\n    else{\r\n      //ci sono stati casini\r\n      prosegui =false;\r\n      message = \"C'è stato un problema, richiedi un nuovo codice\";\r\n    }\r\n\r\n    //Sembra corretto, invio il pincode al server\r\n    if (prosegui ) {\r\n      //faccio la richiesta al server\r\n      //il metodo invia il documento docVerifica\r\n      this.sendServerVerificaCodici();\r\n    }\r\n    else {\r\n      //Ci sono errori\r\n      this.showMessage(message);\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  /**\r\n   * evento attivato quando l'utente conferma il cambiamento della password\r\n   */\r\n  onClickCambia(){\r\n    \r\n    //ora, devo crearmi il documento utente, e inserire il token nel documento docrichiesta\r\n    let sendDocRichiestaCodici = this.docRichiestaCodici;\r\n    let sendDocUtente = new Utente();\r\n    \r\n    //variabili necessarie per il giochino delle psw\r\n    let pwd = '';\r\n    let pwdToSend = '';\r\n    let splitPwd:string[] = [];\r\n    let useCrypter: boolean = false; //per ora, useCrypter non va, quindi è false\r\n\r\n    //Metto nell'ID l'utente\r\n    sendDocUtente.ID = this.idUtente;\r\n    \r\n\r\n    //recupero la psw\r\n    pwd = this.formPsw.value.psw;\r\n    if (useCrypter){\r\n      pwdToSend=this.cryptoService.getBCrypt(pwd);\r\n    }\r\n    else{\r\n      pwdToSend=pwd;\r\n    }\r\n    //ora splitto la psw in due\r\n    splitPwd=this.cryptoService.mySplitPassword(pwdToSend);\r\n    \r\n    if (splitPwd){\r\n      //la prima parte va nel token\r\n      sendDocRichiestaCodici.TOKEN=splitPwd[0];\r\n      if (useCrypter) {\r\n        //La seconda parte dentro a SHAPASSWORD\r\n        //nel caso di criptata\r\n        sendDocUtente.SHAPASSWORD = splitPwd[1];\r\n        sendDocUtente.INPUTPASSWORD = '';\r\n      }\r\n      else {\r\n        sendDocUtente.INPUTPASSWORD = splitPwd[1];\r\n        sendDocUtente.SHAPASSWORD = '';\r\n      }\r\n      //ora che è tutto pronto, posso fare la richiesta di cambio psw al server\r\n      this.sendServerFinalize(sendDocUtente,sendDocRichiestaCodici)\r\n    }\r\n    else{\r\n      this.showMessage('Password non utilizzabile');\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * qui richiedo al server l'invio di un codice di verifica\r\n   */\r\n  sendServerRichiestaCodici(){\r\n    //creo il loading\r\n    this.loadingController.create({\r\n          message:'Invio codice in corso...',\r\n          spinner:'circular',\r\n          backdropDismiss: true,\r\n    }).then(elLoading => {\r\n\r\n        elLoading.present();\r\n        let contatto:string;\r\n        //recupero il contatto inserito dall'utente\r\n        contatto=this.formContact.value.contatto;\r\n\r\n      //devo capire se l'utente ha inserito una mail o un telefono (se è presente @, presumo sia una mail) e valorizzare\r\n      //l'oggetto \"docRichiestaCodici\" di conseguenza\r\n      if (contatto.includes('@')){\r\n        //è una mail\r\n        this.docRichiestaCodici.EMAIL=contatto;\r\n        this.docRichiestaCodici.TELEPHONE = \"\";\r\n        this.docRichiestaCodici.REQUESTEMAILCODE=true;\r\n        this.docRichiestaCodici.REQUESTSMSCODE=false;\r\n      }\r\n      else{\r\n        //è un telefono\r\n        this.docRichiestaCodici.TELEPHONE=contatto;\r\n        this.docRichiestaCodici.EMAIL = \"\";\r\n        this.docRichiestaCodici.REQUESTSMSCODE=true;\r\n        this.docRichiestaCodici.REQUESTEMAILCODE=false;\r\n      }\r\n\r\n      \r\n      //inserisco nell'oggetto le altre info necessarie\r\n      this.docRichiestaCodici.USE=RequestPincodeUse.forRecovery;\r\n      this.docRichiestaCodici.IDAREA=this.startService.areaSelectedValue.ID;\r\n\r\n      //ora che l'oggetto è pronto, faccio la richiesta\r\n      this.startService.recoverySendCodici(this.docRichiestaCodici)\r\n                .then((risposta:AccountOperationResponse)=>{\r\n                          //quando arriva la risposta chiudo il loading\r\n                          elLoading.dismiss();\r\n\r\n                          \r\n\r\n                          if (risposta.result) {\r\n                            //se è andato tutto bene\r\n                            this.showMessage(risposta.message);\r\n\r\n                            //Imposto IDRefer che devo reinviare quando chiedo di verificare il codice\r\n                            this.docRichiestaCodici.IDREFER = risposta.idRefer;\r\n                          }\r\n                          else{\r\n                            //se la richiesta è andata a buon fine, ma il server non è riuscito ad inviare il messaggio, presumo che \r\n                            //l'utente non esista\r\n                            this.showMessage(risposta.message);\r\n                            this.docRichiestaCodici.IDREFER = \"\";\r\n                            console.log(risposta.message);\r\n                          }\r\n                })\r\n                .catch(error => {\r\n                    //Se la richiesta non è andata a buon fine, dismetto il loading, lo stampo in console e scrivo all'utente \"errore di connessione\"\r\n                    elLoading.dismiss();\r\n                    console.log(error);\r\n                    this.showMessage(\"Errore di connessione\");\r\n                    this.docRichiestaCodici.IDREFER = \"\";\r\n                });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * qui richiedo al server la verifica del codice (in risposta, riceverò l'id utente)\r\n   *     //alla fine, se tutto è andato bene, passo alla pagina successiva\r\n    //this.stato=PageState.cambioPsw;\r\n   */\r\n  sendServerVerificaCodici() {\r\n\r\n    if (this.docVerifica) {\r\n      //mostro il loading\r\n      this.loadingController\r\n      .create({\r\n        message:\"Verifica in corso...\",\r\n        spinner:\"circular\",\r\n        backdropDismiss: true\r\n      })\r\n      .then(elLoading=>{\r\n\r\n        //Mostro il loding\r\n        elLoading.present();\r\n        \r\n        //ora faccio la richiesta\r\n        this.startService.recoveryVerifyCodici(this.docVerifica)\r\n            .then(risposta=>{\r\n\r\n                  //Il server ha risposto, nascondo il loading\r\n                  elLoading.dismiss();\r\n\r\n                  if (risposta.result) {\r\n\r\n                    //La verifica è andata a buon fine, recupero l'utente su cui bisogna cambiare la psw, poi posso procedere\r\n                    this.idUtente=risposta.idRefer;\r\n                    this.descrUtente = risposta.descrRefer;\r\n\r\n                    \r\n\r\n                    //Cambio lo stato della pagina\r\n                    this.stato=PageState.cambioPsw;\r\n\r\n                    this.showMessage('Codice di verifica valido');\r\n                  }\r\n                  else {\r\n                    //Nessun utente è stato trovato\r\n                    this.idUtente = '';\r\n                    //Altrimenti, se il server ha risposto, ma ha risposto negativamente, presumo che il codice sia errato\r\n                    this.showMessage('Codice di verifica non valido');\r\n                  }\r\n\r\n            })\r\n            .catch(error => {\r\n                //se la richiesta non è andata a buon fine\r\n                //Nascondo il loading\r\n                elLoading.dismiss();\r\n\r\n                //Nessun utente è stato trovato\r\n                this.idUtente = '';\r\n\r\n                console.log(error);\r\n                this.showMessage('Errore di connessione');\r\n            });\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * qui faccio la richiesta effettiva di cambio password\r\n   */\r\n  sendServerFinalize(docUtente: Utente, docRichiestaCodici: AccountRequestCode) {\r\n    \r\n    //creo il loading\r\n    this.loadingController\r\n      .create({\r\n            message:'Cambio password',\r\n            spinner:'circular',\r\n            backdropDismiss: true\r\n      })\r\n      .then(elLoading => {\r\n\r\n          //Mostro il loading\r\n          elLoading.present();\r\n      \r\n          //ora faccio la richiesta\r\n          this.startService.recoveryFinalize(docUtente, docRichiestaCodici)\r\n              .then(risposta => {\r\n\r\n                  //Chiudo il loading\r\n                  elLoading.dismiss();\r\n\r\n\r\n                  if (risposta.result) {\r\n                    //la modifica della psw è andata a buon fine, posso dire ok, e chiudere la videata\r\n                    this.showMessage(\"Modifica della password confermata\");\r\n\r\n                    //Chiudo la videata modale\r\n                    this.modalController.dismiss();\r\n                  }\r\n                  else {\r\n                    \r\n                    //la richiesta non è andata in errore, ma la modifica non è riuscita... stampo un errore generico\r\n                    this.showMessage(risposta.message);\r\n\r\n                    console.log(risposta.message);\r\n                  }\r\n              })\r\n              .catch(error => {\r\n                    //la richiesta è andata in errore\r\n\r\n                    //Chiudo il loading\r\n                    elLoading.dismiss();\r\n\r\n                    console.log (error);\r\n                    this.showMessage('Errore di connessione');\r\n              });\r\n      });\r\n  }\r\n\r\n   /**\r\n   * Procedura che visualizza un toast con il messaggio passato\r\n   * @param myMessage Il messaggio da visualizzare\r\n   */\r\n  async showMessage(myMessage: string) {\r\n    const toast = await this.toastController\r\n      .create({\r\n        message: myMessage,\r\n        duration: 3000\r\n      });\r\n\r\n      toast.present();\r\n  }\r\n\r\n\r\n  /**\r\n   * restituisce il pin inserito nella form\r\n   */\r\n  getInputPin(): string{\r\n    return (\r\n      this.formVerify.value.c1+\r\n      this.formVerify.value.c2+\r\n      this.formVerify.value.c3+\r\n      this.formVerify.value.c4+\r\n      this.formVerify.value.c5\r\n      )\r\n  }\r\n  \r\n}\r\n\r\n\r\nenum PageState{\r\n  richiestaCodice  = 10,\r\n  cambioPsw = 20\r\n}","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-title>Recupero password</ion-title>\r\n    <ion-buttons slot=\"end\">\r\n      <ion-button (click)=\"close()\">\r\n        <ion-icon name=\"close\"></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<!-- CONTENT PAGES -->\r\n<ion-content>\r\n  <div [ngClass]=\"this.isDesktop?'ion-text-center div-logo desktop':'ion-text-center div-logo'\">\r\n    <img [src]=\"startConfig.getUrlLogo()\">\r\n  </div>\r\n\r\n  <!-- PARTE RICHIESTA CODICE -->\r\n  <div *ngIf=\"stato==PageState.richiestaCodice\" \r\n        class=\"ion-padding-horizontal ion-text-center\">\r\n\r\n    <form [formGroup]=\"formContact\">\r\n      <ion-item >\r\n        <ion-icon slot=\"start\" name=\"at-outline\"></ion-icon>\r\n        <ion-input type=\"text\" [placeholder]=\"getPlaceHolder()\" formControlName=\"contatto\"></ion-input>\r\n      </ion-item>\r\n    </form>\r\n    <ion-button  [disabled]=\"!this.formContact.valid\" color=\"primary\" [ngClass]=\"this.isDesktop? 'btn-send-code desktop':'btn-send-code'\" (click)=\"onClickInviaCodice()\">\r\n      Invia Codice\r\n    </ion-button>\r\n\r\n    <div  class=\"ion-no-padding div-message\">\r\n      <p>\r\n          <span><ion-icon name=\"information-circle-outline\"></ion-icon></span>\r\n          <span>&nbsp;</span>\r\n          <span *ngIf=\"canUseMail && canUseMobile\">Indica una email o un numero cellulare utilizzato nella registrazione account, <br/> e ti invieremo un pincode di recovery password</span>\r\n          <span *ngIf=\"canUseMail && !canUseMobile\">Indica una email utilizzata nella registrazione account, <br/> e ti invieremo un pincode di recovery password</span>\r\n          <span *ngIf=\"!canUseMail && canUseMobile\">Indica un numero cellulare utilizzato nella registrazione account, <br/> e ti invieremo un pincode di recovery password</span>\r\n      </p>\r\n\r\n      <p>\r\n          <ion-text color=\"danger\">\r\n              <span><i>(contatta la struttura se non ricordi queste informazioni)</i></span>\r\n          </ion-text>\r\n          \r\n      </p>\r\n    </div>\r\n\r\n    <form [formGroup]=\"formVerify\">\r\n      <div [ngClass]=\"this.isDesktop?'form-verifica desktop':'form-verifica'\">\r\n          <ion-segment>\r\n              <ion-input clearOnEdit type=\"tel\" inputmode=\"numeric\" class=\"ion-no-padding ion-align-self-center\" minlength=\"1\" maxlength=\"1\" formControlName=\"c1\" #c1 (ionInput)=\"changeFocus($event)\"id=\"1\"></ion-input>\r\n              <ion-input clearOnEdit type=\"tel\" inputmode=\"numeric\" class=\"ion-no-padding ion-align-self-center\" minlength=\"1\" maxlength=\"1\" formControlName=\"c2\" #c2 (ionInput)=\"changeFocus($event)\"id=\"2\"></ion-input>\r\n              <ion-input clearOnEdit type=\"tel\" inputmode=\"numeric\" class=\"ion-no-padding ion-align-self-center\" minlength=\"1\" maxlength=\"1\" formControlName=\"c3\" #c3 (ionInput)=\"changeFocus($event)\"id=\"3\"></ion-input>\r\n              <ion-input clearOnEdit type=\"tel\" inputmode=\"numeric\" class=\"ion-no-padding ion-align-self-center\" minlength=\"1\" maxlength=\"1\" formControlName=\"c4\" #c4 (ionInput)=\"changeFocus($event)\"id=\"4\"></ion-input>\r\n              <ion-input clearOnEdit type=\"tel\" inputmode=\"numeric\" class=\"ion-no-padding ion-align-self-center\" minlength=\"1\" maxlength=\"1\" formControlName=\"c5\" #c5 (ionInput)=\"changeFocus($event)\"id=\"5\"></ion-input>\r\n          </ion-segment>\r\n      </div>\r\n    </form>\r\n\r\n\r\n\r\n\r\n  </div>\r\n\r\n  <!-- PARTE CAMBIO PSW -->\r\n  <div *ngIf=\"stato==PageState.cambioPsw\" class=\"ion-padding div-psw\">\r\n\r\n    <p>\r\n      <ion-icon color=\"primary\" name=\"information-circle-outline\"></ion-icon>\r\n      Inserisci la nuova password per l'account \r\n    </p>\r\n    <p>\r\n        <ion-text color=\"primary\"> {{this.descrUtente}}</ion-text>\r\n    </p>\r\n    <form [formGroup]=\"formPsw\">\r\n      <ion-list>\r\n        <ion-item>\r\n          <ion-icon slot=\"start\" name=\"lock-closed-outline\"></ion-icon>\r\n          <ion-input placeholder=\"Nuova password\" type=\"password\" inputmode=\"password\" formControlName=\"psw\"></ion-input>\r\n        </ion-item>\r\n        <ion-item>\r\n          <ion-icon slot=\"start\" name=\"lock-closed-outline\"></ion-icon>\r\n          <ion-input placeholder=\"Conferma Password\" type=\"password\" inputmode=\"password\" formControlName=\"confirmPsw\"></ion-input>\r\n        </ion-item>\r\n      </ion-list>\r\n    </form>\r\n\r\n  </div>\r\n</ion-content>\r\n\r\n\r\n<ion-footer>\r\n  <!-- PARTE RICHIESTA CODICE -->\r\n  <div *ngIf=\"stato==PageState.richiestaCodice\">\r\n    <ion-button [disabled]=\"!this.formVerify.valid\" color=\"primary\" expand=\"block\" (click)=\"onClickVerifica()\">Verifica</ion-button>\r\n  </div>\r\n\r\n  <!-- PARTE CAMBIO PSW -->\r\n  <div *ngIf=\"stato==PageState.cambioPsw\">\r\n    <ion-button  [disabled]=\"!this.formPsw.valid\" color=\"primary\" expand = \"block\" (click)=\"onClickCambia()\">Cambia Password</ion-button>\r\n  </div>\r\n</ion-footer>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PswRecoveryPage } from './psw-recovery.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PswRecoveryPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PswRecoveryPageRoutingModule {}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\r\nimport { ModalController, LoadingController, ToastController, NavController, AlertController } from '@ionic/angular';\r\nimport { StartConfiguration } from 'src/app/models/start-configuration.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { StartService } from 'src/app/services/start.service';\r\nimport { Utente } from 'src/app/models/utente.model';\r\nimport { Plugins } from '@capacitor/core';\r\nimport { Gruppo } from 'src/app/models/gruppo.model';\r\nimport { TipoVerificaAccount, PageType, RequestPincodeUse } from 'src/app/models/valuelist.model';\r\nimport { Area } from 'src/app/models/area.model';\r\nimport { AreaLink } from 'src/app/models/arealink.model';\r\nimport { AccountRequestCode, AccountOperationResponse, AccountVerifyCode } from 'src/app/models/accountregistration.model';\r\n\r\nimport { CryptoService } from 'src/app/library/services/crypto.service';\r\nimport { CodiceFiscale } from 'src/app/models/codicefiscale.model';\r\nimport { PswRecoveryPage } from '../psw-recovery/psw-recovery.page';\r\nimport { PostResponse } from 'src/app/library/models/postResult.model';\r\nconst { Browser } = Plugins;\r\n\r\n\r\n@Component({\r\n  selector: 'app-new-login',\r\n  templateUrl: './new-login.page.html',\r\n  styleUrls: ['./new-login.page.scss'],\r\n})\r\nexport class NewLoginPage implements OnInit {\r\n\r\n  //per utilizzare l'enum nell'html\r\n  pageState: typeof PageState=PageState;\r\n  tipoVerifica: typeof TipoVerificaAccount = TipoVerificaAccount;\r\n\r\n  //variabile che indica lo stato della pagina\r\n  //Se posizionato su Login, Register, Verifiy o Welcome\r\n  actualStatePage:PageState = PageState.LOGIN;\r\n\r\n  //Situazione del Segment (Login o Register)\r\n  actualStateSegment: PageState = PageState.LOGIN;\r\n\r\n  //Nel caso di registrazione indica a che punto ci si trova\r\n  registrationStep: PageState;\r\n\r\n  //Array con gli step possibili in registrazione\r\n  stepRegistration: PageState[] = [];\r\n  indexStepRegistration: number = 0;\r\n\r\n  //Documento per la richiesta invio codici al server\r\n  docRichiestaCodici: AccountRequestCode = new AccountRequestCode();\r\n\r\n\r\n  //Registrazione possibile in app\r\n  registrationInApp: boolean = false; \r\n\r\n\r\n  //varibili formGroup (per usare i reactive forms)\r\n  formRegister: FormGroup;\r\n  formVerifyTel: FormGroup;\r\n  formVerifyMail: FormGroup;\r\n  formLogin: FormGroup;\r\n  formContact: FormGroup;\r\n\r\n  //Dati\r\n  startConfig:StartConfiguration;\r\n  startListen: Subscription;\r\n  docGruppo: Gruppo;\r\n  docArea: Area;\r\n\r\n  //Utente\r\n  docUtente= new Utente;\r\n\r\n  //Restituisce true se l'app sta girando su Desktop\r\n  isDesktop:boolean;\r\n\r\n  //Verifiche\r\n  emailVerificationYES: boolean = false;\r\n  smsVerificationYES: boolean = false;\r\n  emailVerificata: string = ''; //Email verificata\r\n  telVerificato: string = ''; //Numero telefono Verificato\r\n  colorButton = 'tertiary'; //Colore dei bottoni di login\r\n\r\n  //#region questi servono per accedere ai corrispettivi elementi in HTML\r\n  @ViewChild('c1') c1;\r\n  @ViewChild('c2') c2;\r\n  @ViewChild('c3') c3;\r\n  @ViewChild('c4') c4;\r\n  @ViewChild('c5') c5;\r\n  @ViewChild('c6') c6;\r\n  @ViewChild('c7') c7;\r\n  @ViewChild('c8') c8;\r\n  @ViewChild('c9') c9;\r\n  @ViewChild('c10') c10;\r\n\r\n  //#endregion\r\n\r\n\r\n  constructor(\r\n    private modalCtrl:ModalController,\r\n    private startService:StartService,\r\n    private loadingCtrl:LoadingController,\r\n    private toastCtrl:ToastController,\r\n    private alertCtrl: AlertController,\r\n    private cryptoService: CryptoService\r\n  ) {\r\n\r\n    \r\n    //Stato Pagina registrazione\r\n    this.indexStepRegistration = 0;\r\n\r\n    //Posizionato sulla pagina di login\r\n    this.actualStatePage = PageState.LOGIN;\r\n\r\n    //Segment Option puo' essere solo Login/Registration\r\n    this.actualStateSegment = PageState.LOGIN;\r\n\r\n    \r\n\r\n\r\n    //Richiedo lo startConfig\r\n    this.startListen = startService.startConfig.subscribe(data=>{\r\n                \r\n                //Memorizzo lo StartConfig\r\n                this.startConfig=data;\r\n\r\n                //Nel gruppo è specificato se è possibile effettuare \r\n                //registrazioni con l'app\r\n                if (this.startConfig && this.startConfig.gruppo) {\r\n\r\n                  //Memorizzo il Gruppo con le sue Opzioni\r\n                  this.docGruppo = this.startConfig.gruppo;\r\n\r\n                  //Abilitazione / Disabilitazione registrazione in App\r\n                  this.registrationInApp = this.startConfig.gruppo.APPFLAGREGISTRAZIONE;\r\n\r\n                  //Creo un Array con gli step di registrazione\r\n                  this.createArrayStepRegistration(this.docGruppo);\r\n                }\r\n    });\r\n\r\n    //Prelevo l'area selezionata \r\n    this.docArea = this.startService.areaSelectedValue;\r\n  \r\n\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.createLoginForm();\r\n    this.createRegisterForm();\r\n    this.createVerifyForm();\r\n    this.createContactForm();\r\n    this.isDesktop=this.startService.isDesktop\r\n  }\r\n\r\n  /**\r\n   * Titolo da applicare alla videata\r\n   */\r\n  getCaptionTitle(): string {\r\n    let strTitle: string;\r\n\r\n    if (this.actualStateSegment == PageState.LOGIN) {\r\n      strTitle = 'Login';\r\n    }\r\n    else {\r\n      strTitle = 'Nuovo Account';\r\n    }\r\n\r\n    return strTitle;\r\n  }\r\n\r\n  /**\r\n   * Modifica dello stato del segment\r\n   */\r\n  onSegmentChanged(ev:any) {\r\n    //Vuole tornare al login\r\n    if (ev.detail.value == PageState.LOGIN) {\r\n      this.actualStatePage = PageState.LOGIN;\r\n    }\r\n    else {\r\n      //Lo stato della pagina\r\n      this.actualStatePage = this.stepRegistration[this.indexStepRegistration];\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Crea un array con i passaggi disponibili in registrazione\r\n   * a seconda delle richieste del gruppo\r\n   * Se il gruppo non vuole verifiche, si passa subito ai dati\r\n   */\r\n  createArrayStepRegistration(docGruppo: Gruppo) {\r\n    this.stepRegistration = [];\r\n\r\n    \r\n\r\n    if (docGruppo.APPFLAGREGISTRAZIONE == true) {\r\n\r\n      //Pagina dei contatti Email/SMS\r\n      this.stepRegistration.push(PageState.CONTACT);\r\n\r\n      if (docGruppo.APPTIPOVERIFICA !== TipoVerificaAccount.noverifica) {\r\n        //La pagina di Verifica è necessaria alla registrazione\r\n        this.stepRegistration.push(PageState.VERIFY);\r\n      }\r\n\r\n      //Dati di registrazione\r\n      this.stepRegistration.push(PageState.REGISTRATION);\r\n      //Fase Finale\r\n      this.stepRegistration.push(PageState.WELCOME);\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Effettua l'avanzamento di pagina nello Step Registrazione\r\n   * @param skipVerifica Nel caso fosse la pagina di verifica salta a quella successiva\r\n   */\r\n  nextStepRegistration(skipVerifica: boolean = false) {\r\n    \r\n    \r\n    if (this.indexStepRegistration + 1 < this.stepRegistration.length) {\r\n      \r\n      for (let index = this.indexStepRegistration + 1; index < this.stepRegistration.length; index++) {\r\n        let find = true;\r\n        const element = this.stepRegistration[index];\r\n        \r\n        if (skipVerifica && element == PageState.VERIFY) {\r\n          //Fingo di non aver trovato cosi sto dentro\r\n          find = false;\r\n        }\r\n        \r\n        if (find) {\r\n          this.indexStepRegistration = index;\r\n          this.actualStatePage = element;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Torna indietro negli Step di Registrazione\r\n   */\r\n  backStepRegistration() {\r\n\r\n    if (this.indexStepRegistration - 1 >= 0) {\r\n      \r\n      for (let index = this.indexStepRegistration -1; index >= 0; index--) {\r\n        \r\n        const element = this.stepRegistration[index];\r\n        this.indexStepRegistration = index;\r\n        this.actualStatePage = element;\r\n        break;\r\n        }\r\n      }\r\n    }    \r\n  \r\n\r\n\r\n\r\n\r\n  /**\r\n   * Chiusura della videata\r\n   */  \r\n  closeModal(){\r\n    this.modalCtrl.dismiss();\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Pulsante Avanti o Acced presente nel footer\r\n   */\r\n  onClickFooterAvanti() {\r\n    switch(this.actualStatePage) {\r\n      case PageState.LOGIN:\r\n          //Siamo sul Login e quindi gestisco la fase di login\r\n          this.onClickLogin();\r\n        break;\r\n\r\n      case PageState.CONTACT:\r\n          //Siamo sulla pagina dei Contatti e dobbiamo gestirne la fase\r\n          this.onClickAvantiContact();\r\n        break;\r\n\r\n      case PageState.VERIFY:\r\n        //Siamo sulla pagina di inserimento codici da verificare\r\n        this.onClickAvantiVerifica();\r\n        break;\r\n\r\n      case PageState.REGISTRATION:\r\n        //Siamo nella parte finale della registrazione con i dati \r\n        //e l'invio dei dati al server\r\n        this.onClickRegistrati();\r\n      \r\n      default:\r\n        break;\r\n\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Evento scatenato al click del login\r\n   */\r\n  onClickLogin()\r\n  {\r\n    if (!this.formLogin.valid)\r\n    {\r\n      return\r\n    }\r\n    else\r\n    {\r\n      //Apro il loading Controller per verificare\r\n      this.loadingCtrl\r\n        .create({\r\n          message: 'Controllo credenziali'\r\n        })\r\n        .then((element) => {\r\n\r\n          //Creo il loading\r\n          element.present();\r\n\r\n          // Chiamo il Servizio per eseguire l'autorizzazione\r\n          this.startService\r\n            .userLogin(this.formLogin.value.username, this.formLogin.value.password)\r\n            .then((dataResult:PostResponse) => {\r\n\r\n                //Chiudo lo Spinner\r\n                element.dismiss();\r\n\r\n                // E' Arrivata una risposta NEGATIVA\r\n                if (!dataResult.result) {\r\n                  this.showMessage(dataResult.message);\r\n                }\r\n                else {\r\n                  //LOGIN ACCETTATO\r\n                  \r\n                  // MEMORIZZO LE CREDENZIALI PER UN SUCCESSIVO RECUPERO\r\n                  this.startService.saveStorageUtente(this.formLogin.value.username,this.formLogin.value.password);\r\n\r\n                  //Resetto la form\r\n                  this.formLogin.reset();\r\n                  \r\n                  //Chiudo la modale\r\n                  this.closeModal();\r\n                }\r\n            })\r\n            .catch(error => {\r\n              \r\n              //login non andato a buon fine\r\n              element.dismiss();\r\n              console.log(error);\r\n              this.showMessage(error);\r\n\r\n            })\r\n        })\r\n    }\r\n\r\n  }\r\n  \r\n  /**\r\n   * evento scatenato quando l'utente clicca su \"reimposta password\"\r\n   */\r\n  onClickReimpostaPsw(){\r\n    this.modalCtrl.create({\r\n      component:PswRecoveryPage\r\n    }).then(elModal=>{\r\n      elModal.present();\r\n      this.modalCtrl.dismiss();\r\n    })\r\n  }\r\n\r\n  //#region GESTIONE PAGINA CONTATTI E CODICI\r\n\r\n  /*\r\n  L'intera fase di registrazione è gestita con un array this.stepRegistration\r\n  Dentro ci sono i passaggi richiesti (che sono variabili a seconda delle verifiche richieste)\r\n\r\n  this.indexStepRegistration è l'indice dell'array su cui siamo posizionati\r\n  this.actualStatePage è lo Stato Attuale (recuperato dall'array)\r\n\r\n  */\r\n\r\n  /**\r\n   * Click di Avanti sulla pagina con i contatti\r\n   */\r\n  onClickAvantiContact() {\r\n    //Ci sono diversi stati da gestire per andare avanti da questa pagina\r\n    //La variabile docGruppo.APPTIPOVERIFICA indica le verifiche richieste\r\n    let inpEmail = this.formContact.value.email;\r\n    let inpTel = this.formContact.value.telephone;\r\n    let needPageVerify: boolean = true;\r\n    let prosegui: boolean = false;\r\n    let message: string = '';\r\n\r\n\r\n    //Le due variabili\r\n    //this.smsVerificationYES\r\n    //this.emailVerificationYES\r\n    //indicano cosa bisogna ancora verificare\r\n\r\n    //Stato 1: Le verifiche sono già effettuate e \r\n    //nessun campo è stato modificato dopo la verifica\r\n    //Stato 2: Non sono richieste verifiche\r\n\r\n\r\n    //Nessuna verifica da apportare\r\n    if (this.docGruppo.APPTIPOVERIFICA == TipoVerificaAccount.noverifica) {\r\n      \r\n      //Imposto email e sms verificati\r\n      this.emailVerificationYES = true;\r\n      this.smsVerificationYES = true;\r\n\r\n      //Non serve la pagina di verifica\r\n      needPageVerify = false;\r\n      prosegui = true;\r\n\r\n      //Nessuna richiesta codici da effettuare\r\n      this.docRichiestaCodici.REQUESTSMSCODE = false;\r\n      this.docRichiestaCodici.REQUESTEMAILCODE = false;\r\n\r\n    }\r\n    else {\r\n\r\n      //Bisogna verificare qualcosa\r\n      switch(this.docGruppo.APPTIPOVERIFICA) {\r\n\r\n        case TipoVerificaAccount.verificaemail:\r\n\r\n          if (this.emailVerificationYES && this.emailVerificata == inpEmail) {\r\n            //Tutto rimasto invariato, email è verificata si puo' bypassare la verifica\r\n\r\n            //Non serve la pagina di verifica\r\n            needPageVerify = false;\r\n            prosegui = true;\r\n\r\n            //non serve richiedere ancora il codice email\r\n            this.docRichiestaCodici.REQUESTEMAILCODE = false;\r\n\r\n\r\n          }\r\n          else {\r\n            //Email non verificata, oppure modificata\r\n            //devo verificare\r\n\r\n            //Serve la pagina di verifica\r\n            needPageVerify = true;\r\n            prosegui = true;\r\n\r\n            //Bisogna richiedere ancora il codice email\r\n            this.docRichiestaCodici.REQUESTEMAILCODE = true;\r\n            this.docRichiestaCodici.EMAIL = inpEmail;\r\n\r\n          }\r\n          break;\r\n\r\n        case TipoVerificaAccount.verificaemailsms:\r\n\r\n          if ((this.emailVerificationYES && this.emailVerificata == inpEmail) && \r\n              (this.smsVerificationYES && this.telVerificato == inpTel)) {\r\n            //Tutto rimasto invariato, email e Telefono verificati si puo' bypassare la verifica\r\n\r\n            //Non serve la pagina di verifica\r\n            needPageVerify = false;\r\n            prosegui = true;\r\n\r\n            //Nessuna richiesta ulteriore da effettuare\r\n            this.docRichiestaCodici.REQUESTEMAILCODE = false;\r\n            this.docRichiestaCodici.REQUESTSMSCODE = false;\r\n\r\n          }\r\n          else {\r\n            //Email o Telefono non verificato, oppure modificato\r\n            //devo verificare\r\n\r\n            //Serve la pagina di verifica\r\n            needPageVerify = true;\r\n            prosegui = true;\r\n\r\n            if (this.emailVerificationYES == false || this.emailVerificata !== inpEmail) {\r\n              //Ha cambiato la mail dopo la verifica oppure non l ha mai verificato\r\n\r\n              //Bisogna richiedere ancora il codice email\r\n              this.docRichiestaCodici.REQUESTEMAILCODE = true;\r\n              this.docRichiestaCodici.EMAIL = inpEmail;\r\n            }\r\n\r\n            if (this.smsVerificationYES == false || this.telVerificato !== inpTel) {\r\n              //Ha cambiato il telefono dopo la verifica oppure non l ha mai verificato\r\n\r\n              //Bisogna richiedere ancora il codice SMS\r\n              this.docRichiestaCodici.REQUESTSMSCODE = true;\r\n              this.docRichiestaCodici.TELEPHONE = inpTel;\r\n\r\n            }\r\n\r\n\r\n          }\r\n          break;\r\n\r\n\r\n          \r\n        case TipoVerificaAccount.verificasms:\r\n\r\n          if (this.smsVerificationYES && this.telVerificato == inpTel) {\r\n            //Tutto rimasto invariato, Telefono è verificato si puo' bypassare la verifica\r\n\r\n            //Non serve la pagina di verifica\r\n            needPageVerify = false;\r\n            prosegui = true;\r\n\r\n            //Nessuna richiesta SMS da effettuare\r\n            this.docRichiestaCodici.REQUESTSMSCODE = false;\r\n\r\n          }\r\n          else {\r\n            //Telefono non verificato, oppure modificato\r\n            //devo verificare\r\n\r\n            //Serve la pagina di verifica\r\n            needPageVerify = true;\r\n            prosegui = true;\r\n\r\n            //Bisogna richiedere ancora il codice SMS\r\n            this.docRichiestaCodici.REQUESTSMSCODE = true;\r\n            this.docRichiestaCodici.TELEPHONE = inpTel;\r\n\r\n\r\n          }\r\n\r\n          break;\r\n\r\n        default:\r\n          prosegui = false;\r\n          message = 'Ops..qualcosa è andato storto';\r\n          break;\r\n      }\r\n\r\n      if (prosegui) {\r\n        //Serve la pagina di verifica\r\n        //Allora devo chiamare il server per inviare i codici\r\n        if (needPageVerify) {\r\n\r\n          //Chiamo il server, e se tutto va a buon fine andro alla verifica\r\n          this.sendServerRichiestaCodici();\r\n          \r\n        }\r\n        else {\r\n          //Devo andare alla pagina successiva alla verifica\r\n          const skipPageVerifica = true;\r\n          this.nextStepRegistration(skipPageVerifica);\r\n        }\r\n      }\r\n      else {\r\n\r\n        //Visualizzo il messaggio\r\n        this.showMessage(message);\r\n\r\n      }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  /**\r\n   * Chiede al server di inviare i codici pin necessari\r\n   * Se tutto va a buon fine si sposta nella pagina di verifica, altrimenti segnala l'errore\r\n   * @param onSuccessChangePage Se l'operazione ha successo passa alla pagina successiva\r\n   * @param customMessage Se presente viene mostrato in caso di richiesta a buon fine\r\n   */\r\n  sendServerRichiestaCodici(onSuccessChangePage:boolean = true, customMessage?: string) {\r\n\r\n    this.loadingCtrl\r\n      .create({\r\n          message: 'Invio Codici in corso...'\r\n      })\r\n      .then(element => {\r\n\r\n        //Creo il loading\r\n        element.present();\r\n\r\n        //Ora chiedo al server di inviare i codici\r\n\r\n        //Il documento contiene le informazioni necessarie\r\n        //Aggiungo l'area nel caso non ci fosse\r\n        this.docRichiestaCodici.IDAREA = this.docArea.ID;\r\n        this.docRichiestaCodici.USE = RequestPincodeUse.forRegistration;\r\n\r\n        //Chiamo il servizio\r\n        this.startService\r\n              .registrationSendCodici(this.docRichiestaCodici)\r\n              .then((responseServer:AccountOperationResponse) => {\r\n\r\n                //Chiudo il Loading Controller\r\n                element.dismiss();\r\n\r\n                //Qui in teoria i codici sono stati inviati\r\n                //Memorizzo IDREFER per le chiamate successive\r\n                this.docRichiestaCodici.IDREFER = responseServer.idRefer;\r\n\r\n                //Azzero i flag che servono a richiedere i codici\r\n                this.docRichiestaCodici.REQUESTSMSCODE = false;\r\n                this.docRichiestaCodici.REQUESTEMAILCODE = false;\r\n\r\n                //Mi sposto alla pagina successiva (di verifica)\r\n                if (onSuccessChangePage) {\r\n                  //Devo spostarmi alla pagina di verifica\r\n                  const skipPageVerifica = false;\r\n                  this.nextStepRegistration(skipPageVerifica);\r\n                }\r\n\r\n                //Se ho un messaggio da visualizzare lo mostro\r\n                if (customMessage && customMessage.length!== 0) {\r\n                  this.showMessage(customMessage);\r\n                }\r\n\r\n              })\r\n              .catch(err => {\r\n                  //Chiudo il Loading Controller\r\n                  element.dismiss();\r\n                  //Visualizzo il messaggio\r\n                  this.showMessage(err);\r\n              })\r\n\r\n      \r\n    });\r\n    \r\n  }\r\n\r\n\r\n  //#endregion\r\n\r\n\r\n  //#region GESTIONE PAGINA VERIFICA\r\n\r\n  /**\r\n   * evento scatenato quando l'utente tappa su \"reinvia codice\"\r\n   * Eì possibile richiedere il reinvio di 1 solo codice alla volta\r\n   * @param tipo Reinvio Codice Email oppure Sms\r\n   */\r\n  onClickReinviaCodice(tipo: TipoVerificaAccount){\r\n    let askMessage = '';\r\n    let askEmail = false;\r\n    let askTel = false;\r\n\r\n    if (this.docRichiestaCodici) {\r\n\r\n      askMessage = 'Verrà inviato un nuovo codice a ';\r\n\r\n      switch (tipo) {\r\n        case TipoVerificaAccount.verificaemail:\r\n            askMessage += this.docRichiestaCodici.EMAIL;\r\n            //Uso le variabili temporanee per indicare che vorrebbe il codice in email\r\n            askEmail = true;\r\n\r\n          break;\r\n\r\n        case TipoVerificaAccount.verificasms:\r\n            askMessage += this.docRichiestaCodici.TELEPHONE;\r\n            //Uso le variabili temporanee per indicare che vorrebbe il codice su telefono\r\n            askTel= true;\r\n          break;\r\n      \r\n        default:\r\n          break;\r\n      }\r\n\r\n      //Faccio la richiesta se desidera un reinvio codici\r\n      this.alertCtrl.create({\r\n        header: 'Reinvio pincode',\r\n        message: askMessage,\r\n        buttons: [\r\n          {\r\n            text: 'Annulla',\r\n            role: 'cancel',\r\n          },\r\n          {\r\n            text: 'Reinvia',\r\n            handler: () => {\r\n              \r\n              //Reimposto il documenti di Richiesta con quello che vuole\r\n              this.docRichiestaCodici.REQUESTEMAILCODE = askEmail;\r\n              this.docRichiestaCodici.REQUESTSMSCODE = askTel;\r\n\r\n              const msg = 'Codice reinviato con successo';\r\n              //Faccio la richiesta al server e indico di non cambiare\r\n              //pagina al termine della richiesta\r\n              this.sendServerRichiestaCodici(false, msg);\r\n            }\r\n          }\r\n        ]\r\n      })\r\n      .then (element => {\r\n        element.present();\r\n      })\r\n\r\n      \r\n    }\r\n\r\n  }\r\n\r\n  \r\n  /**\r\n  * evento scatenato quando l'utente clicca sul pulsante conferma della videata di verifica\r\n  * dei recapiti\r\n  */\r\n  onClickAvantiVerifica()\r\n  {\r\n    //Devo inviare al server i dati inseriti dall'utente\r\n    let enable = this.isEnableAvantiOnVerify();\r\n    let altMessage = '';\r\n    let docVerify: AccountVerifyCode;\r\n\r\n    if (!enable) {\r\n      altMessage = 'Controllare i dati inseriti';\r\n    }\r\n    else {\r\n      //I codici sono stati richiesti e dovrei avere l'IDREFER\r\n      if (this.docRichiestaCodici && this.docRichiestaCodici.IDREFER) {\r\n        \r\n          if (this.docRichiestaCodici.IDREFER.length !== 0) {\r\n            //Posso preparare il documento per la verifica\r\n            docVerify = new AccountVerifyCode();\r\n            docVerify.IDAREA = this.docRichiestaCodici.IDAREA;\r\n            docVerify.IDREFER = this.docRichiestaCodici.IDREFER;\r\n            \r\n            //Devo passare il pincode Email\r\n            if (this.docGruppo.APPTIPOVERIFICA == TipoVerificaAccount.verificaemail || \r\n              this.docGruppo.APPTIPOVERIFICA == TipoVerificaAccount.verificaemailsms\r\n               ) \r\n               {\r\n                 docVerify.EMAILPINCODE = this.getInputVerifyCode(TipoVerificaAccount.verificaemail);\r\n               }\r\n\r\n\r\n            //Devo passare il pincode SMS\r\n            if (this.docGruppo.APPTIPOVERIFICA == TipoVerificaAccount.verificasms || \r\n              this.docGruppo.APPTIPOVERIFICA == TipoVerificaAccount.verificaemailsms\r\n               ) \r\n               {\r\n                 docVerify.SMSPINCODE = this.getInputVerifyCode(TipoVerificaAccount.verificasms);\r\n               }\r\n\r\n            \r\n            //Tutto pronto per effettuare la richiesta di verifica pincode\r\n            this.sendServerVerificaCodici(docVerify);\r\n\r\n\r\n          }\r\n          else {\r\n            enable = false;\r\n            altMessage = 'Errore: Richiedere il reinvio';\r\n          }\r\n\r\n      }\r\n      else {\r\n        enable = false;\r\n        altMessage = 'Errore: Richiedere il reinvio';\r\n      }\r\n\r\n\r\n      \r\n    }\r\n\r\n\r\n    //Nel caso mostro un messaggio di errore\r\n    if (!enable) {\r\n      this.showMessage(altMessage);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Richiedo al server se i dati sono corretti\r\n   * @param docVerifica Documento per la verifica dei codici\r\n   */\r\n  sendServerVerificaCodici(docVerifica: AccountVerifyCode) {\r\n\r\n    if (docVerifica) {\r\n\r\n      this.loadingCtrl\r\n      .create({\r\n          message: 'Verifica Codici'\r\n      })\r\n      .then(elLoading => {\r\n\r\n        //Creo il loading\r\n        elLoading.present();\r\n\r\n        //Faccio la richiesta al server\r\n        this.startService\r\n          .registrationVerifyCodici(docVerifica)\r\n          .then((response:AccountOperationResponse) => {\r\n\r\n            //Chiudo il Loading \r\n            elLoading.dismiss();\r\n\r\n            //Verifica codici passata\r\n            if (response.result) {\r\n\r\n              //Memorizzo nelle variabili che la verifica ha avuto esito positivo\r\n              this.emailVerificationYES = true;\r\n              this.emailVerificata = this.docRichiestaCodici.EMAIL;\r\n\r\n              this.smsVerificationYES = true;\r\n              this.telVerificato = this.docRichiestaCodici.TELEPHONE;\r\n\r\n              //Posso spostarmi alla pagina successiva\r\n              this.nextStepRegistration();\r\n\r\n            }\r\n            else {\r\n\r\n              //Segno che ha fallito tutto \r\n              this.emailVerificationYES = false;\r\n              this.emailVerificata = '';\r\n\r\n              this.smsVerificationYES = false;\r\n              this.telVerificato = '';\r\n            }\r\n          })\r\n          .catch(err => {\r\n            //Qui qualcosa è andato storto\r\n\r\n            //Chiudo il Loading\r\n            elLoading.dismiss();\r\n\r\n            //Mostro il messaggio\r\n            this.showMessage(err);\r\n          });\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n\r\n  //#endregion\r\n\r\n\r\n\r\n  /**\r\n   * evento scatenato quando l'utente clicca \"registrati\" \r\n   * sulla pagina di inserimento dati\r\n   */\r\n  onClickRegistrati()\r\n  {\r\n    \r\n    let codfisc: string;\r\n    \r\n    if (!this.formRegister.valid)\r\n    {\r\n      return;\r\n    }\r\n    else {\r\n\r\n      //Prima vediamo il codice fiscale\r\n      codfisc = this.formRegister.value.codFisc;\r\n      codfisc = codfisc.toUpperCase();\r\n\r\n      this.loadingCtrl.create({\r\n        message: 'Check Codice Fiscale'\r\n      })\r\n      .then(elLoading => {\r\n        elLoading.present();\r\n\r\n        //Chiamo il servizio del codice fiscale\r\n        this.startService\r\n          .checkCodiceFiscale(codfisc, true, true)\r\n          .then(elCodFisc => {\r\n            //Dovrei ottenere il codice fiscale con i dati\r\n            \r\n            elLoading.dismiss();\r\n\r\n            if (!elCodFisc.checkValidate) {\r\n              this.showMessage(elCodFisc.msgValidate);\r\n            }\r\n            else {\r\n\r\n              //Passo alla registrazione reale\r\n              this.execRegistrati(elCodFisc);\r\n            }\r\n\r\n  \r\n          })\r\n          .catch(objError => {\r\n\r\n            elLoading.dismiss();\r\n            this.showMessage(objError.msgValidate);\r\n\r\n          });\r\n\r\n      });\r\n      \r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Invia al server i dati di registrazione\r\n   */\r\n  execRegistrati(myCodiceFiscale: CodiceFiscale) {\r\n    let pwd = '';\r\n    let pwdToSend = '';\r\n    let splitPwd:string[] = [];\r\n    let useCrypter: boolean = false;\r\n\r\n      //Imposto il nome e cognome\r\n      this.docUtente.NOME=this.formRegister.value.name;\r\n      this.docUtente.COGNOME=this.formRegister.value.surname;\r\n\r\n      //Sarebbe meglio criptare la password con BCrypt ma per ora confidiamo nel https\r\n      //e quindi non la cripto\r\n      useCrypter = false;\r\n\r\n      pwd = this.formRegister.value.psw;\r\n\r\n      if (useCrypter) {\r\n        pwdToSend = this.cryptoService.getBCrypt(pwd);\r\n      }\r\n      else {\r\n        pwdToSend = pwd;\r\n      }\r\n\r\n      //Splitto la stringa in 2 stringhe che verrà ricostruita dal server\r\n      splitPwd = this.cryptoService.mySplitPassword(pwdToSend);\r\n\r\n      if (splitPwd) {\r\n        //Metto la prima parte della password dentro al docRichiesta\r\n        this.docRichiestaCodici.TOKEN = splitPwd[0];\r\n\r\n        if (useCrypter) {\r\n          //La seconda parte dentro a SHAPASSWORD\r\n          //nel caso di criptata\r\n          this.docUtente.SHAPASSWORD = splitPwd[1];\r\n          this.docUtente.INPUTPASSWORD = '';\r\n        }\r\n        else {\r\n          this.docUtente.INPUTPASSWORD = splitPwd[1];\r\n          this.docUtente.SHAPASSWORD = '';\r\n        }\r\n\r\n        //Inserisco il codice fiscale\r\n        this.docUtente.CODICEFISCALE = myCodiceFiscale.codiceFiscale;\r\n        this.docUtente.SESSO = myCodiceFiscale.sesso;\r\n        this.docUtente.NATOIL = myCodiceFiscale.dataNascita;\r\n        this.docUtente.NATOA = myCodiceFiscale.comune;\r\n        this.docUtente.NATOCAP = myCodiceFiscale.cap;\r\n        this.docUtente.NATOPROV = myCodiceFiscale.provincia;\r\n        this.docUtente.NATOISOSTATO = myCodiceFiscale.stato;\r\n\r\n\r\n        this.docUtente.WEBLOGIN = this.formContact.value.email;\r\n        this.docUtente.EMAIL = this.formContact.value.email;\r\n        this.docUtente.MOBILENUMBER = this.formContact.value.telephone;\r\n  \r\n        if (this.formRegister.value.chkNewsletter == true) {\r\n          this.docUtente.NEWSLETTER = true;\r\n        }\r\n        else {\r\n          this.docUtente.NEWSLETTER = false;\r\n        }\r\n  \r\n        //Attivo il loading e invio i dati al server\r\n        this.loadingCtrl\r\n          .create({\r\n            message: 'Registrazione'\r\n          })\r\n          .then(elLoading => {\r\n  \r\n            //Creo il loading\r\n            elLoading.present();\r\n  \r\n            this.startService\r\n                .registrationFinalize(this.docUtente, this.docRichiestaCodici)\r\n                .then((response:AccountOperationResponse) => {\r\n  \r\n                    //Chiudo il Loading\r\n                    elLoading.dismiss();\r\n  \r\n                    //Wow registrazione conclusa\r\n  \r\n                    //Posso spostarmi alla pagina successiva\r\n                    this.nextStepRegistration();\r\n  \r\n                    //Dentro a IDREFER c'e' il GUID dell'Utente\r\n\r\n                    //Faccio un accesso automatico dell'utente\r\n                    this.loginAfterRegister(this.docUtente.WEBLOGIN, pwd);\r\n  \r\n                })\r\n                .catch(error => {\r\n                      //Chiudo il Loading\r\n                      elLoading.dismiss();\r\n  \r\n                      //Mostro il messaggio\r\n                      this.showMessage(error);\r\n                });\r\n  \r\n              \r\n          });\r\n\r\n      }\r\n      else {\r\n        this.showMessage('Dati non corretti');\r\n      }\r\n      \r\n\r\n    \r\n\r\n  }\r\n\r\n  /**\r\n   * Al termine della registrazione se tutto va a buon fine, procedo con il login automatico\r\n   */\r\n  loginAfterRegister(username: string, password: string)\r\n  {\r\n\r\n    if (username && password) {\r\n\r\n      // Chiamo il Servizio per eseguire l'autorizzazione\r\n      this.startService\r\n      .userLogin(username, password)\r\n      .then((dataResult:PostResponse) => {\r\n\r\n          // E' Arrivata una risposta NEGATIVA\r\n          if (!dataResult.result) {\r\n            this.showMessage(dataResult.message);\r\n          }\r\n          else {\r\n            //LOGIN ACCETTATO\r\n            \r\n            // MEMORIZZO LE CREDENZIALI PER UN SUCCESSIVO RECUPERO\r\n            this.startService.saveStorageUtente(username,password);\r\n          }\r\n      });\r\n    }\r\n\r\n\r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  /**\r\n   * procedura che sposta il focus sulla casella di input successiva\r\n   * @param evento parametri $event dell'eveno \"ion-input\", necessari a identificare\r\n   * in quale casella c'è stato l'input\r\n   */\r\n  changeFocus(evento)\r\n  {\r\n    let id=evento['target']['id'];\r\n        switch (id) {\r\n        case '1':\r\n          this.c2.setFocus();\r\n          break;\r\n        case '2':\r\n          this.c3.setFocus();\r\n          break;\r\n        case '3':\r\n          this.c4.setFocus();\r\n          break;\r\n        case '4':\r\n          this.c5.setFocus();\r\n          break;\r\n        case '6':\r\n          this.c7.setFocus();\r\n          break;\r\n        case '7':\r\n          this.c8.setFocus();\r\n          break;\r\n        case '8':\r\n          this.c9.setFocus();\r\n          break;\r\n        case '9': \r\n          this.c10.setFocus();\r\n          break;\r\n      \r\n        default:\r\n          break;\r\n      }\r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n  /**\r\n   * evento scatenato quando l'utente clicca su \"verifica in seguito\"\r\n   */\r\n\r\n  /**\r\n   * evento scatenato quando l'utente clicca su inizia\r\n   */\r\n  onClickInizia(){\r\n    //Chiudo la modale\r\n    this.modalCtrl.dismiss();\r\n  }\r\n  \r\n\r\n//#region CREAZIONI FORM\r\n\r\n  /**\r\n   * Funzione di creazione della Form di Login\r\n   */\r\n  createLoginForm(){\r\n    this.formLogin = new FormGroup({\r\n      username: new FormControl(null, {\r\n        updateOn: 'change',\r\n        validators: [Validators.required]\r\n      }),\r\n      password: new FormControl(null, {\r\n        updateOn: 'change',\r\n        validators: [Validators.required]\r\n      })\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Funzione di creazione della Form Contatti, usata come prima pagina \r\n   * nello StepRegistrazione\r\n   */\r\n  createContactForm(){\r\n    let pattTelefono = '^[+]*[0-9]*';\r\n    //Spiegazione pattern \r\n    //Per altre spiegazioni guardare qui https://regexr.com/3c53v\r\n\r\n    // ^ Il match parte dall'inizio della stringa\r\n    // [+] Qualsiasi elemento contenuto nelle quadre (quindi il +)\r\n    // * la regola precedente è opzionale\r\n    // [0-9] Qualsiasi elemento delle quadre\r\n    // * la regola precedente è opzionale\r\n\r\n\r\n    //form dei contatti (mail e telefono)\r\n    this.formContact=new FormGroup({\r\n      email: new FormControl(null, {\r\n        updateOn: 'change',\r\n        validators: [Validators.required, Validators.email]\r\n      }),\r\n      telephone: new FormControl(null, {\r\n        updateOn: 'change',\r\n        validators: [Validators.required, Validators.pattern(pattTelefono)]\r\n      })\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  createRegisterForm(){\r\n    let patternCodice = '^[A-Za-z]{6}[0-9]{2}[A-Za-z]{1}[0-9]{2}[A-Za-z]{1}[0-9]{3}[A-Za-z]{1}';\r\n    //form di registrazione\r\n    this.formRegister=new FormGroup({\r\n      name: new FormControl(null, {\r\n        updateOn: 'change',\r\n        validators: [Validators.required]\r\n      }),\r\n      surname: new FormControl(null, {\r\n        updateOn: 'change',\r\n        validators: [Validators.required]\r\n      }),\r\n      psw: new FormControl(null, {\r\n        updateOn: 'change',\r\n        validators: [Validators.required]\r\n      }),\r\n      verifyPsw: new FormControl(null, {\r\n        updateOn: 'change',\r\n        validators: [Validators.required]\r\n      }),      \r\n      codFisc: new FormControl(null,{\r\n        updateOn: 'change',\r\n        validators: [Validators.required, Validators.pattern(patternCodice)]\r\n      }),\r\n      chkPrivacy: new FormControl(false, {\r\n        updateOn: 'change',\r\n        validators: [this.isPolicyLink() ? Validators.requiredTrue: Validators.nullValidator]\r\n      }),\r\n      chkNewsletter: new FormControl(true, {\r\n        updateOn: 'change',\r\n        validators: []\r\n      })      \r\n    }, [this.pswValidator]);\r\n  }\r\n\r\n\r\n  pswValidator(c:AbstractControl):{invalid:boolean}\r\n  {\r\n\r\n    if ((c.get('verifyPsw').value==c.get('psw').value))\r\n    {\r\n      return\r\n    }\r\n    else\r\n    {\r\n      return {invalid: true};\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  /**\r\n   * Funzione per la creazione del FORM relativo alla Verifica Pincode Email e SMS\r\n   */\r\n  createVerifyForm(){\r\n    this.formVerifyMail=new FormGroup({\r\n      c1: new FormControl(null, {\r\n        updateOn: 'change',\r\n        validators: [Validators.required, Validators.maxLength(1),Validators.minLength(1)]\r\n      }),\r\n      c2: new FormControl(null, {\r\n        updateOn: 'change',\r\n        validators: [Validators.required, Validators.maxLength(1),Validators.minLength(1)]\r\n      }),\r\n      c3: new FormControl(null, {\r\n        updateOn: 'change',\r\n        validators: [Validators.required, Validators.maxLength(1),Validators.minLength(1)]\r\n      }),\r\n      c4: new FormControl(null, {\r\n        updateOn: 'change',\r\n        validators: [Validators.required, Validators.maxLength(1),Validators.minLength(1)]\r\n      }),\r\n      c5: new FormControl(null, {\r\n        updateOn: 'change',\r\n        validators: [Validators.required, Validators.maxLength(1),Validators.minLength(1)]\r\n      })\r\n    });\r\n\r\n    this.formVerifyTel=new FormGroup({\r\n      c6: new FormControl(null, {\r\n        updateOn: 'change',\r\n        validators: [Validators.required, Validators.maxLength(1),Validators.minLength(1)]\r\n      }),\r\n      c7: new FormControl(null, {\r\n        updateOn: 'change',\r\n        validators: [Validators.required, Validators.maxLength(1),Validators.minLength(1)]\r\n      }),\r\n      c8: new FormControl(null, {\r\n        updateOn: 'change',\r\n        validators: [Validators.required, Validators.maxLength(1),Validators.minLength(1)]\r\n      }),\r\n      c9: new FormControl(null, {\r\n        updateOn: 'change',\r\n        validators: [Validators.required, Validators.maxLength(1),Validators.minLength(1)]\r\n      }),\r\n      c10: new FormControl(null, {\r\n        updateOn: 'change',\r\n        validators: [Validators.required, Validators.maxLength(1),Validators.minLength(1)]\r\n      })\r\n    });\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * @param tipo Tipo del codice richiesto\r\n   */\r\n  getInputVerifyCode(tipo: TipoVerificaAccount): string {\r\n    let strReturn: string = '';\r\n\r\n    if (tipo == TipoVerificaAccount.verificaemail) {\r\n      strReturn = this.formVerifyMail.value.c1 + \r\n                  this.formVerifyMail.value.c2 + \r\n                  this.formVerifyMail.value.c3 + \r\n                  this.formVerifyMail.value.c4 + \r\n                  this.formVerifyMail.value.c5;\r\n    }\r\n    else if (tipo == TipoVerificaAccount.verificasms) {\r\n      strReturn = this.formVerifyTel.value.c6 + \r\n                  this.formVerifyTel.value.c7 + \r\n                  this.formVerifyTel.value.c8 + \r\n                  this.formVerifyTel.value.c9 + \r\n                  this.formVerifyTel.value.c10;\r\n    }\r\n\r\n    return strReturn;\r\n  }\r\n\r\n  /**\r\n   * Il pulsante Avanti previsto nella form di Verifica\r\n   * deve tenere conto \r\n   * 1) Quanti sono i pincode da inserire \r\n   * 2) Quali ha inserito\r\n   */\r\n  isEnableAvantiOnVerify():boolean {\r\n    let enable = true;\r\n\r\n    if (this.docGruppo) {\r\n      if (this.docGruppo.APPTIPOVERIFICA !== TipoVerificaAccount.noverifica) {\r\n\r\n        switch (this.docGruppo.APPTIPOVERIFICA) {\r\n          case TipoVerificaAccount.verificaemail:\r\n              enable = this.formVerifyMail.valid;\r\n            break;\r\n          case TipoVerificaAccount.verificasms:\r\n              enable = this.formVerifyTel.valid;\r\n            break;\r\n\r\n          case TipoVerificaAccount.verificaemailsms:\r\n            enable = this.formVerifyTel.valid && this.formVerifyMail.valid;\r\n            break;\r\n        \r\n          default:\r\n            break;\r\n        }\r\n\r\n      }\r\n    }\r\n    else {\r\n      enable = false;\r\n    }\r\n    return enable;\r\n  }\r\n\r\n\r\n\r\n\r\n//#endregion\r\n\r\n\r\n  //#region LINK ESTERNI\r\n\r\n  /**\r\n   * Controlla che nell'area ci sia il link della policy\r\n   */\r\n  isPolicyLink(): boolean {\r\n    let link: AreaLink;\r\n    let ready: boolean = false;\r\n\r\n    if (this.docArea) {\r\n\r\n      link = this.docArea.findAreaLinkByPageType(PageType.policyPrivacy);\r\n  \r\n      if (link && link.REFERURL) {\r\n        ready = true;\r\n      }\r\n    }\r\n\r\n    return ready;\r\n  }\r\n\r\n  //Apre il link delle Policy se presente\r\n  openPolicyLink() {\r\n    let link: AreaLink;\r\n    \r\n\r\n    if (this.docArea) {\r\n\r\n      link = this.docArea.findAreaLinkByPageType(PageType.policyPrivacy);\r\n  \r\n      if (link && link.REFERURL) {\r\n        this.openLink(link.REFERURL);\r\n      }\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  //Apre un link in un'altra pagina\r\n  openLink(url:string)\r\n  {\r\n    Browser.open({url:url});\r\n  }\r\n\r\n  //#endregion\r\n\r\n    /**\r\n   * Procedura che visualizza un toast con il messaggio passato\r\n   * @param myMessage Il messaggio da visualizzare\r\n   */\r\n  async showMessage(myMessage: string) {\r\n    const toast = await this.toastCtrl\r\n      .create({\r\n        message: myMessage,\r\n        duration: 3000\r\n      });\r\n\r\n      toast.present();\r\n  }\r\n\r\n}\r\n\r\n\r\nenum PageState\r\n{\r\n  LOGIN = 100,\r\n  CONTACT = 210,\r\n  REGISTRATION = 220,\r\n  VERIFY = 230,\r\n  WELCOME = 300\r\n}\r\n\r\n","<ion-header>\r\n    <ion-toolbar color=\"primary\">\r\n        <ion-buttons \r\n                slot=\"start\" \r\n                *ngIf=\"actualStatePage==pageState.REGISTRATION||actualStatePage==pageState.VERIFY\">\r\n\r\n            <ion-button fill=\"clear\" (click)=\"backStepRegistration()\">\r\n                <ion-icon name=\"arrow-back\"></ion-icon>\r\n            </ion-button>\r\n\r\n        </ion-buttons>\r\n\r\n        <ion-title>{{getCaptionTitle()}}</ion-title>\r\n        \r\n\r\n\r\n        <ion-buttons slot=\"end\">\r\n            <ion-button fill=\"clear\" (click)=\"closeModal()\">\r\n                <ion-icon name=\"close\" ></ion-icon>\r\n            </ion-button>\r\n        </ion-buttons>\r\n    </ion-toolbar>\r\n</ion-header>\r\n\r\n\r\n\r\n\r\n<!-- CONTENT PAGES -->\r\n<ion-content >\r\n    <div [ngClass]=\"this.isDesktop?'ion-text-center div-logo desktop':'ion-text-center div-logo'\">\r\n        <img [src]=\"startConfig.getUrlLogo()\">\r\n    </div>\r\n\r\n\r\n    <div class=\"ion-padding\" *ngIf=\"actualStatePage !== pageState.WELCOME\">\r\n        <ion-segment \r\n                [(ngModel)]=\"actualStateSegment\" \r\n                color=\"primary\" \r\n                mode=\"md\"\r\n                (ionChange)=\"onSegmentChanged($event)\">\r\n          <ion-segment-button [value]=\"pageState.LOGIN\">\r\n            Accedi\r\n          </ion-segment-button>\r\n\r\n          <ion-segment-button \r\n                    [value]=\"pageState.REGISTRATION\"\r\n                    *ngIf=\"registrationInApp\">\r\n            Registrati\r\n          </ion-segment-button>\r\n\r\n        </ion-segment>\r\n    </div>\r\n\r\n    <div *ngIf=\"actualStatePage==pageState.LOGIN\" class=\"ion-padding\">\r\n\r\n        <form [formGroup]=\"formLogin\">\r\n            <ion-list>\r\n                <ion-item>\r\n                    <ion-icon slot=\"start\" name=\"person-outline\" color=\"primary\"></ion-icon>\r\n                    <ion-input inputmode=\"email\" type=\"email\" placeholder=\"Email\" formControlName=\"username\" autocomplete=\"on\" ></ion-input>\r\n                  </ion-item>\r\n    \r\n                  <ion-item>\r\n                    <ion-icon slot=\"start\" name=\"key-outline\" color=\"primary\"></ion-icon>\r\n                    <ion-input inputmode=\"text\" type=\"password\" placeholder=\"Password\" formControlName=\"password\" autocomplete=\"current-password\"></ion-input>\r\n                  </ion-item>\r\n            </ion-list>\r\n        </form>\r\n\r\n        <div class=\"ion-text-center ion-padding-vertical\">\r\n            <a (click)=\"onClickReimpostaPsw()\">Aiuto, non ricordo la password </a>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div *ngIf=\"actualStatePage==pageState.CONTACT\" class=\"ion-padding-horizontal\">\r\n\r\n        <form [formGroup]=\"formContact\">\r\n\r\n\r\n            <ion-list>\r\n                <ion-item>\r\n                    <ion-icon name=\"at-outline\" slot=\"start\" color=\"primary\"></ion-icon>\r\n                    <ion-input type=\"email\" placeholder=\"E-Mail\" formControlName=\"email\"></ion-input>\r\n                </ion-item>\r\n                <ion-item>\r\n                    <ion-icon name=\"call-outline\" slot=\"start\" color=\"primary\"></ion-icon>\r\n                    <ion-input type=\"tel\" inputmode=\"tel\" placeholder=\"+39 Cellulare\" formControlName=\"telephone\" ></ion-input>\r\n                </ion-item>\r\n\r\n            </ion-list>\r\n\r\n            <ion-button \r\n                    fill=\"outline\" \r\n                    size=\"small\" \r\n                    expand=\"block\"\r\n                    *ngIf=\"isPolicyLink()\"\r\n                    (click)=\"openPolicyLink()\">\r\n                condizioni di registrazione\r\n            </ion-button>\r\n                \r\n            <div  class=\"ion-no-padding div-message\" *ngIf=\"docGruppo.APPTIPOVERIFICA == tipoVerifica.noverifica\">\r\n                <p>\r\n                <ion-text color=\"primary\">\r\n                    <ion-icon name=\"information-circle-outline\"></ion-icon>\r\n                </ion-text>\r\n                    Indica una email valida dove sarà possibile inviarti le ricevute di prenotazioni, attestati dei corsi \r\n                    ed altri documenti fiscali.\r\n                </p>\r\n                <p>\r\n                    <ion-text color=\"primary\">\r\n                        <h6><i>(in seguito potrai abilitare l'email anche per la ricezione di altro materiale informativo)</i></h6>\r\n                    </ion-text>\r\n                </p>\r\n            </div>\r\n\r\n            <div  class=\"ion-no-padding div-message\" *ngIf=\"docGruppo.APPTIPOVERIFICA == tipoVerifica.verificaemail\">\r\n            <p>\r\n                <ion-text color=\"primary\">\r\n                    <ion-icon name=\"information-circle-outline\"></ion-icon>\r\n                </ion-text>\r\n                Indica una email valida dove sarà possibile inviarti le ricevute di prenotazioni, attestati dei corsi \r\n                ed altri documenti fiscali.                        \r\n            </p>\r\n\r\n            <h6>\r\n                Per effettuare la verifica ti inviamo una email contenente un pincode da inserire nei passaggi succesivi di registrazione\r\n            </h6>\r\n\r\n            <p>\r\n                <ion-text color=\"primary\">\r\n                    <h6><i>(in seguito potrai abilitare l'email anche per la ricezione di altro materiale informativo)</i></h6>\r\n                </ion-text>\r\n            </p>\r\n        </div>         \r\n        \r\n        \r\n        <div  class=\"ion-no-padding div-message\" *ngIf=\"docGruppo.APPTIPOVERIFICA == tipoVerifica.verificaemailsms\">\r\n            <p>\r\n                <ion-text color=\"primary\">\r\n                    <ion-icon name=\"information-circle-outline\"></ion-icon>\r\n                </ion-text>\r\n                Indica una email valida dove sarà possibile inviarti i documenti fiscali ed un numero di cellulare \r\n                per contattarti in caso di problemi.\r\n\r\n            </p>\r\n\r\n            <p>\r\n                <ion-text color=\"primary\">\r\n                    <h6><i>Per effettuare la verifica ti inviamo 2 pincode (email/SMS)  da inserire nei passaggi succesivi di registrazione</i></h6>\r\n                </ion-text>\r\n            </p>\r\n        </div>                  \r\n\r\n        <div  class=\"ion-no-padding div-message\" *ngIf=\"docGruppo.APPTIPOVERIFICA == tipoVerifica.verificasms\">\r\n            <p>\r\n                <ion-text color=\"primary\">\r\n                    <ion-icon name=\"information-circle-outline\"></ion-icon>\r\n                </ion-text>\r\n                Indica un numero di cellulare dove contattarti in caso di problematiche legate alle prenotazioni della struttura.\r\n\r\n            </p>\r\n                <p>\r\n                Per effettuare la verifica ti inviamo un SMS con un pincode da inserire nei passaggi succesivi di registrazione\r\n                </p>\r\n            <p>\r\n                <ion-text color=\"primary\">\r\n                    <h6><i>(non sarai mai contattato per promozioni o marketing)</i></h6>\r\n                </ion-text>\r\n            </p>\r\n        </div>                  \r\n\r\n\r\n                \r\n\r\n        </form>\r\n\r\n    </div>\r\n\r\n\r\n\r\n\r\n    <div  *ngIf=\"actualStatePage==pageState.VERIFY\">\r\n        <div class=\"ion-no-padding div-message\" *ngIf=\"docGruppo.APPTIPOVERIFICA == tipoVerifica.verificaemail || docGruppo.APPTIPOVERIFICA == tipoVerifica.verificaemailsms\">\r\n\r\n\r\n            <ion-item lines=\"none\">\r\n                <ion-button \r\n                    slot=\"start\" \r\n                    fill=\"clear\" \r\n                    color=\"danger\"\r\n                    (click)=\"onClickReinviaCodice(tipoVerifica.verificaemail)\">\r\n                    <ion-icon name=\"refresh-outline\"></ion-icon>\r\n                </ion-button>\r\n\r\n                <ion-label color=\"default\">Inserisci il pincode ricevuto tramite email</ion-label>\r\n            </ion-item>\r\n\r\n            <form [formGroup]=\"formVerifyMail\">\r\n                <div [ngClass]=\"this.isDesktop?'form-verifica desktop':'form-verifica'\">\r\n                    <ion-segment>\r\n                        <ion-input clearOnEdit type=\"tel\" inputmode=\"numeric\" class=\"ion-no-padding ion-align-self-center\" minlength=\"1\" maxlength=\"1\" formControlName=\"c1\" #c1 (ionInput)=\"changeFocus($event)\"id=\"1\"></ion-input>\r\n                        <ion-input clearOnEdit type=\"tel\" inputmode=\"numeric\" class=\"ion-no-padding ion-align-self-center\" minlength=\"1\" maxlength=\"1\" formControlName=\"c2\" #c2 (ionInput)=\"changeFocus($event)\"id=\"2\"></ion-input>\r\n                        <ion-input clearOnEdit type=\"tel\" inputmode=\"numeric\" class=\"ion-no-padding ion-align-self-center\" minlength=\"1\" maxlength=\"1\" formControlName=\"c3\" #c3 (ionInput)=\"changeFocus($event)\"id=\"3\"></ion-input>\r\n                        <ion-input clearOnEdit type=\"tel\" inputmode=\"numeric\" class=\"ion-no-padding ion-align-self-center\" minlength=\"1\" maxlength=\"1\" formControlName=\"c4\" #c4 (ionInput)=\"changeFocus($event)\"id=\"4\"></ion-input>\r\n                        <ion-input clearOnEdit type=\"tel\" inputmode=\"numeric\" class=\"ion-no-padding ion-align-self-center\" minlength=\"1\" maxlength=\"1\" formControlName=\"c5\" #c5 (ionInput)=\"changeFocus($event)\"id=\"5\"></ion-input>\r\n                    </ion-segment>\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n\r\n        <div class=\"ion-no-padding div-message\" *ngIf=\"docGruppo.APPTIPOVERIFICA == tipoVerifica.verificasms || docGruppo.APPTIPOVERIFICA == tipoVerifica.verificaemailsms\">\r\n\r\n            <ion-item lines=\"none\">\r\n                <ion-button \r\n                    slot=\"start\" \r\n                    fill=\"clear\" \r\n                    color=\"danger\"\r\n                    (click)=\"onClickReinviaCodice(tipoVerifica.verificasms)\">\r\n                    <ion-icon name=\"refresh-outline\"></ion-icon>\r\n                </ion-button>\r\n                <ion-label color=\"default\" >\r\n                    Inserisci il pincode ricevuto tramite SMS</ion-label>\r\n            </ion-item>            \r\n\r\n            <form [formGroup]=\"formVerifyTel\">\r\n                    <div [ngClass]=\"this.isDesktop?'form-verifica desktop':'form-verifica'\">\r\n                        <ion-segment>\r\n                            <ion-input clearOnEdit type=\"tel\" inputmode=\"numeric\" class=\"ion-no-padding ion-align-self-center\" minlength=\"1\" maxlength=\"1\" formControlName=\"c6\" #c6 (ionInput)=\"changeFocus($event)\"id=\"6\"></ion-input>\r\n                            <ion-input clearOnEdit type=\"tel\" inputmode=\"numeric\" class=\"ion-no-padding ion-align-self-center\" minlength=\"1\" maxlength=\"1\" formControlName=\"c7\" #c7 (ionInput)=\"changeFocus($event)\"id=\"7\"></ion-input>\r\n                            <ion-input clearOnEdit type=\"tel\" inputmode=\"numeric\" class=\"ion-no-padding ion-align-self-center\" minlength=\"1\" maxlength=\"1\" formControlName=\"c8\" #c8 (ionInput)=\"changeFocus($event)\"id=\"8\"></ion-input>\r\n                            <ion-input clearOnEdit type=\"tel\" inputmode=\"numeric\" class=\"ion-no-padding ion-align-self-center\" minlength=\"1\" maxlength=\"1\" formControlName=\"c9\" #c9 (ionInput)=\"changeFocus($event)\"id=\"9\"></ion-input>\r\n                            <ion-input clearOnEdit type=\"tel\" inputmode=\"numeric\" class=\"ion-no-padding ion-align-self-center\" minlength=\"1\" maxlength=\"1\" formControlName=\"c10\" #c10 (ionInput)=\"changeFocus($event)\"id=\"10\"></ion-input>\r\n                        </ion-segment>\r\n                    </div>\r\n            </form>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <div *ngIf=\"actualStatePage==pageState.REGISTRATION\">\r\n\r\n        <form [formGroup]=\"formRegister\">\r\n            <ion-list>\r\n                <ion-item>\r\n                <ion-icon name=\"person-outline\" slot=\"start\" color=\"primary\"></ion-icon>\r\n                <ion-input type=\"text\" placeholder=\"Nome\" formControlName=\"name\"></ion-input>\r\n                </ion-item>\r\n                <ion-item>\r\n                <ion-icon name=\"person-outline\" slot=\"start\" color=\"primary\"></ion-icon>\r\n                <ion-input type=\"text\" placeholder=\"Cognome\" formControlName=\"surname\" ></ion-input>\r\n                </ion-item>\r\n                <ion-item>\r\n                <ion-icon name=\"key-outline\" slot=\"start\" color=\"primary\"></ion-icon>\r\n                <ion-input type=\"password\" placeholder=\"Password\" formControlName=\"psw\"></ion-input>\r\n                </ion-item>\r\n                <ion-item>\r\n                <ion-icon name=\"key-outline\" slot=\"start\" color=\"primary\"></ion-icon>\r\n                <ion-input type=\"password\" placeholder=\"Verifica password\" formControlName=\"verifyPsw\"></ion-input>\r\n                </ion-item>\r\n                \r\n                <ion-item>\r\n                <ion-icon name=\"card-outline\" slot=\"start\" color=\"primary\"></ion-icon>\r\n                <ion-input type=\"text\" placeholder=\"Codice Fiscale\" formControlName=\"codFisc\" ></ion-input>\r\n                </ion-item>\r\n    \r\n                <ion-item lines=\"none\" *ngIf=\"isPolicyLink()\">\r\n                    <ion-label>Accetto la <a (click)=\"openPolicyLink()\">privacy policy</a></ion-label>\r\n                    <ion-checkbox \r\n                        slot=\"start\" \r\n                        color=\"primary\" \r\n                        formControlName=\"chkPrivacy\">\r\n                    </ion-checkbox>\r\n                </ion-item>\r\n    \r\n                <ion-item lines=\"none\" >\r\n                <ion-label>Voglio ricevere la Newsletter</ion-label>\r\n                <ion-checkbox \r\n                    slot=\"start\" \r\n                    color=\"primary\" \r\n                    formControlName=\"chkNewsletter\"></ion-checkbox>\r\n                </ion-item>\r\n            </ion-list>\r\n        </form>\r\n\r\n        <div  class=\"ion-no-padding div-message\">\r\n            <p>\r\n            <ion-text color=\"primary\">\r\n                <ion-icon name=\"information-circle-outline\"></ion-icon>\r\n            </ion-text>\r\n                Dobbiamo richiederti alcune informazioni personali per l'eventuale\r\n            </p>\r\n            <p>\r\n                emissione di documenti fiscali\r\n            </p>\r\n\r\n            <p>\r\n                <ion-text color=\"primary\">\r\n                    <h6><i>(ad esempio in caso di iscrizioni a corsi o prenotazioni della struttura)</i></h6>\r\n                </ion-text>\r\n            </p>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n    <div *ngIf=\"actualStatePage==pageState.WELCOME\">\r\n        <h1 class=\"ion-text-center\">Benvenuto</h1>\r\n        <h3 class=\"ion-text-center\">sei uno dei nostri!</h3>\r\n             \r\n        <div class=\"ion-text-center\">\r\n            <img src=\"assets/img/handshake_b.gif\">\r\n        </div>\r\n    </div>\r\n\r\n    <div>\r\n\r\n    </div>\r\n\r\n</ion-content>\r\n\r\n<!-- FOOTER PAGES-->\r\n<ion-footer>\r\n\r\n    <div id=\"footer-login\" \r\n         *ngIf=\"actualStatePage==pageState.LOGIN\">\r\n        <ion-button \r\n        class=\"btn-confirm\" \r\n        [color]=\"colorButton\"\r\n        expand=\"block\" \r\n        (click)=\"onClickFooterAvanti()\" \r\n        [disabled]=\"!formLogin.valid\">\r\n            ACCEDI\r\n        </ion-button>\r\n    </div>\r\n\r\n    <div id=\"footer-contact\" *ngIf=\"actualStatePage==pageState.CONTACT\">\r\n        <ion-button \r\n                [color]=\"colorButton\"\r\n                class=\"btn-confirm\" \r\n                expand=\"block\"\r\n        [disabled]=\"!this.formContact.valid\"\r\n        (click)=\"onClickFooterAvanti()\">Avanti</ion-button>\r\n    </div>\r\n\r\n    <div id=\"footer-verify\" *ngIf=\"actualStatePage==pageState.VERIFY\">\r\n\r\n        <ion-button \r\n            class=\"btn-confirm\"\r\n            [color]=\"colorButton\"\r\n            expand=\"block\"\r\n            (click)=\"onClickFooterAvanti()\"\r\n            [disabled]=\"!isEnableAvantiOnVerify()\">\r\n            Verifica\r\n        </ion-button>\r\n\r\n        \r\n    </div>\r\n\r\n    <div id=\"footer-registration\" *ngIf=\"actualStatePage==pageState.REGISTRATION\">\r\n        \r\n\r\n            <ion-button \r\n                class=\"btn-confirm\" \r\n                [color]=\"colorButton\"\r\n                expand=\"block\" \r\n                (click)=\"onClickFooterAvanti()\" \r\n                [disabled]=\"!formRegister.valid\">\r\n                Registrati\r\n            </ion-button>\r\n        \r\n    </div>\r\n\r\n    <div id=\"footer-welcome\" *ngIf=\"actualStatePage==pageState.WELCOME\">\r\n        <ion-button\r\n            class=\"btn-confirm\"\r\n            [color]=\"colorButton\"\r\n            expand=\"block\" \r\n            (click)=\"closeModal()\">\r\n            Inizia\r\n        </ion-button>\r\n    </div>\r\n\r\n</ion-footer>\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { NewLoginPage } from './new-login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NewLoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class NewLoginPageRoutingModule {}\r\n"],"sourceRoot":"webpack:///"}