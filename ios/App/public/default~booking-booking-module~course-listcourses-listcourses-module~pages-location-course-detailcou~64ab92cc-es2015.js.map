{"version":3,"sources":["./src/app/models/payment-process.model.ts","./src/app/pages/payment/payment.page.ts","./src/app/pages/payment/payment.page.html"],"names":[],"mappings":"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","file":"default~booking-booking-module~course-listcourses-listcourses-module~pages-location-course-detailcou~64ab92cc-es2015.js","sourcesContent":["import { PaymentChannel, PaymentMode } from \"./valuelist.model\";\r\n\r\n  //Documento per la gestione del processo di pagamento\r\n  export class PaymentProcess {\r\n\r\n    modePayment: PaymentMode; //Modo del pagamento (OnSite, Bonifico, Elettronico)\r\n    channelPayment : PaymentChannel; //Canale di pagamento (OnSite, Bonifico, o esattamente il tipo elettronico)\r\n    \r\n    //Parametri per eseguire il pagamento\r\n    amount: number; //Valore del pagamento\r\n    currency: string; //Valuta\r\n    description: string; //Descrizione da associare\r\n    \r\n    //Risultato del processo di pagamento\r\n    processResult: boolean; //TRUE quanto il processo del pagamento Ã¨ concluso\r\n    messageResult: string;\r\n    idElectronicResult : string; //Identificativo della transazione\r\n\r\n\r\n    constructor(myModePayment: PaymentMode) {\r\n\r\n        this.idElectronicResult = '';\r\n        \r\n        //Impostare la modalita di pagamento\r\n        this.modePayment = myModePayment;\r\n\r\n        //In caso di pagaStruttura o Bonifico viene subito impostato il canale\r\n         if (myModePayment == PaymentMode.pagaStruttura) {\r\n            this.channelPayment = PaymentChannel.onSite;\r\n            //Processo di pagamento concluso\r\n            this.processResult = true;\r\n         }\r\n         else if (myModePayment == PaymentMode.pagaBonifico) {\r\n             this.channelPayment = PaymentChannel.bonifico;\r\n             //Processo di pagamento concluso\r\n             this.processResult = true;\r\n         }\r\n    }\r\n\r\n    \r\n\r\n  }","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ModalController, ToastController } from '@ionic/angular';\r\nimport { AreaPaymentSetting } from 'src/app/models/areapaymentsetting.model';\r\nimport { PaymentProcess } from 'src/app/models/payment-process.model';\r\nimport { PaymentChannel, PaymentEnvironment, PaypalStatus } from 'src/app/models/valuelist.model';\r\n\r\n//questo mi rende disponibile l'oggetto paypal che Ã¨ presente nello script caricato dinamicamente\r\ndeclare let paypal: any\r\n\r\n\r\n@Component({\r\n  selector: 'app-payment',\r\n  templateUrl: 'payment.page.html',\r\n  styleUrls: ['payment.page.scss'],\r\n})\r\nexport class PaymentPage implements OnInit{\r\n\r\n  @Input() paymentData: PaymentProcess;\r\n  @Input() listAreaPaymentSettings: AreaPaymentSetting[];\r\n\r\n  \r\n  urlPayPalScriptCheckOut = 'https://www.paypalobjects.com/api/checkout.js';\r\n  urlPayPalScriptSmart = 'https://www.paypal.com/sdk/js?client-id=';\r\n  urlPaypal = '';\r\n  paypalVersion = 'checkout'; //checkout o smart\r\n\r\n  //ProprietÃ  per la visualizzazione delle porzioni di pagamento\r\n  showPaypal = false;\r\n  showStripe = false;\r\n  showApplePay = false;\r\n  showGPay = false;\r\n\r\n  //Nessuna modalitÃ  di pagamento Ã¨ stata trovata\r\n  noPayment = false;\r\n  showProgressBar = true;\r\n\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    private toastController: ToastController\r\n    ) {\r\n    //Uso la nuova modalitÃ  SmartButton di Paypal\r\n    this.paypalVersion = 'smart';\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n      this.initPaymentMethods();\r\n\r\n  }\r\n\r\n  /**\r\n   * Inizializzo i metodi di pagamento che riesco a gestire\r\n   */\r\n  initPaymentMethods(){\r\n\r\n    //devo scorrere tutti i pagamenti possibili e gestirli\r\n    this.noPayment = true;\r\n\r\n    if (this.listAreaPaymentSettings && this.listAreaPaymentSettings.length != 0) {\r\n\r\n      for (let index = 0; index < this.listAreaPaymentSettings.length; index++) {\r\n\r\n        const elSettingPayment = this.listAreaPaymentSettings[index];\r\n\r\n        if (elSettingPayment.paymentInApp) {\r\n\r\n          switch (elSettingPayment.TIPOPAYMENT){\r\n            case PaymentChannel.paypal:\r\n              //Flag noPayment spento\r\n              this.noPayment = false;\r\n\r\n              //Pagamento Paypal\r\n              this.showPaypal = true;\r\n\r\n              //Determino URL SCRIPT da caricare\r\n              if (this.paypalVersion == 'checkout') {\r\n                this.urlPaypal = this.urlPayPalScriptCheckOut;\r\n              }\r\n              else if (this.paypalVersion == 'smart') {\r\n\r\n                //Nella modalitÃ  SMART alla fine dell'URL c'e' il ClientID da  utilizzare\r\n                switch (elSettingPayment.PPENVIRONMENT) {\r\n                  case PaymentEnvironment.production:\r\n                    this.urlPaypal = this.urlPayPalScriptSmart + elSettingPayment.PPCLIENTIDPRODUCTION;\r\n                    break;\r\n                    case PaymentEnvironment.test:\r\n                      this.urlPaypal = this.urlPayPalScriptSmart + elSettingPayment.PPCLIENTIDSANDBOX;\r\n                      break;                \r\n                  default:\r\n                    break;\r\n                }\r\n\r\n                this.urlPaypal += '&currency=EUR';\r\n                  \r\n              }\r\n\r\n              //Lo script Paypal Ã¨ giÃ  presente nell'header\r\n              if (this.scriptOnHead(this.urlPaypal)) {\r\n\r\n                  setTimeout(()=>{\r\n                    //Renderizzo il bottone\r\n                    this.renderPayPalBtn(elSettingPayment);\r\n                  },500);\r\n              }\r\n              else {\r\n                //Lo Script devo prima caricarlo e poi renderizzarli\r\n                //gestione paypal\r\n                this.loadDinamicScript(this.urlPaypal)\r\n                .then(()=> {\r\n\r\n                  setTimeout(()=>{\r\n                    //Renderizzo il bottone\r\n                    this.renderPayPalBtn(elSettingPayment);\r\n                  },500);\r\n                  \r\n                })\r\n                .catch(() => {\r\n                  //Non sono riuscito a caricare lo script di pagamento, probabilmente le credenziali di paypal sono state impostate male lato server\r\n                  this.showMessage(\"Errore nelle impostazioni di PayPal; contatta la struttura\")\r\n                  this.onCancelPayment()\r\n                })\r\n\r\n              }\r\n  \r\n            break;\r\n  \r\n            case PaymentChannel.stripe:\r\n              //Flag noPayment spento\r\n              this.noPayment = false;\r\n\r\n              //Pagamento Stripe\r\n              this.showStripe = true;\r\n\r\n            break;\r\n  \r\n            case PaymentChannel.applePay:\r\n\r\n              //Flag noPayment spento\r\n              this.noPayment = false;\r\n\r\n              //Pagamento Apple Pay\r\n              this.showApplePay = true;\r\n\r\n            break;\r\n            default:\r\n              break;\r\n  \r\n          }\r\n        }\r\n      }\r\n\r\n    }\r\n    else {\r\n\r\n      //Non ci sono pagamenti elettronici attivabili\r\n      this.noPayment = true;\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * Metodo da richiamare quando si vuole annullare il pagamento\r\n   * e chiudere la modale\r\n   */\r\n  onCancelPayment() {\r\n    //Segno il fallimento del processo di pagamento\r\n    this.paymentData.processResult = false;\r\n    this.paymentData.messageResult = 'Pagamento annullato';\r\n    //Chiudo la modale inviando il documento\r\n    this.modalController.dismiss(this.paymentData);\r\n  }\r\n\r\n\r\n  /**\r\n   * Metodo da richiamare quando si vuole concludere il pagamento \r\n   * positivamente\r\n   * @param channel Canale utilizzato (Paypal, Stripe etc)\r\n   * @param idTransaction Transazione\r\n   */\r\n  onSuccessPayment(channel:PaymentChannel, idTransaction:string) {\r\n    //Imposto il canale del pagamento utilizzato    \r\n    this.paymentData.channelPayment = channel;\r\n    //Segno il valore idTransaction\r\n    this.paymentData.idElectronicResult = idTransaction;\r\n    //Pagamento completato\r\n    this.paymentData.processResult = true;\r\n    this.paymentData.messageResult = 'Transazione completata con successo';\r\n\r\n    //Chiudo la modale inviando il documento\r\n    this.modalController.dismiss(this.paymentData);\r\n    \r\n  }\r\n\r\n  /**\r\n   * Metodo da richiamare dentro agli eventi Paypal\r\n   * per segnalare il buon fine del pagamento\r\n   * \r\n   */\r\n  OnSuccessPaypal(details) {\r\n    //Pagamento avvenuto con successo su Paypal\r\n    let idTransaction: string;\r\n    let namePayer: string;\r\n    let status: PaypalStatus; \r\n\r\n    if (details) {\r\n      switch (this.paypalVersion) {\r\n        case 'smart':\r\n          //La Transaction puo' essere intercettata tramite\r\n          //https://developer.paypal.com/docs/checkout/reference/server-integration/capture-transaction/\r\n            namePayer = details.payer.name.given_name;\r\n            idTransaction = details.id;\r\n            status = details.status;\r\n            console.log(details);\r\n          break;\r\n\r\n        case 'checkout':\r\n          namePayer = details.payer.name.given_name;\r\n          idTransaction = details.id;\r\n          status = details.status;\r\n        break;\r\n      \r\n        default:\r\n          break;\r\n      }\r\n\r\n      //Per ora invio solo idTransaction non so se mi serve anche altro\r\n      this.onSuccessPayment(PaymentChannel.paypal, idTransaction);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  \r\n  //carico dinamicamente lo script nella pagina\r\n  loadDinamicScript(urlScript: string){\r\n    return new Promise<void>((resolve, reject) => {\r\n      const script = document.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.src = urlScript;\r\n      document.getElementsByTagName('head')[0].appendChild(script);\r\n      \r\n      script.onload = () => {\r\n        console.log('Script correctly loaded');\r\n        resolve();\r\n      }\r\n\r\n      script.onerror =(err) => {\r\n        console.log(err);\r\n        reject();\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  // Cambiare con la modalita nuova\r\n  // https://developer.paypal.com/docs/checkout/integrate/\r\n  renderPayPalBtn(payPalSettings: AreaPaymentSetting){\r\n\r\n    let _this = this;\r\n    if (this.paypalVersion == 'checkout') {\r\n      this.showProgressBar = false;\r\n      \r\n      paypal.Button.render({\r\n        // Configure environment\r\n        //TODO environment va decodificato con \"production\" o \"sandbox\"\r\n        env: (payPalSettings.PPENVIRONMENT == PaymentEnvironment.production? 'production':'sandbox'),\r\n        client: {\r\n          sandbox: payPalSettings.PPCLIENTIDSANDBOX,\r\n          production: payPalSettings.PPCLIENTIDPRODUCTION\r\n        },\r\n        // Customize button (optional)\r\n        locale: 'it_IT',\r\n        style: {\r\n          size: 'responsive',\r\n          color: 'gold',\r\n          shape: 'pill',\r\n          label: 'pay',\r\n          fundingicons: true\r\n        },\r\n  \r\n        // Enable Pay Now checkout flow (optional)\r\n        commit: true,\r\n  \r\n        // Set up a payment\r\n        payment: function(data, actions) {\r\n          return actions.payment.create({\r\n            transactions: [{\r\n              amount: {\r\n                total: _this.paymentData.amount + '',\r\n                currency: _this.paymentData.currency\r\n              },\r\n              description: _this.paymentData.description\r\n            }],\r\n            note_to_payer: 'Contatta la struttura per ogni problematica sul pagamento.'\r\n          });\r\n        },\r\n        // Execute the payment\r\n        onAuthorize: function(data, actions) {\r\n          return actions.payment.execute()\r\n            .then(function(details) {\r\n              //######## Handler pagamento effettuato con successo ###########\r\n  \r\n              console.log('Pagamento confermato!');\r\n              //Chiamo la funzione Paypal di Conferma\r\n              _this.OnSuccessPaypal(details);\r\n\r\n              \r\n            })\r\n        \r\n          \r\n        }\r\n  \r\n    \r\n      }, '#customBtnPaypal');\r\n    }\r\n    else if (this.paypalVersion == 'smart') {\r\n      \r\n      this.showProgressBar = false;\r\n\r\n      paypal.Buttons({\r\n          createOrder: function (data,action) {\r\n            //Funzione con i dati della transazione\r\n            return action.order.create({\r\n              purchase_units: [{\r\n                amount: {\r\n                  value: _this.paymentData.amount + '',\r\n                  description: _this.paymentData.description\r\n                }\r\n              }]\r\n            });\r\n          },\r\n          onApprove: function(data, actions) {\r\n            return actions.order.capture()\r\n                   .then(function (details) {\r\n                      //Transazione avvenuta con successo\r\n                      //Chiamo la funzione Paypal di Conferma\r\n                      _this.OnSuccessPaypal(details);\r\n                   });\r\n          }\r\n      }).render('#customBtnPaypal')\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Verifica se un file Ã¨ giÃ  presente nell'header come script caricato\r\n   * \r\n   * @param source File da controllare\r\n   */\r\n  scriptOnHead(source: string) {\r\n    let scripts = document.getElementsByTagName(\"script\");\r\n    let onHead = false;\r\n\r\n    for (let i = 0; i < scripts.length; i++) {\r\n\r\n      if (scripts[i].getAttribute('src') == source) {\r\n        onHead = true;\r\n        break;\r\n      }\r\n\r\n    }\r\n    return onHead;\r\n  }\r\n\r\n\r\n  showMessage(message: string) {\r\n\r\n    //Creo un messaggio\r\n    this.toastController.create({\r\n      message: message,\r\n      duration: 3000\r\n    })\r\n    .then(tstMsg => {\r\n      tstMsg.present();\r\n    });\r\n\r\n  }\r\n}\r\n\r\n/* ESEMPIO JSON RISPOSTA DA PAYPAL */\r\n/*\r\nid -> Id Ordine\r\npurchase_units[0].payments.captures[0].id -> idTransaction\r\n\r\n{\r\n  \"id\": \"5O190127TN364715T\",\r\n  \"status\": \"COMPLETED\",\r\n  \"payer\": {\r\n    \"name\": {\r\n      \"given_name\": \"John\",\r\n      \"surname\": \"Doe\"\r\n    },\r\n    \"email_address\": \"customer@example.com\",\r\n    \"payer_id\": \"QYR5Z8XDVJNXQ\"\r\n  },\r\n  \"purchase_units\": [\r\n    {\r\n      \"reference_id\": \"d9f80740-38f0-11e8-b467-0ed5f89f718b\",\r\n      \"shipping\": {\r\n        \"address\": {\r\n          \"address_line_1\": \"2211 N First Street\",\r\n          \"address_line_2\": \"Building 17\",\r\n          \"admin_area_2\": \"San Jose\",\r\n          \"admin_area_1\": \"CA\",\r\n          \"postal_code\": \"95131\",\r\n          \"country_code\": \"US\"\r\n        }\r\n      },\r\n      \"payments\": {\r\n        \"captures\": [\r\n          {\r\n            \"id\": \"3C679366HH908993F\",\r\n            \"status\": \"COMPLETED\",\r\n            \"amount\": {\r\n              \"currency_code\": \"USD\",\r\n              \"value\": \"100.00\"\r\n            },\r\n            \"seller_protection\": {\r\n              \"status\": \"ELIGIBLE\",\r\n              \"dispute_categories\": [\r\n                \"ITEM_NOT_RECEIVED\",\r\n                \"UNAUTHORIZED_TRANSACTION\"\r\n              ]\r\n            },\r\n            \"final_capture\": true,\r\n            \"disbursement_mode\": \"INSTANT\",\r\n            \"seller_receivable_breakdown\": {\r\n              \"gross_amount\": {\r\n                \"currency_code\": \"USD\",\r\n                \"value\": \"100.00\"\r\n              },\r\n              \"paypal_fee\": {\r\n                \"currency_code\": \"USD\",\r\n                \"value\": \"3.00\"\r\n              },\r\n              \"net_amount\": {\r\n                \"currency_code\": \"USD\",\r\n                \"value\": \"97.00\"\r\n              }\r\n            },\r\n            \"create_time\": \"2018-04-01T21:20:49Z\",\r\n            \"update_time\": \"2018-04-01T21:20:49Z\",\r\n            \"links\": [\r\n              {\r\n                \"href\": \"https://api-m.paypal.com/v2/payments/captures/3C679366HH908993F\",\r\n                \"rel\": \"self\",\r\n                \"method\": \"GET\"\r\n              },\r\n              {\r\n                \"href\": \"https://api-m.paypal.com/v2/payments/captures/3C679366HH908993F/refund\",\r\n                \"rel\": \"refund\",\r\n                \"method\": \"POST\"\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  ],\r\n  \"links\": [\r\n    {\r\n      \"href\": \"https://api-m.paypal.com/v2/checkout/orders/5O190127TN364715T\",\r\n      \"rel\": \"self\",\r\n      \"method\": \"GET\"\r\n    }\r\n  ]\r\n}\r\n*/\r\n/* ******************************** */\r\n\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"primary\">\r\n      <ion-button (click)=\"onCancelPayment()\" >\r\n        <ion-icon slot=\"icon-only\" ios=\"close\" md=\"close\" ></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n\r\n    <ion-title>Pagamento</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n\r\n  <ion-button \r\n      color=\"danger\" \r\n      expand=\"block\" \r\n      class=\"full-buttons\" \r\n      (click)=\"onCancelPayment()\">\r\n      Aspetta, voglio modificare\r\n  </ion-button>\r\n\r\n  <div *ngIf=\"showProgressBar\">\r\n    <ion-card mode=\"ios\">\r\n      <ion-card-content>\r\n        <p>Connessione con servizi di pagamento...</p>  \r\n        <ion-progress-bar type=\"indeterminate\"></ion-progress-bar> \r\n      </ion-card-content>\r\n    </ion-card>\r\n  </div> \r\n\r\n  <div class=\"cart-total\">\r\n    <ion-item lines=\"none\">\r\n      <ion-label>{{paymentData.description}}</ion-label>\r\n      <ion-label slot=\"end\" class=\"ion-text-right\">{{paymentData.amount | currency: paymentData.currency}}</ion-label>\r\n    </ion-item>\r\n  </div>\r\n\r\n  <div class=\"cart-items\" *ngIf = \"showPaypal\">\r\n    <ion-card mode=\"ios\">\r\n\r\n      <!-- INIZIO PULSANTE PAYPAL -->\r\n      <ion-card-content>\r\n\r\n        <div  id=\"customBtnPaypal\">\r\n    \r\n        </div>\r\n      </ion-card-content>\r\n\r\n    </ion-card>\r\n  </div>\r\n\r\n\r\n\r\n \r\n</ion-content>\r\n"],"sourceRoot":"webpack:///"}