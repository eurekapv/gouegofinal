{"version":3,"sources":["webpack:///src/app/models/payment-process.model.ts","webpack:///src/app/pages/payment/payment.page.ts","webpack:///src/app/pages/payment/payment.page.html"],"names":["PaymentProcess","myModePayment","idElectronicResult","modePayment","pagaStruttura","channelPayment","onSite","processResult","pagaBonifico","bonifico","PaymentPage","modalController","toastController","urlPayPalScriptCheckOut","urlPayPalScriptSmart","urlPaypal","paypalVersion","showPaypal","showStripe","showApplePay","showGPay","noPayment","showProgressBar","initPaymentMethods","listAreaPaymentSettings","length","index","elSettingPayment","paymentInApp","TIPOPAYMENT","paypal","PPENVIRONMENT","production","PPCLIENTIDPRODUCTION","test","PPCLIENTIDSANDBOX","scriptOnHead","setTimeout","renderPayPalBtn","loadDinamicScript","then","showMessage","onCancelPayment","stripe","applePay","paymentData","messageResult","dismiss","channel","idTransaction","details","namePayer","status","payer","name","given_name","id","console","log","onSuccessPayment","urlScript","Promise","resolve","reject","script","document","createElement","type","src","getElementsByTagName","appendChild","onload","onerror","err","payPalSettings","_this","Button","render","env","client","sandbox","locale","style","size","color","shape","label","fundingicons","commit","payment","data","actions","create","transactions","amount","total","currency","description","note_to_payer","onAuthorize","execute","OnSuccessPaypal","Buttons","createOrder","action","order","purchase_units","value","onApprove","capture","source","scripts","onHead","i","getAttribute","message","duration","tstMsg","present"],"mappings":"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","file":"default~booking-booking-module~course-listcourses-listcourses-module~pages-location-course-detailcou~64ab92cc-es5.js","sourcesContent":["import { PaymentChannel, PaymentMode } from \"./valuelist.model\";\r\n\r\n  //Documento per la gestione del processo di pagamento\r\n  export class PaymentProcess {\r\n\r\n    modePayment: PaymentMode; //Modo del pagamento (OnSite, Bonifico, Elettronico)\r\n    channelPayment : PaymentChannel; //Canale di pagamento (OnSite, Bonifico, o esattamente il tipo elettronico)\r\n    \r\n    //Parametri per eseguire il pagamento\r\n    amount: number; //Valore del pagamento\r\n    currency: string; //Valuta\r\n    description: string; //Descrizione da associare\r\n    \r\n    //Risultato del processo di pagamento\r\n    processResult: boolean; //TRUE quanto il processo del pagamento Ã¨ concluso\r\n    messageResult: string;\r\n    idElectronicResult : string; //Identificativo della transazione\r\n\r\n\r\n    constructor(myModePayment: PaymentMode) {\r\n\r\n        this.idElectronicResult = '';\r\n        \r\n        //Impostare la modalita di pagamento\r\n        this.modePayment = myModePayment;\r\n\r\n        //In caso di pagaStruttura o Bonifico viene subito impostato il canale\r\n         if (myModePayment == PaymentMode.pagaStruttura) {\r\n            this.channelPayment = PaymentChannel.onSite;\r\n            //Processo di pagamento concluso\r\n            this.processResult = true;\r\n         }\r\n         else if (myModePayment == PaymentMode.pagaBonifico) {\r\n             this.channelPayment = PaymentChannel.bonifico;\r\n             //Processo di pagamento concluso\r\n             this.processResult = true;\r\n         }\r\n    }\r\n\r\n    \r\n\r\n  }","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ModalController, ToastController } from '@ionic/angular';\r\nimport { AreaPaymentSetting } from 'src/app/models/areapaymentsetting.model';\r\nimport { PaymentProcess } from 'src/app/models/payment-process.model';\r\nimport { PaymentChannel, PaymentEnvironment, PaypalStatus } from 'src/app/models/valuelist.model';\r\n\r\n//questo mi rende disponibile l'oggetto paypal che Ã¨ presente nello script caricato dinamicamente\r\ndeclare let paypal: any\r\n\r\n\r\n@Component({\r\n  selector: 'app-payment',\r\n  templateUrl: 'payment.page.html',\r\n  styleUrls: ['payment.page.scss'],\r\n})\r\nexport class PaymentPage implements OnInit{\r\n\r\n  @Input() paymentData: PaymentProcess;\r\n  @Input() listAreaPaymentSettings: AreaPaymentSetting[];\r\n\r\n  \r\n  urlPayPalScriptCheckOut = 'https://www.paypalobjects.com/api/checkout.js';\r\n  urlPayPalScriptSmart = 'https://www.paypal.com/sdk/js?client-id=';\r\n  urlPaypal = '';\r\n  paypalVersion = 'checkout'; //checkout o smart\r\n\r\n  //ProprietÃ  per la visualizzazione delle porzioni di pagamento\r\n  showPaypal = false;\r\n  showStripe = false;\r\n  showApplePay = false;\r\n  showGPay = false;\r\n\r\n  //Nessuna modalitÃ  di pagamento Ã¨ stata trovata\r\n  noPayment = false;\r\n  showProgressBar = true;\r\n\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    private toastController: ToastController\r\n    ) {\r\n    //Uso la nuova modalitÃ  SmartButton di Paypal\r\n    this.paypalVersion = 'smart';\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n      this.initPaymentMethods();\r\n\r\n  }\r\n\r\n  /**\r\n   * Inizializzo i metodi di pagamento che riesco a gestire\r\n   */\r\n  initPaymentMethods(){\r\n\r\n    //devo scorrere tutti i pagamenti possibili e gestirli\r\n    this.noPayment = true;\r\n\r\n    if (this.listAreaPaymentSettings && this.listAreaPaymentSettings.length != 0) {\r\n\r\n      for (let index = 0; index < this.listAreaPaymentSettings.length; index++) {\r\n\r\n        const elSettingPayment = this.listAreaPaymentSettings[index];\r\n\r\n        if (elSettingPayment.paymentInApp) {\r\n\r\n          switch (elSettingPayment.TIPOPAYMENT){\r\n            case PaymentChannel.paypal:\r\n              //Flag noPayment spento\r\n              this.noPayment = false;\r\n\r\n              //Pagamento Paypal\r\n              this.showPaypal = true;\r\n\r\n              //Determino URL SCRIPT da caricare\r\n              if (this.paypalVersion == 'checkout') {\r\n                this.urlPaypal = this.urlPayPalScriptCheckOut;\r\n              }\r\n              else if (this.paypalVersion == 'smart') {\r\n\r\n                //Nella modalitÃ  SMART alla fine dell'URL c'e' il ClientID da  utilizzare\r\n                switch (elSettingPayment.PPENVIRONMENT) {\r\n                  case PaymentEnvironment.production:\r\n                    this.urlPaypal = this.urlPayPalScriptSmart + elSettingPayment.PPCLIENTIDPRODUCTION;\r\n                    break;\r\n                    case PaymentEnvironment.test:\r\n                      this.urlPaypal = this.urlPayPalScriptSmart + elSettingPayment.PPCLIENTIDSANDBOX;\r\n                      break;                \r\n                  default:\r\n                    break;\r\n                }\r\n\r\n                this.urlPaypal += '&currency=EUR';\r\n                  \r\n              }\r\n\r\n              //Lo script Paypal Ã¨ giÃ  presente nell'header\r\n              if (this.scriptOnHead(this.urlPaypal)) {\r\n\r\n                  setTimeout(()=>{\r\n                    //Renderizzo il bottone\r\n                    this.renderPayPalBtn(elSettingPayment);\r\n                  },500);\r\n              }\r\n              else {\r\n                //Lo Script devo prima caricarlo e poi renderizzarli\r\n                //gestione paypal\r\n                this.loadDinamicScript(this.urlPaypal)\r\n                .then(()=> {\r\n\r\n                  setTimeout(()=>{\r\n                    //Renderizzo il bottone\r\n                    this.renderPayPalBtn(elSettingPayment);\r\n                  },500);\r\n                  \r\n                })\r\n                .catch(() => {\r\n                  //Non sono riuscito a caricare lo script di pagamento, probabilmente le credenziali di paypal sono state impostate male lato server\r\n                  this.showMessage(\"Errore nelle impostazioni di PayPal; contatta la struttura\")\r\n                  this.onCancelPayment()\r\n                })\r\n\r\n              }\r\n  \r\n            break;\r\n  \r\n            case PaymentChannel.stripe:\r\n              //Flag noPayment spento\r\n              this.noPayment = false;\r\n\r\n              //Pagamento Stripe\r\n              this.showStripe = true;\r\n\r\n            break;\r\n  \r\n            case PaymentChannel.applePay:\r\n\r\n              //Flag noPayment spento\r\n              this.noPayment = false;\r\n\r\n              //Pagamento Apple Pay\r\n              this.showApplePay = true;\r\n\r\n            break;\r\n            default:\r\n              break;\r\n  \r\n          }\r\n        }\r\n      }\r\n\r\n    }\r\n    else {\r\n\r\n      //Non ci sono pagamenti elettronici attivabili\r\n      this.noPayment = true;\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * Metodo da richiamare quando si vuole annullare il pagamento\r\n   * e chiudere la modale\r\n   */\r\n  onCancelPayment() {\r\n    //Segno il fallimento del processo di pagamento\r\n    this.paymentData.processResult = false;\r\n    this.paymentData.messageResult = 'Pagamento annullato';\r\n    //Chiudo la modale inviando il documento\r\n    this.modalController.dismiss(this.paymentData);\r\n  }\r\n\r\n\r\n  /**\r\n   * Metodo da richiamare quando si vuole concludere il pagamento \r\n   * positivamente\r\n   * @param channel Canale utilizzato (Paypal, Stripe etc)\r\n   * @param idTransaction Transazione\r\n   */\r\n  onSuccessPayment(channel:PaymentChannel, idTransaction:string) {\r\n    //Imposto il canale del pagamento utilizzato    \r\n    this.paymentData.channelPayment = channel;\r\n    //Segno il valore idTransaction\r\n    this.paymentData.idElectronicResult = idTransaction;\r\n    //Pagamento completato\r\n    this.paymentData.processResult = true;\r\n    this.paymentData.messageResult = 'Transazione completata con successo';\r\n\r\n    //Chiudo la modale inviando il documento\r\n    this.modalController.dismiss(this.paymentData);\r\n    \r\n  }\r\n\r\n  /**\r\n   * Metodo da richiamare dentro agli eventi Paypal\r\n   * per segnalare il buon fine del pagamento\r\n   * \r\n   */\r\n  OnSuccessPaypal(details) {\r\n    //Pagamento avvenuto con successo su Paypal\r\n    let idTransaction: string;\r\n    let namePayer: string;\r\n    let status: PaypalStatus; \r\n\r\n    if (details) {\r\n      switch (this.paypalVersion) {\r\n        case 'smart':\r\n          //La Transaction puo' essere intercettata tramite\r\n          //https://developer.paypal.com/docs/checkout/reference/server-integration/capture-transaction/\r\n            namePayer = details.payer.name.given_name;\r\n            idTransaction = details.id;\r\n            status = details.status;\r\n            console.log(details);\r\n          break;\r\n\r\n        case 'checkout':\r\n          namePayer = details.payer.name.given_name;\r\n          idTransaction = details.id;\r\n          status = details.status;\r\n        break;\r\n      \r\n        default:\r\n          break;\r\n      }\r\n\r\n      //Per ora invio solo idTransaction non so se mi serve anche altro\r\n      this.onSuccessPayment(PaymentChannel.paypal, idTransaction);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  \r\n  //carico dinamicamente lo script nella pagina\r\n  loadDinamicScript(urlScript: string){\r\n    return new Promise<void>((resolve, reject) => {\r\n      const script = document.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.src = urlScript;\r\n      document.getElementsByTagName('head')[0].appendChild(script);\r\n      \r\n      script.onload = () => {\r\n        console.log('Script correctly loaded');\r\n        resolve();\r\n      }\r\n\r\n      script.onerror =(err) => {\r\n        console.log(err);\r\n        reject();\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  // Cambiare con la modalita nuova\r\n  // https://developer.paypal.com/docs/checkout/integrate/\r\n  renderPayPalBtn(payPalSettings: AreaPaymentSetting){\r\n\r\n    let _this = this;\r\n    if (this.paypalVersion == 'checkout') {\r\n      this.showProgressBar = false;\r\n      \r\n      paypal.Button.render({\r\n        // Configure environment\r\n        //TODO environment va decodificato con \"production\" o \"sandbox\"\r\n        env: (payPalSettings.PPENVIRONMENT == PaymentEnvironment.production? 'production':'sandbox'),\r\n        client: {\r\n          sandbox: payPalSettings.PPCLIENTIDSANDBOX,\r\n          production: payPalSettings.PPCLIENTIDPRODUCTION\r\n        },\r\n        // Customize button (optional)\r\n        locale: 'it_IT',\r\n        style: {\r\n          size: 'responsive',\r\n          color: 'gold',\r\n          shape: 'pill',\r\n          label: 'pay',\r\n          fundingicons: true\r\n        },\r\n  \r\n        // Enable Pay Now checkout flow (optional)\r\n        commit: true,\r\n  \r\n        // Set up a payment\r\n        payment: function(data, actions) {\r\n          return actions.payment.create({\r\n            transactions: [{\r\n              amount: {\r\n                total: _this.paymentData.amount + '',\r\n                currency: _this.paymentData.currency\r\n              },\r\n              description: _this.paymentData.description\r\n            }],\r\n            note_to_payer: 'Contatta la struttura per ogni problematica sul pagamento.'\r\n          });\r\n        },\r\n        // Execute the payment\r\n        onAuthorize: function(data, actions) {\r\n          return actions.payment.execute()\r\n            .then(function(details) {\r\n              //######## Handler pagamento effettuato con successo ###########\r\n  \r\n              console.log('Pagamento confermato!');\r\n              //Chiamo la funzione Paypal di Conferma\r\n              _this.OnSuccessPaypal(details);\r\n\r\n              \r\n            })\r\n        \r\n          \r\n        }\r\n  \r\n    \r\n      }, '#customBtnPaypal');\r\n    }\r\n    else if (this.paypalVersion == 'smart') {\r\n      \r\n      this.showProgressBar = false;\r\n\r\n      paypal.Buttons({\r\n          createOrder: function (data,action) {\r\n            //Funzione con i dati della transazione\r\n            return action.order.create({\r\n              purchase_units: [{\r\n                amount: {\r\n                  value: _this.paymentData.amount + '',\r\n                  description: _this.paymentData.description\r\n                }\r\n              }]\r\n            });\r\n          },\r\n          onApprove: function(data, actions) {\r\n            return actions.order.capture()\r\n                   .then(function (details) {\r\n                      //Transazione avvenuta con successo\r\n                      //Chiamo la funzione Paypal di Conferma\r\n                      _this.OnSuccessPaypal(details);\r\n                   });\r\n          }\r\n      }).render('#customBtnPaypal')\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Verifica se un file Ã¨ giÃ  presente nell'header come script caricato\r\n   * \r\n   * @param source File da controllare\r\n   */\r\n  scriptOnHead(source: string) {\r\n    let scripts = document.getElementsByTagName(\"script\");\r\n    let onHead = false;\r\n\r\n    for (let i = 0; i < scripts.length; i++) {\r\n\r\n      if (scripts[i].getAttribute('src') == source) {\r\n        onHead = true;\r\n        break;\r\n      }\r\n\r\n    }\r\n    return onHead;\r\n  }\r\n\r\n\r\n  showMessage(message: string) {\r\n\r\n    //Creo un messaggio\r\n    this.toastController.create({\r\n      message: message,\r\n      duration: 3000\r\n    })\r\n    .then(tstMsg => {\r\n      tstMsg.present();\r\n    });\r\n\r\n  }\r\n}\r\n\r\n/* ESEMPIO JSON RISPOSTA DA PAYPAL */\r\n/*\r\nid -> Id Ordine\r\npurchase_units[0].payments.captures[0].id -> idTransaction\r\n\r\n{\r\n  \"id\": \"5O190127TN364715T\",\r\n  \"status\": \"COMPLETED\",\r\n  \"payer\": {\r\n    \"name\": {\r\n      \"given_name\": \"John\",\r\n      \"surname\": \"Doe\"\r\n    },\r\n    \"email_address\": \"customer@example.com\",\r\n    \"payer_id\": \"QYR5Z8XDVJNXQ\"\r\n  },\r\n  \"purchase_units\": [\r\n    {\r\n      \"reference_id\": \"d9f80740-38f0-11e8-b467-0ed5f89f718b\",\r\n      \"shipping\": {\r\n        \"address\": {\r\n          \"address_line_1\": \"2211 N First Street\",\r\n          \"address_line_2\": \"Building 17\",\r\n          \"admin_area_2\": \"San Jose\",\r\n          \"admin_area_1\": \"CA\",\r\n          \"postal_code\": \"95131\",\r\n          \"country_code\": \"US\"\r\n        }\r\n      },\r\n      \"payments\": {\r\n        \"captures\": [\r\n          {\r\n            \"id\": \"3C679366HH908993F\",\r\n            \"status\": \"COMPLETED\",\r\n            \"amount\": {\r\n              \"currency_code\": \"USD\",\r\n              \"value\": \"100.00\"\r\n            },\r\n            \"seller_protection\": {\r\n              \"status\": \"ELIGIBLE\",\r\n              \"dispute_categories\": [\r\n                \"ITEM_NOT_RECEIVED\",\r\n                \"UNAUTHORIZED_TRANSACTION\"\r\n              ]\r\n            },\r\n            \"final_capture\": true,\r\n            \"disbursement_mode\": \"INSTANT\",\r\n            \"seller_receivable_breakdown\": {\r\n              \"gross_amount\": {\r\n                \"currency_code\": \"USD\",\r\n                \"value\": \"100.00\"\r\n              },\r\n              \"paypal_fee\": {\r\n                \"currency_code\": \"USD\",\r\n                \"value\": \"3.00\"\r\n              },\r\n              \"net_amount\": {\r\n                \"currency_code\": \"USD\",\r\n                \"value\": \"97.00\"\r\n              }\r\n            },\r\n            \"create_time\": \"2018-04-01T21:20:49Z\",\r\n            \"update_time\": \"2018-04-01T21:20:49Z\",\r\n            \"links\": [\r\n              {\r\n                \"href\": \"https://api-m.paypal.com/v2/payments/captures/3C679366HH908993F\",\r\n                \"rel\": \"self\",\r\n                \"method\": \"GET\"\r\n              },\r\n              {\r\n                \"href\": \"https://api-m.paypal.com/v2/payments/captures/3C679366HH908993F/refund\",\r\n                \"rel\": \"refund\",\r\n                \"method\": \"POST\"\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  ],\r\n  \"links\": [\r\n    {\r\n      \"href\": \"https://api-m.paypal.com/v2/checkout/orders/5O190127TN364715T\",\r\n      \"rel\": \"self\",\r\n      \"method\": \"GET\"\r\n    }\r\n  ]\r\n}\r\n*/\r\n/* ******************************** */\r\n\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"primary\">\r\n      <ion-button (click)=\"onCancelPayment()\" >\r\n        <ion-icon slot=\"icon-only\" ios=\"close\" md=\"close\" ></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n\r\n    <ion-title>Pagamento</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n\r\n  <ion-button \r\n      color=\"danger\" \r\n      expand=\"block\" \r\n      class=\"full-buttons\" \r\n      (click)=\"onCancelPayment()\">\r\n      Aspetta, voglio modificare\r\n  </ion-button>\r\n\r\n  <div *ngIf=\"showProgressBar\">\r\n    <ion-card mode=\"ios\">\r\n      <ion-card-content>\r\n        <p>Connessione con servizi di pagamento...</p>  \r\n        <ion-progress-bar type=\"indeterminate\"></ion-progress-bar> \r\n      </ion-card-content>\r\n    </ion-card>\r\n  </div> \r\n\r\n  <div class=\"cart-total\">\r\n    <ion-item lines=\"none\">\r\n      <ion-label>{{paymentData.description}}</ion-label>\r\n      <ion-label slot=\"end\" class=\"ion-text-right\">{{paymentData.amount | currency: paymentData.currency}}</ion-label>\r\n    </ion-item>\r\n  </div>\r\n\r\n  <div class=\"cart-items\" *ngIf = \"showPaypal\">\r\n    <ion-card mode=\"ios\">\r\n\r\n      <!-- INIZIO PULSANTE PAYPAL -->\r\n      <ion-card-content>\r\n\r\n        <div  id=\"customBtnPaypal\">\r\n    \r\n        </div>\r\n      </ion-card-content>\r\n\r\n    </ion-card>\r\n  </div>\r\n\r\n\r\n\r\n \r\n</ion-content>\r\n"]}