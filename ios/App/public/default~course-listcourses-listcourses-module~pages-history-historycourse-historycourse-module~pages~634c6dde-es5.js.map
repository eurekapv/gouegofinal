{"version":3,"sources":["webpack:///src/app/pages/location/course/detailcourse/calendar/calendar.page.ts","webpack:///src/app/pages/location/course/detailcourse/calendar/calendar.page.html"],"names":["CalendarPage","mdlController","docStructureService","loadingController","toastController","calendarCorso","ricevuti","filter","IDCORSO","myCorso","ID","params","decode","active","create","message","spinner","backdropDismiss","then","elLoading","present","requestNew","listCalendar","dismiss","error","showMessage","console","log","itemCalendarCorso","color","eventoPassato","messaggio","duration","elModal","closeCalendar"],"mappings":"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","file":"default~course-listcourses-listcourses-module~pages-history-historycourse-historycourse-module~pages~634c6dde-es5.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\r\nimport { Corso } from 'src/app/models/corso.model';\r\nimport { StartService } from 'src/app/services/start.service';\r\nimport { ModalController, ToastController, LoadingController } from '@ionic/angular';\r\nimport { PianificazioneCorso } from 'src/app/models/pianificazionecorso.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { DocstructureService } from 'src/app/library/services/docstructure.service';\r\nimport { RequestParams, RequestDecode } from 'src/app/library/models/requestParams.model';\r\n\r\n@Component({\r\n  selector: 'app-calendar',\r\n  templateUrl: './calendar.page.html',\r\n  styleUrls: ['./calendar.page.scss'],\r\n})\r\nexport class CalendarPage implements OnInit {\r\n\r\n  @Input() myCorso: Corso;\r\n  calendarCorso: PianificazioneCorso[]=[];\r\n  listenCalendarCorso: Subscription;\r\n  ricevuti = false; //Indica se gli orari sono stati ricevuti\r\n\r\n  constructor(\r\n              private mdlController: ModalController,\r\n              private docStructureService: DocstructureService,\r\n              private loadingController : LoadingController,\r\n              private toastController : ToastController) { }\r\n\r\n  ngOnInit() {\r\n    //Sottoscrivo alla ricezione\r\n    // this.listenCalendarCorso = this.startService.calendarioCorso.subscribe(listCalendar => {\r\n    //   this.calendarCorso = listCalendar;\r\n\r\n    //   this.ricevuti = true;\r\n      \r\n      \r\n    //})\r\n\r\n    //Richiedo il corso\r\n    //this.startService.requestCalendarioCorso(this.myCorso.ID);\r\n\r\n\r\n    //creo il filtro per la richiesta\r\n    let filter = new PianificazioneCorso(true);\r\n    filter.IDCORSO=this.myCorso.ID;\r\n\r\n    //creo i parametri per la richiesta\r\n    let params = new RequestParams();\r\n    params.decode = new RequestDecode();\r\n    params.decode.active = true;\r\n\r\n    //creo il loading \r\n    this.loadingController.create({\r\n      message: 'Caricamento...',\r\n      spinner: \"circular\",\r\n      backdropDismiss: true\r\n    })\r\n    .then(elLoading => {\r\n      elLoading.present();\r\n\r\n      //richiedo il calendario\r\n      this.docStructureService.requestNew(filter,params)\r\n      .then(listCalendar => {\r\n        //dismetto il loading e salvo il calendario\r\n        elLoading.dismiss();\r\n        this.calendarCorso = listCalendar;\r\n        \r\n      })\r\n      .catch(error => {\r\n        //dismetto il loading e mostro l'errore\r\n        elLoading.dismiss();\r\n        this.showMessage('Errore di connessione');\r\n        console.log(error);\r\n        \r\n      })\r\n    })\r\n    \r\n  }\r\n\r\n\r\n  //Chiudo il calendario\r\n  closeCalendar() {\r\n    this.mdlController.dismiss();\r\n  }\r\n\r\n  colorItem(itemCalendarCorso: PianificazioneCorso) {\r\n    let color = 'success';\r\n    if (itemCalendarCorso.eventoPassato()) {\r\n      color='danger';\r\n    }\r\n    return color;\r\n  }\r\n\r\n  showMessage (messaggio : string){\r\n    this.toastController.create({\r\n      message: messaggio,\r\n      duration: 3000\r\n\r\n    }).then (elModal => {\r\n      elModal.present();\r\n    })\r\n  }\r\n}\r\n","<ion-header class=\"ion-no-border\">\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-button>\r\n        <ion-icon name=\"calendar\"></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n\r\n    \r\n    <ion-title>{{myCorso.DENOMINAZIONE|titlecase}}</ion-title>\r\n    \r\n    <ion-buttons slot=\"end\">\r\n      <ion-button (click)=\"closeCalendar()\">\r\n        <ion-icon name=\"close\"></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n\r\n  <!-- RICEVUTI E PRESENTI -->\r\n  <ion-list class=\"ion-no-padding\" *ngIf=\"calendarCorso.length !== 0\" id=\"cal-find\">\r\n    <ion-item *ngFor=\"let giornata of calendarCorso\" class=\"ion-no-padding ion-no-margin\" color=\"light\">\r\n\r\n      <ion-col size=\"4\" class=\"colGiorno\">\r\n        <div class=\"contentGiorno ion-no-padding\">\r\n          <h5>\r\n            {{giornata.DATA | date:'EEEE'|titlecase}}\r\n          </h5>\r\n          <h4>\r\n            {{giornata.DATA | date:'d'}}\r\n            {{giornata.DATA | date:'MMM' | uppercase}} \r\n            '{{giornata.DATA | date:'yy'}}\r\n          </h4>      \r\n          <h6>\r\n            {{giornata['_DENOMINAZIONE_Campo']}}\r\n          </h6>    \r\n        </div>\r\n      </ion-col>\r\n\r\n      <ion-col size=\"8\" class=\"colOrario\">\r\n        <ion-card mode=\"ios\" class=\"ion-no-margin ion-no-padding\">\r\n          <ion-card-content class=\"ion-no-margin ion-no-padding\" >\r\n            <ion-list class=\"ion-no-margin\">\r\n              <ion-item lines=\"none\" [color]=\"colorItem(giornata)\">\r\n                <ion-icon name=\"play\" slot=\"start\"></ion-icon>\r\n                <ion-label> {{giornata.DATAORAINIZIO | date:'HH:mm'}}</ion-label>\r\n                \r\n              </ion-item>\r\n\r\n              <ion-item lines=\"none\"  >\r\n                <ion-icon name=\"pause\" slot=\"start\"></ion-icon>\r\n                <ion-label> {{giornata.DATAORAFINE | date:'HH:mm'}}</ion-label>\r\n                <ion-badge [color]=\"colorItem(giornata)\" slot=\"end\">{{ giornata.ORELEZIONE }} h</ion-badge>\r\n              </ion-item>\r\n\r\n            </ion-list>\r\n\r\n\r\n          </ion-card-content>\r\n        </ion-card>\r\n      </ion-col>\r\n      \r\n    </ion-item>\r\n  </ion-list>\r\n\r\n\r\n  <div \r\n    *ngIf=\"ricevuti && calendarCorso.length === 0\" \r\n    class=\"nofind-cnt\" >\r\n\r\n    <ion-label>Programmazione</ion-label>\r\n    <ion-label>non disponibile</ion-label>\r\n    \r\n  </div>\r\n\r\n\r\n</ion-content>\r\n\r\n"]}