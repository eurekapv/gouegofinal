{"version":3,"sources":["./src/app/pages/location/course/bookcourse/bookcourse.module.ts","./src/app/pages/location/course/bookcourse/bookcourse.page.ts","./src/app/pages/location/course/bookcourse/bookcourse.page.html","./src/app/pages/location/course/bookcourse/bookcourse-routing.module.ts"],"names":[],"mappings":"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","file":"default~course-listcourses-listcourses-module~pages-location-course-detailcourse-course-module~pages~246d8758-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { BookcoursePageRoutingModule } from './bookcourse-routing.module';\n\nimport { BookcoursePage } from './bookcourse.page';\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\nimport { PaymentPage } from '../../../payment/payment.page';\nimport { SharedComponentsModule } from 'src/app/shared/components/shared-components.module';\nimport { PaymentChooseComponent } from 'src/app/shared/components/payment-choose/payment-choose.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    BookcoursePageRoutingModule,\n    PipesModule,\n    SharedComponentsModule\n  ],\n  declarations: [BookcoursePage],\n  entryComponents:[PaymentChooseComponent, PaymentPage],\n  exports:[BookcoursePage]\n})\nexport class BookcoursePageModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertController, LoadingController, ModalController, NavController, NavParams, ToastController } from '@ionic/angular';\nimport { Subscription } from 'rxjs';\nimport { DocstructureService } from 'src/app/library/services/docstructure.service';\nimport { Area } from 'src/app/models/area.model';\nimport { AreaPaymentSetting } from 'src/app/models/areapaymentsetting.model';\nimport { Corso } from 'src/app/models/corso.model';\nimport { Location } from 'src/app/models/location.model';\nimport { PaymentProcess } from 'src/app/models/payment-process.model';\nimport { PageType, PaymentChannel, PaymentMode, SettorePagamentiAttivita, TipoRigoIncasso } from 'src/app/models/valuelist.model';\nimport { PaymentPage } from 'src/app/pages/payment/payment.page';\nimport { StartService } from 'src/app/services/start.service';\nimport { Plugins } from '@capacitor/core';\nimport { AreaLink } from 'src/app/models/arealink.model';\nimport { Settimana } from 'src/app/models/settimana.model';\nimport { UtenteIscrizione } from 'src/app/models/utenteiscrizione.model';\nimport { Utente } from 'src/app/models/utente.model';\nimport { PostResponse } from 'src/app/library/models/postResult.model';\nimport { IscrizioneCorso } from 'src/app/models/iscrizionecorso.model';\nimport { IscrizioneIncasso } from 'src/app/models/iscrizioneincasso.model';\nconst { Browser } = Plugins;\n\n@Component({\n  selector: 'app-bookcourse',\n  templateUrl: './bookcourse.page.html',\n  styleUrls: ['./bookcourse.page.scss'],\n})\nexport class BookcoursePage implements OnInit, OnDestroy {\n\n  myCorso: Corso = new Corso();\n  subMyCorso: Subscription;\n\n  myLocation: Location = new Location(); \n\n  isDesktop: boolean;\n  iconColor = 'primary';\n  \n  userLogged = false;\n  subUserLogged: Subscription;\n  docUser: Utente;\n  subUser: Subscription;\n\n  //Gestione Abilitazione Iscrizioni\n  listenSelectedArea:Subscription;\n  selectedArea: Area;\n  enableIscrizioni:boolean = false;\n\n  //accettazione delle condizioni di vendita\n  disclaimer: boolean =false;\n\n  //Configurazioni di pagamento\n  myListPayment: AreaPaymentSetting[];\n  mySelectedPayment: AreaPaymentSetting;\n  myPaymentMode: PaymentMode;\n\n  subPaymentResult: Subscription;\n  onlyDaysCorso: Settimana[] = []; //Contiene i soli giorni di corso\n\n\n  //Controllo Posti Disponibili\n  flagPostiDisponibili = false;\n  txtPostiDisponibili = '';\n\n  constructor(private startService: StartService,\n              private navParams: NavParams,\n              private modalCtrl: ModalController,\n              private docStructureService : DocstructureService,\n              private loadingController : LoadingController,\n              private toastCtrl : ToastController,\n              private alertCtrl: AlertController,\n              private navCtrl: NavController) {\n\n              //Ascolto cambiamenti dell'Area per l'abilitazione delle iscrizioni\n              this.onListenSelectedArea();\n\n              //Ascolto cambiamento dell'utente\n              this.onListenSelectedUser();\n\n\n\n  }\n\n/**\n * In ascolto dell'area selezionata, per capire se solo abilitate le iscrizioni\n */\n onListenSelectedArea() {\n  this.listenSelectedArea = this.startService.areaSelected\n   .subscribe(elArea => {\n\n    //Imposto l'area di riferimento\n     this.selectedArea = elArea;\n\n    //Impostazione tipologie pagamento\n    this.setListPayment();\n\n     //Controllo se nell'area sono abilitate le iscrizioni\n     if (this.selectedArea.APPISCRIZIONI == true) {\n       this.enableIscrizioni = true;\n\n     }\n     else {\n       this.enableIscrizioni = false;\n     }\n }, error => {\n   this.enableIscrizioni = false;\n })\n}  \n\n/**\n * Ascolto il cambiamento dell'utente\n */\nonListenSelectedUser() {\n  //Controllo se l'utente è loggato\n  this.subUserLogged = this.startService.utenteLogged\n                            .subscribe(element => {\n                                    this.userLogged = element;\n                            });\n\n  //Sottoscrivo al documento Utente\n  this.subUser = this.startService.utente.subscribe(elUser => {\n      this.docUser = elUser;\n  })                            \n}\n\nngOnInit() {\n\n  //this.isDesktop = this.startService.isDesktop;\n  //Sembra che l'istruzione sopra non funzioni correttamente\n  this.isDesktop = false;\n\n  //Recupero i parametri di chiamata\n  this.myCorso = this.navParams.get('params');\n  \n  if (this.myCorso==null||this.myCorso==undefined){\n\n      //se non ho i parametri, esco\n      this.showToastMessage(\"Corso non trovato\");\n\n      //Chiudo la modale\n      this.closeModal();\n  }\n  else {\n    //Recupero le giornate di corso\n    this.onlyDaysCorso = this.myCorso.getArrayGiorniCorso();\n\n    //Richiedo i Posti Disponibili per l'iscrizione\n    this.requestPostiDisponibili(this.myCorso.ID);\n\n    //Richiedo la Location\n\n    //Imposto il loading\n    this.loadingController.create({\n      spinner: \"circular\",\n      message: 'Caricamento',\n      backdropDismiss: true\n    })\n    .then(elLoading => {\n\n      //Mostro il loading\n      elLoading.present();\n\n      //ora richiedo la location\n      this.requestLocationById(this.myCorso.IDLOCATION)\n          .then(() => {\n            //Posso rimanere nella pagina\n            elLoading.dismiss();\n          })\n          .catch(error => {\n\n            elLoading.dismiss();\n\n            this.showToastMessage('Spiacenti, errori nel recupero del corso');\n\n            this.closeModal();                         \n          })      \n\n    })\n  }\n            \n} \n\n/**\n * Contatta il server per sapere se ci sono posti per l'iscrizione\n * Valorizza due proprieta\n * posti Disponibili: Boolean\n * txtPostiDisponibili: Messaggio da visualizzare\n * \n * @param idCorso idCorso richiesto\n */\nrequestPostiDisponibili(idCorso: string) {\n  \n\n  this.startService.getPostiDisponibiliCorso(idCorso)\n      .then((elResponse:PostResponse) => {\n        if (elResponse.result) {\n          this.flagPostiDisponibili = true;\n        }\n        else {\n          this.flagPostiDisponibili = false;\n        }\n\n        this.txtPostiDisponibili = elResponse.message;\n\n      })\n}\n\nngOnDestroy() {\n  if (this.subMyCorso) {\n    this.subMyCorso.unsubscribe();\n  }\n\n  if (this.subUserLogged) {\n    this.subUserLogged.unsubscribe();\n  }\n\n  if (this.listenSelectedArea) {\n    this.listenSelectedArea.unsubscribe();\n  }\n}\n\n\n\n/**\n * Richiedo la location\n * @param idLocation idLocation \n */\nrequestLocationById(idLocation: string): Promise<void>{\n\n  //preparo il filtro\n  let filterLocation: Location = new Location(true);\n  \n  return new Promise<void>((resolve, reject) => {\n    filterLocation.ID = idLocation;\n\n    //faccio la richiesta\n    this.docStructureService.requestNew(filterLocation)\n        .then(elLocation => {\n      \n          if (elLocation && elLocation.length !=0){\n  \n            //Imposto la location\n            this.myLocation = elLocation[0];\n            resolve();\n\n          }\n          else{\n            reject('Location not found');\n          }\n        }).catch(error => {\n            reject('Connection error' + error);\n      \n        })\n    \n    })\n}\n\n  /**\n   * Chiama il servizio passandogli l'id dell'oggetto corso, \n   * e restituisce la stringa dell'icona\n   * @param corso l'oggetto corso per cui si richiede l'icona\n   */\n   getIcon(corso:Corso)\n   {\n     return this.startService.getSportIcon(corso.IDSPORT);\n   }\n\n  /**\n * Recupera il link per le condizioni di vendita Corso e apre il browser\n */\n  onClickCondizioniVendita(): void {\n    let link: AreaLink;\n\n\n    if (this.selectedArea) {\n\n      link = this.selectedArea.findAreaLinkByPageType(PageType.condizioniVenditaIscrizioni);\n  \n      if (link && link.REFERURL) {\n\n        //Apro il link\n        this.openLink(link.REFERURL);\n\n      }\n    }\n\n    \n  }\n\n\n  /**\n   * Click sul bottone di Header\n   */\n  onClickButtonHeader() {\n    if (!this.flagPostiDisponibili) {\n      //Se non ci sono posti, uso il pulsante per chiudere\n      this.closeModal();\n    }\n  }\n\n\n  /**\n   * Ritorna TRUE se il pulsante \n   * Conferma Iscrizione è utilizzabile\n   */\n  enableButtonIscrizione(): boolean {\n    let flagEnable: boolean;\n    if (this.disclaimer && this.flagPostiDisponibili) {\n\n      //Corso a pagamento (Deve scegliere il pagamento)\n      if (this.myCorso.isAPagamento()) {\n\n        if (this.mySelectedPayment) {\n          flagEnable = true;\n        }\n\n      }\n      else {\n        //Non deve pagare niente\n        flagEnable = true;\n      }\n    }\n\n\n    return flagEnable;\n  }\n\n\n   //#region METODI GESTIONE PAGAMENTO\n  /**\n   * Recupera i metodi di pagamento sulla base dell'Area e popola \n   * l'array myListPayment e l'elemento mySelectedPayament\n   */  \n   setListPayment() {\n\n    //Svuota l'array\n    this.myListPayment = [];\n\n\n    //Ho il documento dell'Area\n    if (this.selectedArea) {\n      \n      this.myListPayment = this.selectedArea.getPaymentFor(SettorePagamentiAttivita.settorePagamentoCorso);\n\n      if (this.myListPayment && this.myListPayment.length != 0) {\n\n        this.mySelectedPayment = this.myListPayment[0];\n        console.log(this.myListPayment);\n      }\n      else {\n\n        this.mySelectedPayment = null;\n\n      }\n\n      \n    }\n\n  }   \n\n  /**\n   * Ricezione pagamento da utilizzare\n   * @param value Valore Pagamento\n   */\n   onPaymentSelected(value) {\n    this.mySelectedPayment = value;\n  }\n  \n  /**\n   * Cambiato il modo di pagamento\n   * @param valPaymentMode Modo di pagamento\n   */\n   onPaymentModeSelected(valPaymentMode: PaymentMode) {\n    this.myPaymentMode = valPaymentMode;\n    console.log(this.myPaymentMode);\n  }  \n\n\n  /**\n   * Pressione del pulsante in interfaccia di conferma \n   */\n   onConfirm()\n   {\n     //Vado al pagamento\n      this.onExecPayment();\n   }  \n\n  /**\n   * Richiesta di esecuzione del pagamento di qualsiasi tipologia\n   * 1) Se onSite conclude subito dicendo che va bene\n   * 2) Per altre tipologie viene aperta la pagina del pagamento\n   *\n   */\n   onExecPayment() {\n\n    let arModes:PaymentMode[]=[PaymentMode.pagaAdesso, PaymentMode.pagaBonifico, PaymentMode.pagaStruttura];\n\n    //Presente un totale da pagare\n    if (this.myCorso.isAPagamento()) {\n\n      //L'utente ha selezionato come pagare\n      if (arModes.includes(this.myPaymentMode)) {\n  \n        //Pagamento non dentro all'App\n        if (this.myPaymentMode == PaymentMode.pagaBonifico || this.myPaymentMode == PaymentMode.pagaStruttura) {\n  \n          //Creo il risultato del pagamento, passando la modalità\n          let docPaymentResult = new PaymentProcess(this.myPaymentMode);\n          // Essendo una modalita che non prevede interazioni app\n          // viene impostato automaticamento il channelPayment \n          // e il processResult = TRUE\n          \n          //Passo subito al Success\n          this.onPaymentSuccess(docPaymentResult);\n  \n        }\n        else {\n          \n          //Qui invece bisogna gestire il pagamento\n  \n          //Preparo un oggetto per processare il pagamento\n          let myCheckoutPayment = new PaymentProcess(this.myPaymentMode);\n          \n          myCheckoutPayment.amount = this.myCorso.PREZZOLORDO;\n          myCheckoutPayment.description = 'Pagamento Iscrizione Corso ' + this.myCorso.DENOMINAZIONE;\n          myCheckoutPayment.currency = 'EUR';\n  \n          //il channelPayment viene impostato nel componente\n          //esterno che si preoccupa del pagamento\n          //Passo alla modale in paymentData = myCheckoutPayment\n          this.modalCtrl.create({\n            component: PaymentPage,\n            componentProps: {\n              paymentData: myCheckoutPayment,\n              listAreaPaymentSettings: this.myListPayment\n            }\n          })\n          .then(elModal => {\n            elModal.present();\n  \n            return elModal.onDidDismiss()\n          })\n          .then((returnData) => {\n  \n            //recupero il risultato del pagamento\n            let myPaymentResult: PaymentProcess = returnData['data'];\n\n            if (myPaymentResult) {\n\n              //Il Risultato del processo di pagamento è TRUE, posso proseguire\n              if (myPaymentResult.processResult) {\n                \n                //Pagamento avvenuto correttamente\n                this.onPaymentSuccess(myPaymentResult); \n  \n              }\n              else {\n  \n                //Pagamento Fallito\n                this.onPaymentFailed(myPaymentResult);\n  \n              }\n            }\n            else {\n              \n              //Stranamente non mi ha tornato nulla, quindi il pagamento è fallito\n              myPaymentResult = new PaymentProcess(this.myPaymentMode);\n              myPaymentResult.processResult = false;\n              myPaymentResult.messageResult = 'Pagamento fallito';\n\n              //Pagamento Fallito\n              this.onPaymentFailed(myPaymentResult);\n\n            }\n          })\n  \n  \n        }\n  \n      }\n      else {\n        //Pagamento non selezionato\n        this.showToastMessage('E\\' necessario selezionare un pagamento');\n      }\n      \n    }\n    else {\n      //E' un corso gratuito ?\n\n      //Creo il risultato del pagamento, passando la modalità\n      let docPaymentResult = new PaymentProcess(PaymentMode.pagaStruttura);\n      // Essendo una modalita che non prevede interazioni app\n      // viene impostato automaticamento il channelPayment \n      // e il processResult = TRUE\n      \n      //Passo subito al Success\n      this.onPaymentSuccess(docPaymentResult);\n    }\n\n\n  } \n  \n  /**\n   * Pagamento andato a buon fine\n   * @param resultPayment Risultato del pagamento\n   */\n   onPaymentSuccess(resultPayment?: PaymentProcess) {\n    \n\n    let myDocIscrizione: IscrizioneCorso;\n    let myDocRata: IscrizioneIncasso;\n\n    //Preparo i dati dell'iscrizione\n    myDocIscrizione = this.prepareDocIscrizione();\n\n    //Preparo i dati della Rata di Pagamento\n    myDocRata = new IscrizioneIncasso();\n    \n    //Step del pagamento Effettuato (Potrebbe avere effettivamente pagato, oppure non pagato e rimandato in struttura)\n    if (resultPayment && resultPayment.processResult)  {\n\n      //Se non è avvenuta nessuna transazione Elettronica \n      //vuol dire che ha scelto di pagare successivamente\n      if (resultPayment.idElectronicResult.length == 0) {\n\n        //Se il corso è a pagamento, dovrà effettivamente pagare\n        if (this.myCorso.isAPagamento()) {\n\n          //E' a pagamento, in qualche modo dovrà pagare\n          //Creo una scadenza\n          myDocRata.IDTRANSACTION = '';\n          myDocRata.IDORDER = '';\n          myDocRata.MODALITA = resultPayment.channelPayment;\n          myDocRata.TIPORIGO = TipoRigoIncasso.scadenza;\n          //Data operazione non viene valorizzata ma solo DataScadenza\n          myDocRata.DATASCADENZA = this.myCorso.DATAINIZIO;\n          myDocRata.IMPORTO = this.myCorso.PREZZOLORDO;\n\n        }\n        else {\n\n          //E' un corso gratuito, non c'e' nulla da pagare\n          myDocRata.IDTRANSACTION = '';\n          myDocRata.IDORDER = '';\n          myDocRata.MODALITA = PaymentChannel.onSite;\n          myDocRata.TIPORIGO = TipoRigoIncasso.incassato;\n          myDocRata.DATAOPERAZIONE = myDocIscrizione.DATAISCRIZIONE;\n          //Non c'e' nessuna scadenza\n          myDocRata.IMPORTO = 0;\n        }\n      }\n      else {\n\n        //Transazione avvenuta\n        myDocRata.IDTRANSACTION = '';\n        myDocRata.IDORDER = resultPayment.idElectronicResult;\n        myDocRata.MODALITA = resultPayment.channelPayment;\n        myDocRata.TIPORIGO = TipoRigoIncasso.incassato;\n        myDocRata.DATAOPERAZIONE = myDocIscrizione.DATAISCRIZIONE;\n        //Non c'e' nessuna scadenza      \n        myDocRata.IMPORTO = this.myCorso.PREZZOLORDO;\n\n      }\n\n      //Aggiungo le informaioni del pagamento\n      myDocIscrizione.ISCRIZIONEINCASSO.push(myDocRata);\n\n      console.log(myDocRata);\n\n      //Contatto il server per salvare il tutto\n      this.loadingController.create({\n            message: 'Richiesta Iscrizione',\n            spinner: 'circular'\n          })\n          .then(elLoading => {\n\n            //Creo il loading\n            elLoading.present();\n\n            //Procedo con il salvataggio Iscrizione\n            this.startService.requestSaveIscrizione(myDocIscrizione)\n                            .then((response: PostResponse) => {\n\n                              elLoading.dismiss();\n\n                              //Iscrizione salvata correttamente\n                              if (response.result && response.code && response.code.length != 0) {\n                                //Mi dirigo alla scheda dell'Iscrizione Corso e concludo la modale\n                                this.onAfterSaveIscrizione(response.code);\n                              }\n                              else {\n                                //Si sono verificati problemi\n                                this.showAlert(response.message,'Iscrizione Fallita');\n                              }\n                            })\n                            .catch(error => {\n                              elLoading.dismiss();\n\n                              //Si sono verificati problemi\n                              this.showAlert(error.message,'Iscrizione Fallita');\n                            })\n               \n          });\n\n\n    }\n\n\n    \n    \n\n  }\n\n  /**\n   * Iscrizione salvata nel sistema posso andare via\n   */\n   onAfterSaveIscrizione(idIscrizione: string)\n   {\n     this.showToastMessage('Iscrizione confermata');\n\n     //1) Chiudere la modale\n     this.closeModal();\n\n     //2) Andare alla History sulla scheda\n     this.navCtrl.navigateRoot(['historylist/course', idIscrizione]);\n \n   }  \n\n  /**\n   * Si sono verificati errori nel pagamento\n   * @param resultPayment Risultato Pagamento Fallito\n   */\n  onPaymentFailed(resultPayment?: PaymentProcess) {\n    let message = 'Si sono verificati errori nel pagamento';\n    let title = 'Pagamento Fallito';\n\n    if (resultPayment) {\n      if (resultPayment.messageResult) {\n        message = resultPayment.messageResult;\n      }\n    }\n\n    //Visualizzo il messaggio\n    this.showAlert(message, title);\n    \n  }  \n   //#endregion\n\n\n  //#region PREPARAZIONE DOCUMENTO ISCRIZIONE\n  prepareDocIscrizione(): IscrizioneCorso {\n    let myDoc = new IscrizioneCorso();\n\n    \n\n    if (this.myCorso && this.docUser) {\n\n      myDoc.IDCORSO = this.myCorso.ID;\n      myDoc.IDUTENTE = this.docUser.ID;\n      myDoc.DATAISCRIZIONE = new Date();\n      \n    }\n\n    return myDoc;\n  }\n   //#endregion\n/**\n * Mostra un messaggio a video\n * @param messaggio Messaggio\n */\n  showToastMessage(messaggio:string){\n\n      this.toastCtrl.create({\n        message: messaggio,\n        duration: 3000\n      });\n\n  }\n\n  /**\n   * Visualizza un alert con un pulsante Ok se !buttons, oppure con i bottoni dell'array\n   * @param messaggio Messaggio\n   * @param titolo Titolo\n   */\n   showAlert(messaggio:string, titolo?:string, bottoni?:string[]) {\n\n    if (!bottoni || bottoni.length == 0) {\n      bottoni = [];\n      bottoni.push('Ok');\n    }\n\n    //Mostro l'alert richiesto\n    this.alertCtrl.create({      \n      header: (titolo?titolo:'Attenzione'),      \n      message: messaggio,\n      buttons: bottoni\n    })\n    .then(elAlert => {\n      elAlert.present();\n    })\n  }  \n\n/**\n* Chiusura della videata\n*/  \ncloseModal(){\n  this.modalCtrl.dismiss();\n}\n\n/**\n * Apre una videata con la pagina richiesta\n * @param url Url da visualizzare\n */\nopenLink(url:string)\n{\n  Browser.open({url:url})\n}\n\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"primary\">\n      <ion-button (click)=\"closeModal()\">\n        <ion-icon slot=\"icon-only\" ios=\"close\" md=\"close\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n\n    <ion-title>Iscrizione</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <div style=\"background-color:#EFF1F8\">\n    <ion-grid class=\"griglia-principale\">\n\n      <!-- CONTROLLO PER POSTI DISPONIBILI -->\n      <ion-row>\n        <ion-col>\n          <ion-button \n              [color]=\"flagPostiDisponibili ? 'success':'danger'\" \n              expand=\"block\" \n              class=\"full-buttons\"\n            (click)=\"onClickButtonHeader()\">\n            <ion-icon \n                slot=\"end\" \n                [name]=\"flagPostiDisponibili ? 'thumbs-up-outline':'ban-outline'\">\n            </ion-icon>\n\n\n            <h6 class=\"ion-text-wrap\">{{txtPostiDisponibili}}</h6>\n          </ion-button>\n\n        </ion-col>\n      </ion-row>\n\n      <!-- CARD INFORMAZIONI CORSO -->\n      <ion-row>\n        <ion-col>\n\n          <ion-card>\n\n            <ion-card-header>\n              <ion-card-subtitle>Iscrizione al corso</ion-card-subtitle>\n              <ion-card-title>{{ myCorso.DENOMINAZIONE }}</ion-card-title>\n\n              <ion-item button=\"false\" lines=\"none\" class=\"ion-no-padding\">\n                <i class=\"icon-sport\" slot=\"start\">\n                  <span [innerHTML]=\"getIcon(myCorso)\"></span>\n                </i>\n\n                <ion-label>\n                  <h6 class=\"ion-text-wrap\">\n                    {{ myCorso['_DENOMINAZIONE_Sport'] }}\n                  </h6>\n                </ion-label>\n              </ion-item>\n\n            </ion-card-header>\n\n\n\n            <ion-card-content class=\"ion-no-padding\">\n\n              <ion-item lines=\"none\">\n                <ion-label class=\"ion-text-wrap\">\n\n                  <ion-text>Il corso inizia&nbsp;</ion-text>\n                  <ion-text style=\"font-weight: bold;\">{{myCorso.DATAINIZIO | date: 'EEEE' | titlecase }}&nbsp;\n                  </ion-text>\n                  <ion-text style=\"font-weight: bold;\">{{myCorso.DATAINIZIO | date: 'dd/MM/yyyy' }}</ion-text>\n                  <ion-text>&nbsp;alle ore&nbsp;</ion-text>\n                  <ion-text style=\"font-weight: bold;\">{{myCorso.ORAINIZIO | date:'HH:mm'}}</ion-text>\n                  <ion-text>&nbsp;e si conclude&nbsp;</ion-text>\n                  <ion-text style=\"font-weight: bold;\">{{myCorso.DATAFINE | date: 'EEEE' | titlecase }}&nbsp;</ion-text>\n                  <ion-text style=\"font-weight: bold;\">{{myCorso.DATAFINE | date: 'dd/MM/yyyy' }}</ion-text>\n                  <ion-text *ngIf=\"myCorso.NUMEROLEZIONI\">\n                    &nbsp;per un totale di&nbsp;{{myCorso.NUMEROLEZIONI}}&nbsp;{{myCorso.NUMEROLEZIONI > 1 ?'Incontri\n                    ':'Incontro '}} della durata di&nbsp;{{myCorso.ORELEZIONE}} {{myCorso.ORELEZIONE > 1 ?'Ore':'Ora'}}\n                  </ion-text>\n\n                </ion-label>\n              </ion-item>\n\n              <ion-item lines=\"none\" *ngIf=\"onlyDaysCorso?.length == 1\">\n                <ion-label class=\"ion-text-wrap\">\n                  <ion-text>Il corso è pianificato 1 volta a settimana al &nbsp;</ion-text>\n                  <ion-text color=\"danger\">{{onlyDaysCorso[0].label |titlecase}}</ion-text>\n                </ion-label>\n\n              </ion-item>\n\n              <ion-item lines=\"none\" *ngIf=\"onlyDaysCorso?.length > 1\">\n                <ion-label class=\"ion-text-wrap\">\n                  <ion-text>Il corso è pianificato {{onlyDaysCorso?.length}} volte a settimana</ion-text>\n                  <p *ngFor=\"let giorno of onlyDaysCorso\">\n                    <ion-text color=\"danger\">{{giorno.label |titlecase}}</ion-text>\n                  </p>\n                </ion-label>\n\n              </ion-item>\n\n              <ion-item lines=\"none\">\n                <ion-label class=\"ion-text-wrap\">\n                  <ion-text>\n                    Si consiglia di controllare il calendario dettagliato per conoscere i giorni e gli orari precisi del\n                    corso.\n                  </ion-text>\n                </ion-label>\n              </ion-item>\n\n\n\n\n\n            </ion-card-content>\n          </ion-card>\n        </ion-col>\n      </ion-row>\n\n\n      <!-- CARD A CHI E' RIVOLTO IL CORSO -->\n      <ion-row>\n        <ion-col>\n          <ion-card>\n            <ion-card-header>\n              <ion-card-subtitle>Rivolto a</ion-card-subtitle>\n            </ion-card-header>\n            <ion-card-content>\n\n              <ion-item>\n                <ion-icon name=\"stats-chart-outline\" slot=\"start\" [color]=\"iconColor\"></ion-icon>\n                <ion-label>{{myCorso['_DENOMINAZIONE_Livello']?myCorso['_DENOMINAZIONE_Livello']:'Tutti i Livelli'}}\n                </ion-label>\n              </ion-item>\n\n              <ion-item lines=\"none\">\n                <ion-icon name=\"bookmark-outline\" slot=\"start\" [color]=\"iconColor\"></ion-icon>\n                <ion-label>{{myCorso['_DESCTOOLTIP_CategoriaEta']?myCorso['_DESCTOOLTIP_CategoriaEta']:'Per tutte le\n                  età'}}</ion-label>\n              </ion-item>\n\n              <ion-item lines=\"none\" *ngIf=\"myCorso.TARGETSESSO\">\n                <ion-icon name=\"transgender-outline\" slot=\"start\" [color]=\"iconColor\"></ion-icon>\n                <ion-label>{{myCorso.TARGETSESSO | targetSesso}}</ion-label>\n              </ion-item>\n            </ion-card-content>\n          </ion-card>\n\n          <!-- CARD LOCATION -->\n          <ion-card *ngIf=\"myLocation?.COMUNE || myLocation?.INDIRIZZO || myLocation?.TELEFONO\">\n            <ion-card-header>\n              <ion-card-subtitle>Dove</ion-card-subtitle>\n            </ion-card-header>\n            <ion-card-content>\n              <!-- COMUNE -->\n              <ion-item *ngIf=\"myLocation?.COMUNE\">\n                <ion-icon name=\"home-outline\" slot=\"start\" [color]=\"iconColor\"></ion-icon>\n                <ion-label>{{myLocation?.COMUNE}}</ion-label>\n              </ion-item>\n\n              <!-- INDIRIZZO -->\n              <ion-item *ngIf=\"myLocation?.INDIRIZZO\">\n                <ion-icon name=\"navigate-outline\" slot=\"start\" [color]=\"iconColor\">\n                </ion-icon>\n\n                <ion-label>\n                  {{myLocation?.INDIRIZZO}}\n                </ion-label>\n\n              </ion-item>\n\n              <ion-item *ngIf=\"myLocation?.TELEFONO\">\n                <ion-icon name=\"call-outline\" slot=\"start\" [color]=\"iconColor\"></ion-icon>\n                <ion-label>{{myLocation?.TELEFONO}}</ion-label>\n              </ion-item>\n            </ion-card-content>\n          </ion-card>\n        </ion-col>\n      </ion-row>\n\n\n    </ion-grid>\n\n\n\n  </div>\n\n</ion-content>\n\n<ion-footer>\n\n  <ion-grid>\n    <!-- ISCRIZIONE ABILITATA -->\n    <ion-list *ngIf=\"flagPostiDisponibili\">\n      <ion-item button (click)=\"disclaimer=!disclaimer; \" lines=\"full\">\n        <ion-checkbox [(ngModel)]=\"disclaimer\" slot=\"start\" (click)=\"$event.stopPropagation();\">\n        </ion-checkbox>\n        <ion-label class=\"ion-text-wrap\">\n          <p>Lette e approvate le\n            <a (click)=\"$event.stopPropagation(); onClickCondizioniVendita();\">condizioni di vendita</a>\n          </p>\n        </ion-label>\n      </ion-item>\n\n      <!-- Componente scelta Pagamento -->\n      <app-payment-mode \n          *ngIf=\"myCorso?.isAPagamento()\" \n          [arPayment]=\"myListPayment\"\n          (onPaymentModeChoosed)=\"onPaymentModeSelected($event)\">\n      </app-payment-mode>\n\n      <!-- Se non a pagamento mostro Iscrizione Gratuita -->\n      <ion-item class=\"ion-text-center\" *ngIf=\"!myCorso?.isAPagamento()\">\n        <ion-chip class=\"wide\" color=\"danger\">Iscrizione Gratuita</ion-chip>\n      </ion-item>\n\n      <ion-item lines=\"none\" id=\"item-totale\">\n        <ion-label slot=\"start\">Totale</ion-label>\n        <ion-label style=\"text-align:right;\">\n\n          {{myCorso?.PREZZOLORDO | currency: \"EUR\"}}\n\n        </ion-label>\n      </ion-item>\n\n    </ion-list>\n\n    <!-- POSTI NON DISPONIBILI: Mostro solo il prezzo-->\n    <ion-list *ngIf=\"!flagPostiDisponibili\">\n\n      <ion-item lines=\"none\" id=\"item-totale\">\n        <ion-label slot=\"start\">Prezzo</ion-label>\n        <ion-label style=\"text-align:right;\">\n\n          {{myCorso?.PREZZOLORDO | currency: \"EUR\"}}\n\n        </ion-label>\n      </ion-item>\n\n      <ion-item lines=\"none\">\n        <ion-label class=\"ion-text-wrap ion-text-center\">\n          <ion-text class=\"ion-text-center\">Contatta la struttura per maggiori informazioni</ion-text>\n        </ion-label>\n      </ion-item>\n\n    </ion-list>\n\n    <ion-row *ngIf=\"flagPostiDisponibili\">\n      <ion-col>\n        <ion-button \n            color=\"tertiary\" \n            expand=\"block\" \n            class=\"full-buttons\" \n            [disabled]=\"!enableButtonIscrizione()\"\n          (click)=\"onConfirm()\">\n          Conferma Iscrizione\n        </ion-button>\n      </ion-col>\n    </ion-row>\n\n\n\n\n\n  </ion-grid>\n</ion-footer>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BookcoursePage } from './bookcourse.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BookcoursePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class BookcoursePageRoutingModule {}\n"],"sourceRoot":"webpack:///"}