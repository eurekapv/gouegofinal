{"version":3,"sources":["webpack:///src/app/pages/location/course/listcourses/listcourses.module.ts","webpack:///src/app/pages/location/course/listcourses/listcourses.page.ts","webpack:///src/app/pages/location/course/listcourses/listcourses.page.html","webpack:///src/app/pages/location/course/listcourses/filter/filter.page.ts","webpack:///src/app/pages/location/course/listcourses/filter/filter.page.html","webpack:///src/app/pages/location/course/listcourses/listcourses-routing.module.ts","webpack:///src/app/pages/location/course/listcourses/filter/filter.module.ts","webpack:///src/app/pages/location/course/listcourses/filter/filter-routing.module.ts"],"names":["ListcoursesPageModule","PageState","ListcoursesPage","router","startService","mdlController","navController","loadingCtrl","toastCtrl","docStructureService","gestureCtrl","idLocation","listCorsi","listCorsiMioLivello","filtroCorsi","userLogged","statoPagina","TUTTI","showTabs","enableIscrizioni","preferList","tutti","onListenUser","DATAFINE","Date","addFilterCondition","maggiore","onListenSelectedArea","listenSelectedArea","areaSelected","subscribe","elArea","selectedArea","APPISCRIZIONI","error","listenDocUser","utente","element","docUser","listenUserLogged","utenteLogged","flagLogged","MIEI","paramMap","param","has","get","IDLOCATION","requestCorsi","unsubscribe","create","spinner","message","backdropDismiss","then","loading","present","params","decode","active","requestNew","data","dismiss","prepareForMioLivello","showMessage","console","log","filter","elCorso","isForUser","IDLIVELLOENTRATA","isForLevelSport","IDSPORT","TARGETSESSO","isForTargetSesso","IDCATEGORIEETA","length","NATOIL","eta","isValidCategorieEta","event","target","value","component","componentProps","formModal","onWillDismiss","objReceived","dismissFilter","onModalNewFilter","corso","duration","tstMsg","complete","myCorso","navigateForward","ID","selectedCorso","flagIscrizioniAperte","setIdAreaForcedForLogin","modal","paramsVerifica","getParamsVerifica","actualStartConfig","gruppo","elModal","detail","currentY","goToFilter","onScroll","doRefresh","FilterPage","listTargetSesso","listTipoCorso","dataFine","compareWithFn","o1","o2","compareWithSelect","listenSport","listSport","listElements","listenCatEta","listCategoriaEta","listCatEta","getArray","undefined","myFilter","TIPO","closeFilter","emptyFilter","applyFilter","routes","path","loadChildren","m","FilterPageModule","ListcoursesPageRoutingModule","forChild","FilterPageRoutingModule"],"mappings":"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","file":"default~course-listcourses-listcourses-module~pages-location-course-listcourses-listcourses-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ListcoursesPageRoutingModule } from './listcourses-routing.module';\r\n\r\nimport { ListcoursesPage } from './listcourses.page';\r\nimport { FilterPage } from './filter/filter.page';\r\nimport { FilterPageModule } from './filter/filter.module';\r\n\r\nimport { SharedComponentsModule } from 'src/app/shared/components/shared-components.module';\r\nimport { BookcoursePageModule } from '../bookcourse/bookcourse.module';\r\nimport { BookcoursePage } from '../bookcourse/bookcourse.page';\r\nimport { NewLoginPageModule } from 'src/app/pages/auth/new-login/new-login.module';\r\nimport { VerifyPageModule } from 'src/app/pages/auth/verify/verify.module';\r\nimport { NewLoginPage } from 'src/app/pages/auth/new-login/new-login.page';\r\nimport { VerifyPage } from 'src/app/pages/auth/verify/verify.page';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ListcoursesPageRoutingModule,\r\n    BookcoursePageModule,\r\n    FilterPageModule,\r\n    SharedComponentsModule,\r\n    NewLoginPageModule,\r\n    VerifyPageModule\r\n  ],\r\n  declarations: [ListcoursesPage],\r\n  entryComponents: [FilterPage],\r\n  exports: [NewLoginPage, VerifyPage]\r\n  \r\n})\r\nexport class ListcoursesPageModule {}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { Corso } from '../../../../models/corso.model';\r\nimport { StartService } from '../../../../services/start.service';\r\nimport { ParamsVerifica, Utente } from 'src/app/models/utente.model';\r\nimport { SegmentCorsi } from 'src/app/models/valuelist.model';\r\n\r\nimport { ModalController, NavController, LoadingController, ToastController, Gesture, GestureController } from '@ionic/angular';\r\nimport { FilterPage } from './filter/filter.page';\r\nimport { CalendarPage } from '../detailcourse/calendar/calendar.page';\r\nimport { DocstructureService } from 'src/app/library/services/docstructure.service';\r\nimport { RequestParams } from 'src/app/library/models/requestParams.model';\r\nimport { OperatorCondition } from 'src/app/library/models/iddocument.model';\r\nimport { Area } from 'src/app/models/area.model';\r\nimport { NewLoginPage } from 'src/app/pages/auth/new-login/new-login.page';\r\nimport { VerifyPage } from 'src/app/pages/auth/verify/verify.page';\r\nimport { BookcoursePage } from '../bookcourse/bookcourse.page';\r\n\r\n\r\nenum PageState{\r\n  TUTTI = 10,\r\n  MIEI = 20\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-listcourses',\r\n  templateUrl: './listcourses.page.html',\r\n  styleUrls: ['./listcourses.page.scss'],\r\n})\r\nexport class ListcoursesPage implements OnInit, OnDestroy {\r\n\r\n\r\n  PageState : typeof PageState = PageState;\r\n  idLocation = '';\r\n\r\n  listCorsi: Corso[] = [];\r\n  listCorsiMioLivello: Corso[] = [];\r\n\r\n  docUser: Utente; //Informazioni utente loggato\r\n  listenDocUser: Subscription;\r\n\r\n  filtroCorsi: Corso = new Corso(true);\r\n\r\n  preferList: SegmentCorsi; \r\n\r\n  userLogged= false;\r\n  listenUserLogged: Subscription;\r\n\r\n  statoPagina = PageState.TUTTI;\r\n\r\n  showTabs = true;\r\n\r\n  //Gestione Abilitazione Iscrizioni\r\n  listenSelectedArea:Subscription;\r\n  selectedArea: Area;\r\n  enableIscrizioni:boolean = false;\r\n  \r\n\r\n  constructor(private router: ActivatedRoute, \r\n              private startService: StartService,\r\n              private mdlController: ModalController,\r\n              private navController: NavController,\r\n              private loadingCtrl: LoadingController,\r\n              private toastCtrl: ToastController,\r\n              private docStructureService: DocstructureService,\r\n              private gestureCtrl: GestureController\r\n              ) { \r\n    \r\n\r\n    //Mostro tutti i corsi\r\n    this.preferList = SegmentCorsi.tutti;\r\n\r\n    //Ascolto le modifiche Utente\r\n    this.onListenUser();\r\n    \r\n    //inserisco nel filtro la condizione di \"corsi non ancora finiti\"\r\n    this.filtroCorsi.DATAFINE = new Date();\r\n    this.filtroCorsi.addFilterCondition(OperatorCondition.maggiore,'DATAFINE');\r\n\r\n    //Ascolto le modifiche dell'area selezionata\r\n    this.onListenSelectedArea();\r\n  }\r\n\r\n\r\n  /**\r\n   * In ascolto dell'area selezionata, per capire se solo abilitate le iscrizioni\r\n   */\r\n  onListenSelectedArea() {\r\n    this.listenSelectedArea = this.startService.areaSelected\r\n      .subscribe(elArea => {\r\n\r\n        this.selectedArea = elArea;\r\n\r\n        //Controllo se nell'area sono abilitate le iscrizioni\r\n        if (this.selectedArea.APPISCRIZIONI == true) {\r\n          this.enableIscrizioni = true;\r\n        }\r\n        else {\r\n          this.enableIscrizioni = false;\r\n        }\r\n    }, error => {\r\n      this.enableIscrizioni = false;\r\n    })\r\n  }\r\n\r\n  /**\r\n   * In ascolto al cambiamento utente\r\n   */\r\n  onListenUser() {\r\n\r\n    //Richiedo lo User\r\n    this.listenDocUser = this.startService.utente.subscribe(element => {\r\n      this.docUser = element;\r\n    });\r\n\r\n    this.listenUserLogged = this.startService.utenteLogged.subscribe(flagLogged => {\r\n      this.userLogged = flagLogged;\r\n\r\n      /** Utente Loggato mi sposto su Mio Livello */\r\n      if (this.userLogged == true) {\r\n        this.statoPagina = PageState.MIEI;\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    \r\n    // Leggo idLocation \r\n    this.router.paramMap.subscribe( param => {\r\n      \r\n      if (param.has('locationId')) \r\n      {\r\n          //Recupero del Location ID\r\n          this.idLocation = param.get('locationId');\r\n\r\n          //inserisco nel filtro l'id della location\r\n          this.filtroCorsi.IDLOCATION=this.idLocation;\r\n          \r\n          //Effettuo la richiesta dei corsi\r\n          this.requestCorsi();\r\n\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    \r\n    if (this.listenSelectedArea) {\r\n      this.listenSelectedArea.unsubscribe();\r\n    }  \r\n    \r\n    if (this.listenUserLogged) {\r\n      this.listenUserLogged.unsubscribe();\r\n    }\r\n  }\r\n\r\n  // ionViewDidEnter(){\r\n  //   const gesture: Gesture = this.gestureCtrl.create({\r\n  //     el: document.getElementById('content'),\r\n  //     threshold: 15,\r\n  //     gestureName: 'my-gesture',\r\n  //     direction: 'x',\r\n  //     maxAngle: 90,\r\n  //     onMove: ev => this.onSwipe(ev),\r\n  //   }, true);\r\n\r\n  //   gesture.enable(true);\r\n  // }\r\n\r\n  // onSwipe(detail){\r\n\r\n  //   console.log(detail);\r\n\r\n  //   //scroll verso sinistra\r\n  //   if (detail.deltaY > -50 && detail.deltaY < 50){\r\n\r\n  //     if (this.statoPagina == PageState.TUTTI && (detail.velocityX < 0) ){\r\n  //       this.statoPagina = PageState.MIEI;\r\n  //     }\r\n  \r\n  //     //scroll verso destra\r\n  //     else if (this.statoPagina == PageState.MIEI && (detail.velocityX > 0)){\r\n  //       this.statoPagina = PageState.TUTTI;\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  /**\r\n   * Richiesta dei corsi\r\n   */\r\n  requestCorsi() {\r\n    //quando faccio una richiesta di corsi, l'id location è sempre presente\r\n    \r\n    this.loadingCtrl.create({\r\n      spinner: 'circular',\r\n      message: 'Caricamento',\r\n      backdropDismiss: true\r\n    }).then(loading=>{\r\n\r\n      loading.present();        \r\n      \r\n      //Richiesta di decodifica\r\n      let params = new RequestParams();\r\n      params.decode.active = true;\r\n      \r\n      //Eseguo la richiesta al server\r\n      this.docStructureService.requestNew(this.filtroCorsi , params)\r\n          .then(data => {\r\n              \r\n              //Chiudo il loading\r\n              loading.dismiss();\r\n\r\n              //recupero la lista dei corsi\r\n              this.listCorsi = data;\r\n\r\n              //Preparo i dati per il mio livello (se utente loggato)\r\n              this.prepareForMioLivello();\r\n\r\n      })\r\n      .catch(error => {\r\n        \r\n        //Chiudo il loading\r\n        loading.dismiss();\r\n\r\n        this.showMessage('Errore di connessione');\r\n        console.log(error);\r\n      })\r\n    })\r\n          \r\n  }\r\n\r\n  /**\r\n   * Preparo i dati per il mio livello\r\n   */\r\n  prepareForMioLivello() {\r\n\r\n    this.listCorsiMioLivello = [];\r\n\r\n    if (this.docUser) {\r\n        //filtro subito recuperando solo i corsi per me\r\n        \r\n        this.listCorsiMioLivello = this.listCorsi.filter(elCorso => {\r\n          //Corso per l'utente\r\n          let isForUser = true\r\n\r\n          if (elCorso.IDLIVELLOENTRATA && elCorso.IDLIVELLOENTRATA!='') {\r\n              //Controlliamo se l'utente può partecipare allo sport con il livello passato\r\n              isForUser = this.docUser.isForLevelSport(elCorso.IDLIVELLOENTRATA, elCorso.IDSPORT);\r\n          }\r\n\r\n          //Controllo TARGETSESSO\r\n          if (isForUser && elCorso.TARGETSESSO) {\r\n              isForUser = this.docUser.isForTargetSesso(elCorso.TARGETSESSO);\r\n          }\r\n\r\n          //Controllo CategoriaEta\r\n          if (isForUser && elCorso.IDCATEGORIEETA && elCorso.IDCATEGORIEETA.length != 0) {\r\n            if (this.docUser.NATOIL) {\r\n              let eta = this.docUser.eta;\r\n              isForUser = this.startService.isValidCategorieEta(elCorso.IDCATEGORIEETA, eta);\r\n            }\r\n          }\r\n          \r\n          \r\n          return isForUser;\r\n        });\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n        \r\n  /**\r\n   * Modifica del Segment per la scelta dei corsi\r\n   */\r\n  onChangeSegmentCorsi(event: any) {\r\n    if (this.userLogged)  {\r\n      this.statoPagina = event.target.value;\r\n    }\r\n    \r\n  }\r\n\r\n  goToFilter() {\r\n    this.mdlController\r\n      .create({\r\n        component: FilterPage,\r\n        componentProps: {\r\n          'myFilter': this.filtroCorsi\r\n        }\r\n      })\r\n      .then(formModal => {\r\n        formModal.present();\r\n\r\n        formModal.onWillDismiss().then((objReceived)=> {\r\n          \r\n          if (objReceived.data.dismissFilter) {\r\n            //Mi è arrivato un filtro da applicare\r\n            this.onModalNewFilter(objReceived.data.dismissFilter);\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Arrivo di nuovi filtri dalla modale\r\n   * @param filter Filtri impostati nella modale\r\n   */\r\n  onModalNewFilter(filter: Corso) {\r\n    this.filtroCorsi = filter;\r\n    this.requestCorsi();\r\n  }\r\n\r\n\r\n\r\n  /* ****** CALENDAR ******** */\r\n  onClickCardCalendar(corso: Corso) {\r\n    /* Apro in modale il calendario */\r\n    this.mdlController\r\n    .create({\r\n      component: CalendarPage,\r\n      componentProps: {\r\n        'myCorso': corso\r\n      }\r\n    })\r\n    .then(formModal => {\r\n      formModal.present();\r\n    });\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * Visualizza un messaggio\r\n   * @param message Messaggio\r\n   */\r\n  showMessage(message: string) {\r\n\r\n    //Creo un messaggio\r\n    this.toastCtrl.create({\r\n      message: message,\r\n      duration: 3000\r\n    })\r\n    .then(tstMsg => {\r\n      tstMsg.present();\r\n    });\r\n\r\n  }\r\n\r\n  doRefresh(event){\r\n    this.requestCorsi();\r\n    event.target.complete();\r\n  }\r\n\r\n\r\n  /**\r\n   * Passa alla pagina Dettaglio del corso\r\n   * @param myCorso Corso Richiesto\r\n   */\r\n  onClickCardDetail(myCorso: Corso) {\r\n\r\n    this.navController.navigateForward(['/','detailcourse',myCorso.ID]);\r\n    \r\n  }\r\n\r\n  /**\r\n  * Evento Click sul pulsante di Iscrizione\r\n  */\r\n  onClickIscrizione(selectedCorso: Corso) {\r\n\r\n    if(selectedCorso) {\r\n\r\n      //Posso proseguire verso l'iscrizione\r\n      if (this.enableIscrizioni && selectedCorso.flagIscrizioniAperte()) {\r\n\r\n        //Verifico di essere loggato, ed eventualmente di avere tutte le informazioni\r\n        //di verifica richieste\r\n\r\n        //Non solo loggato, devo loggarmi\r\n        if (!this.userLogged) {\r\n    \r\n          //Prima di aprire la pagina di login\r\n          //impostare nel servizio Start forceIdArea = \r\n          this.startService.setIdAreaForcedForLogin();\r\n          \r\n          //Ora preparo e creo la pagina di Login\r\n          this.mdlController.create({\r\n            component:NewLoginPage\r\n          })\r\n            .then(modal=>{\r\n              modal.present();\r\n            });\r\n    \r\n        }\r\n        else {\r\n    \r\n          let paramsVerifica : ParamsVerifica;\r\n          if (this.docUser) {\r\n            \r\n            //Recupero i parametri di verifica\r\n            paramsVerifica = this.docUser.getParamsVerifica(this.startService.actualStartConfig.gruppo)\r\n      \r\n            if (paramsVerifica){\r\n              //se ci sono parametri, significa che devo chiamare la pagina di verifica\r\n              this.mdlController.create({\r\n                component: VerifyPage,\r\n                componentProps:{\r\n                  params: paramsVerifica\r\n                } \r\n              })\r\n              .then(elModal => {\r\n                elModal.present();\r\n              })\r\n            }\r\n            else {\r\n      \r\n              //Posso procedere con la pagina di prenotazione\r\n              this.mdlController.create({\r\n                component: BookcoursePage,\r\n                componentProps: {\r\n                  params: selectedCorso\r\n                }\r\n              })\r\n              .then(elModal => {\r\n                elModal.present();\r\n              })\r\n      \r\n            }\r\n    \r\n          }\r\n    \r\n          \r\n        }\r\n\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  onScroll(event:any){\r\n    if(event.detail.currentY < 5){\r\n      this.showTabs = true;\r\n    }\r\n    else{\r\n      if (event['detail']['deltaY'] > 20){\r\n        this.showTabs = false;\r\n      }\r\n      else if (event['detail']['deltaY'] < -20){\r\n        this.showTabs = true;\r\n      }\r\n    }  \r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n \r\n\r\n","<ion-header class=\"ion-no-border\">\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button  defaultHref=\"/\"></ion-back-button>\r\n    </ion-buttons>\r\n\r\n    <ion-title>Corsi</ion-title>\r\n\r\n    <ion-buttons slot=\"primary\">\r\n      <ion-button (click)=\"goToFilter()\">\r\n        <ion-icon name=\"search\"></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n\r\n  </ion-toolbar>\r\n\r\n  <ion-toolbar \r\n        mode=\"md\" \r\n        *ngIf=\"showTabs && userLogged\">\r\n\r\n    <!-- BOTTONI SEGMENTATI -->\r\n    <ion-segment \r\n      (ionChange)=\"onChangeSegmentCorsi($event)\"\r\n      color=\"primary\"\r\n      [(ngModel)]=\"statoPagina\"\r\n      id=\"crs:button\">\r\n      \r\n    <ion-segment-button [value]=\"PageState.MIEI\">\r\n      <ion-icon name=\"bar-chart-outline\"></ion-icon>\r\n      <ion-label>Mio Livello</ion-label>\r\n    </ion-segment-button>\r\n\r\n      <ion-segment-button [value]=\"PageState.TUTTI\">\r\n        <ion-icon name=\"school-outline\"></ion-icon>\r\n          <ion-label>Tutti</ion-label>\r\n      </ion-segment-button>\r\n      \r\n    </ion-segment>\r\n  </ion-toolbar>\r\n\r\n</ion-header>\r\n \r\n\r\n<ion-content id=\"content\" scrollEvents (ionScroll)=\"onScroll($event)\">\r\n  <ion-refresher slot=\"fixed\" (ionRefresh)=\"doRefresh($event)\">\r\n    <ion-refresher-content></ion-refresher-content>\r\n  </ion-refresher>\r\n    \r\n  <!-- VISUALIZZAZIONE TUTTI -->\r\n  <div *ngIf=\"listCorsi.length !== 0 && statoPagina==PageState.TUTTI\" id=\"crs-lista\">\r\n    <ion-grid>\r\n      <ion-row >\r\n        <ion-col *ngFor=\"let corso of listCorsi\" \r\n                  sizeXs=\"12\" \r\n\r\n                  sizeSm=\"8\"  \r\n                  offsetSm=\"2\" \r\n                  \r\n                  sizeMd=\"6\"\r\n                  offsetMd=\"0\"\r\n                  \r\n                  sizeLg=\"5\"\r\n                  offsetLg=\"0.5\"\r\n\r\n                  sizeXl = \"4\"\r\n                  offsetXl = \"0\"\r\n                  >\r\n\r\n              <app-card-course \r\n                [myCorso]=\"corso\" \r\n                [useIscrizioniColor]=\"enableIscrizioni\"\r\n                (clickDetail)=\"onClickCardDetail($event)\"\r\n                (clickIscrizione)=\"onClickIscrizione($event)\">\r\n              </app-card-course>\r\n\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n\r\n  </div>\r\n\r\n\r\n\r\n\r\n  <!-- VISUALIZZAZIONE MIEI -->\r\n  <div *ngIf=\"listCorsiMioLivello.length !== 0 && statoPagina==PageState.MIEI\" id=\"crs-lista\">\r\n    <ion-grid>\r\n      <ion-row >\r\n        <ion-col *ngFor=\"let corso of listCorsiMioLivello\" \r\n                  sizeXs=\"12\" \r\n\r\n                  sizeSm=\"8\"  \r\n                  offsetSm=\"2\" \r\n                  \r\n                  sizeMd=\"6\"\r\n                  offsetMd=\"0\"\r\n                  \r\n                  sizeLg=\"5\"\r\n                  offsetLg=\"0.5\"\r\n\r\n                  sizeXl = \"4\"\r\n                  offsetXl = \"0\"\r\n                  >\r\n\r\n              <app-card-course \r\n                  [myCorso]=\"corso\" \r\n                  [useIscrizioniColor]=\"enableIscrizioni\"\r\n                  (clickDetail)=\"onClickCardDetail($event)\"\r\n                  (clickIscrizione)=\"onClickIscrizione($event)\">\r\n              </app-card-course>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n\r\n\r\n\r\n  </div>\r\n\r\n  <!-- SE SONO SU TUTTI, MA NON CI SONO -->\r\n  <div *ngIf=\"listCorsi.length === 0&&statoPagina==PageState.TUTTI\" class=\"nofind-cnt\">\r\n    <ion-label>Nessun corso disponibile</ion-label>\r\n    <ion-label>Modifica i parametri</ion-label>\r\n    <ion-label>di Ricerca</ion-label>\r\n  </div>\r\n\r\n  <!-- SE SONO SU MIEI, MA NON CI SONO -->\r\n  <div *ngIf=\"listCorsiMioLivello.length === 0&&statoPagina==PageState.MIEI\" class=\"nofind-cnt\">\r\n    <ion-label>Nessun corso disponibile</ion-label>\r\n    <ion-label>Modifica i parametri</ion-label>\r\n    <ion-label>di Ricerca</ion-label>\r\n  </div>\r\n\r\n\r\n</ion-content>\r\n\r\n<ion-footer>\r\n  \r\n\r\n</ion-footer>","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { StartService } from 'src/app/services/start.service';\r\nimport { Sport } from 'src/app/models/sport.model';\r\nimport { CategoriaEta } from 'src/app/models/categoriaeta.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { FilterCorsi } from 'src/app/models/filtercorsi.model';\r\nimport { ValueList, TargetSesso, TipoCorso } from 'src/app/models/valuelist.model';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { Corso } from 'src/app/models/corso.model';\r\n\r\n@Component({\r\n  selector: 'app-filter',\r\n  templateUrl: './filter.page.html',\r\n  styleUrls: ['./filter.page.scss'],\r\n})\r\nexport class FilterPage implements OnInit, OnDestroy {\r\n\r\n  @Input() myFilter: Corso;\r\n\r\n  listSport: Sport[];\r\n  listCatEta: CategoriaEta[];\r\n  listenSport: Subscription;\r\n  listenCatEta: Subscription;\r\n\r\n  listTargetSesso: ValueList[] = [];\r\n  listTipoCorso: ValueList[] = [];\r\n\r\n  dataFine: Date = new Date;\r\n\r\n  constructor(private startService: StartService,\r\n              private mdlController: ModalController) { \r\n\r\n    this.listenSport = this.startService.listSport.subscribe(listElements => {\r\n      this.listSport = listElements;\r\n    });\r\n\r\n    this.listenCatEta = this.startService.listCategoriaEta.subscribe( listElements => {\r\n      this.listCatEta = listElements;\r\n    });\r\n\r\n    this.listTargetSesso = ValueList.getArray(TargetSesso);\r\n    this.listTipoCorso = ValueList.getArray(TipoCorso);\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.listenSport) {\r\n      this.listenSport.unsubscribe();\r\n    }\r\n\r\n    if (this.listenCatEta) {\r\n      this.listenCatEta.unsubscribe();\r\n    }\r\n  }\r\n\r\n  compareWithFn = (o1, o2) => {\r\n    return o1 && o2 ? o1 === o2 : o1 === o2;\r\n  };\r\n\r\n  compareWithSelect = this.compareWithFn;\r\n\r\n\r\n  /**\r\n   * Chiudo la videata Annullando tutto\r\n   */\r\n  closeFilter() {\r\n    this.mdlController.dismiss({\r\n      'dismissFilter': undefined\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Chiudo la videata applicando i filtri impostati\r\n   */\r\n  applyFilter() {\r\n    this.myFilter.DATAFINE = new Date(this.dataFine);\r\n    this.mdlController.dismiss({\r\n      'dismissFilter': this.myFilter\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Svuota tutti i filtri, tranne la location\r\n   */\r\n  emptyFilter() {\r\n    this.myFilter.TARGETSESSO = null;\r\n    this.myFilter.TIPO = null;\r\n    this.myFilter.IDSPORT = null;\r\n    this.myFilter.IDCATEGORIEETA = null;\r\n    this.myFilter.DATAFINE = new Date();\r\n  }\r\n}\r\n","<ion-header class=\"ion-no-border\">\r\n  <ion-toolbar color=\"primary\">\r\n    \r\n    <ion-title>Filtri</ion-title>\r\n    \r\n    <ion-buttons slot=\"end\">\r\n      <ion-button (click)=\"closeFilter()\">\r\n        <ion-icon name=\"close\"></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <ion-list-header>\r\n    <ion-label>\r\n      Ricerca corsi per\r\n    </ion-label>\r\n  </ion-list-header>\r\n\r\n  <!-- TARGET SESSO-->\r\n  <ion-item>\r\n    <ion-label position=\"floating\">Target</ion-label>\r\n    <ion-select [compareWith]=\"compareWithSelect\" \r\n                [(ngModel)]=\"myFilter.TARGETSESSO\"\r\n                interface=\"popover\"\r\n                placeHolder=\"tutti\">\r\n      <ion-select-option \r\n        *ngFor=\"let itemTarget of listTargetSesso\"\r\n        [value]=\"itemTarget.value\">\r\n        {{itemTarget.description}}\r\n      </ion-select-option>\r\n    </ion-select>\r\n  </ion-item>  \r\n\r\n  <!-- CATEGORIA ETA -->\r\n  <ion-item>\r\n    <ion-label position=\"floating\">Età</ion-label>\r\n    <ion-select [compareWith]=\"compareWithSelect\" \r\n                [(ngModel)]=\"myFilter.IDCATEGORIEETA\"\r\n                interface=\"popover\"\r\n                placeHolder=\"tutte\">\r\n      <ion-select-option \r\n        *ngFor=\"let catEta of listCatEta\"\r\n        [value]=\"catEta.ID\"\r\n        >\r\n        {{catEta.DESCTOOLTIP}}\r\n      </ion-select-option>\r\n    </ion-select>\r\n  </ion-item>\r\n\r\n    <!-- SPORT --> \r\n    <ion-item>\r\n      <ion-label position=\"floating\">Attività</ion-label>\r\n      <ion-select [compareWith]=\"compareWithSelect\" \r\n                  [(ngModel)]=\"myFilter.IDSPORT\"\r\n                  interface=\"popover\"\r\n                  placeHolder=\"tutte\">\r\n        <ion-select-option \r\n            *ngFor=\"let itemSport of listSport\"\r\n            [value]=\"itemSport.ID\">\r\n          {{itemSport.DENOMINAZIONE}}\r\n        </ion-select-option>\r\n      </ion-select>\r\n    </ion-item>\r\n\r\n    <!-- TIPOLOGIA --> \r\n    <ion-item>\r\n      <ion-label position=\"floating\">Tipologia</ion-label>\r\n      <ion-select [compareWith]=\"compareWithSelect\" \r\n                  [(ngModel)]=\"myFilter.TIPO\"\r\n                  interface=\"popover\"\r\n                  placeHolder=\"tutti\">\r\n        <ion-select-option \r\n            *ngFor=\"let itemTipo of listTipoCorso\"\r\n            [value]=\"itemTipo.value\">\r\n          {{itemTipo.description}}\r\n        </ion-select-option>\r\n      </ion-select>\r\n    </ion-item>\r\n\r\n    <!-- DATA CORSO --> \r\n    <ion-item>\r\n      <ion-label position=\"floating\">Disponibili da</ion-label>\r\n      <ion-datetime \r\n          displayFormat=\"DD/MM/YYYY\" \r\n          [(ngModel)]=\"dataFine\"\r\n          placeHolder=\"oggi\">\r\n      </ion-datetime>\r\n    </ion-item>\r\n\r\n\r\n    <ion-button \r\n      color=\"danger\" \r\n      fill=\"outline\" \r\n      expand=\"block\"\r\n      size=\"small\"\r\n      class=\"ion-margin-top ion-margin-horizontal\"\r\n      (click)=\"emptyFilter()\">\r\n      Svuota Filtri\r\n    </ion-button>  \r\n</ion-content>\r\n\r\n<ion-footer>\r\n      <ion-button \r\n          color=\"primary\" \r\n          fill=\"solid\" \r\n          expand=\"block\"\r\n          (click)=\"applyFilter()\">\r\n        Applica\r\n      </ion-button>  \r\n</ion-footer>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ListcoursesPage } from './listcourses.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ListcoursesPage\r\n  },\r\n  {\r\n    path: 'filter',\r\n    loadChildren: () => import('./filter/filter.module').then( m => m.FilterPageModule)\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ListcoursesPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { FilterPageRoutingModule } from './filter-routing.module';\r\n\r\nimport { FilterPage } from './filter.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    FilterPageRoutingModule\r\n  ],\r\n  declarations: [FilterPage],\r\n  exports: [FilterPage]\r\n})\r\nexport class FilterPageModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { FilterPage } from './filter.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FilterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class FilterPageRoutingModule {}\r\n"]}