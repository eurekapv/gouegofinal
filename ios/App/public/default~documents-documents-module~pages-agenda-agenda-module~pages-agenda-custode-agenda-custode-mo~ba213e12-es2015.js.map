{"version":3,"sources":["./src/app/shared/components/sport-scroll/sport-scroll.component.ts","./src/app/shared/components/sport-scroll/sport-scroll.component.html","./src/app/shared/directives/hide-header.directive.ts","./src/app/models/buttoncard.model.ts","./src/app/shared/components/aperture/aperture.component.ts","./src/app/shared/components/aperture/aperture.component.html","./src/app/shared/components/level-setter/level-setter.component.ts","./src/app/shared/components/level-setter/level-setter.component.html","./src/app/shared/components/item-calendario/item-calendario.component.ts","./src/app/shared/components/item-calendario/item-calendario.component.html","./src/app/shared/components/alert-input-prezzo/alert-input-prezzo.component.ts","./src/app/shared/components/alert-input-prezzo/alert-input-prezzo.component.html","./src/app/shared/components/calendarscroll/calendarscroll.component.ts","./src/app/shared/components/calendarscroll/calendarscroll.component.html","./src/app/shared/components/payment-choose/payment-choose.component.ts","./src/app/shared/components/payment-choose/payment-choose.component.html","./src/app/shared/components/settimana-block/settimana-block.component.ts","./src/app/shared/components/settimana-block/settimana-block.component.html","./src/app/shared/components/button-card/button-card.component.ts","./src/app/shared/components/button-card/button-card.component.html","./src/app/models/itemCalendario.model.ts","./src/app/shared/components/player-number/player-number.component.ts","./src/app/shared/components/player-number/player-number.component.html","./src/app/shared/components/circular/circular.component.ts","./src/app/shared/components/circular/circular.component.html","./src/app/shared/components/advertising/advertising.component.ts","./src/app/shared/components/advertising/advertising.component.html","./src/app/shared/components/centri/centri.component.ts","./src/app/shared/components/centri/centri.component.html","./src/app/shared/components/campi-scroll/campi-scroll.component.ts","./src/app/shared/components/campi-scroll/campi-scroll.component.html","./node_modules/@ionic-native/chooser/__ivy_ngcc__/ngx/index.js","./src/app/shared/components/card-course/card-course.component.ts","./src/app/shared/components/card-course/card-course.component.html","./src/app/shared/components/footbooked/footbooked.component.ts","./src/app/shared/components/footbooked/footbooked.component.html","./src/app/shared/components/impegni/impegni.component.ts","./src/app/shared/components/impegni/impegni.component.html","./src/app/shared/components/shared-components.module.ts","./src/app/shared/components/hor-timeline/hor-timeline.component.ts","./src/app/shared/components/hor-timeline/hor-timeline.component.html","./src/app/shared/components/news-eventi/news-eventi.component.ts","./src/app/shared/components/news-eventi/news-eventi.component.html","./src/app/shared/components/upload/upload.component.ts","./src/app/shared/components/upload/upload.component.html","./src/app/shared/components/payment-mode/payment-mode.component.ts","./src/app/shared/components/payment-mode/payment-mode.component.html","./src/app/shared/components/slottime/slottime.component.ts","./src/app/shared/components/slottime/slottime.component.html"],"names":[],"mappings":"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","file":"default~documents-documents-module~pages-agenda-agenda-module~pages-agenda-custode-agenda-custode-mo~ba213e12-es2015.js","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { IonSlides } from '@ionic/angular';\r\nimport { Sport } from 'src/app/models/sport.model';\r\nimport { StartService } from 'src/app/services/start.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-sport-scroll',\r\n  templateUrl: './sport-scroll.component.html',\r\n  styleUrls: ['./sport-scroll.component.scss'],\r\n})\r\nexport class SportScrollComponent implements OnInit {\r\n\r\n  @Input() selectedSport: Sport;\r\n  @Output() sportChanged= new EventEmitter<Sport>();\r\n  @Input() sportList:Sport[];\r\n  @ViewChild('sliderSport')sliderSport: IonSlides;\r\n\r\n  \r\n  sliderOpts1={\r\n    slidesPerView: 1,\r\n    spaceBetween: 0,\r\n    initialSlide: 0,\r\n  }\r\n\r\n  sliderOpts2={\r\n    slidesPerView: 2,\r\n    spaceBetween: 0,\r\n    initialSlide: 0,\r\n  }\r\n  \r\n  sliderOpts3={\r\n    slidesPerView: 2.5,\r\n    spaceBetween: 0,\r\n    initialSlide: 0, //Dovrei farla variabile\r\n    // Responsive breakpoints   \r\n  //  breakpoints: {  \r\n   \r\n  //     // when window width is <= 320px     \r\n  //     320: {       \r\n  //        slidesPerView: 2.5,\r\n  //        spaceBetween: 1     \r\n  //     },     \r\n  //     // when window width is <= 480px     \r\n  //     480: {       \r\n  //        slidesPerView: 2.5,       \r\n  //        spaceBetween: 6     \r\n  //     },   \r\n  \r\n  //     // when window width is <= 640px     \r\n  //     640: {       \r\n  //        slidesPerView: 2.5,       \r\n  //        spaceBetween: 1     \r\n  //     },\r\n\r\n  //     1024: {\r\n  //       slidesPerView: 2.5,       \r\n  //       spaceBetween: 1  \r\n  //     }\r\n\r\n\r\n  \r\n  //  } \r\n  }\r\n\r\n  sliderOpts4={\r\n    slidesPerView: 3.5,\r\n    spaceBetween: 0,\r\n    initialSlide: 0\r\n  }\r\n  \r\n  constructor(private startService: StartService) {\r\n  }\r\n  \r\n  ngOnInit() {\r\n    \r\n    \r\n    \r\n  }\r\n  \r\n  ngOnChanges() {   \r\n    \r\n    \r\n  }\r\n  \r\n  ionViewDidEnter()\r\n  {\r\n    \r\n\r\n  }\r\n\r\n/**\r\n * Si posiziona sulla Slide richiesta\r\n * @param indexSlideZeroBased Indice della Slide\r\n */\r\n  goToSlide(indexSlideZeroBased: number) {\r\n    if (this.sliderSport) {\r\n      this.sliderSport.slideTo(indexSlideZeroBased);\r\n    }\r\n  }\r\n  /**\r\n   * Scelta di un nuovo sport\r\n   * @param newSport Nuovo Sport da applicare\r\n   */\r\n  onChangeSport(newSport: Sport)\r\n  {\r\n    let indexSport = this.getIndexSport(newSport);\r\n    \r\n    //Posizionamento della Slide sul bottone premuto\r\n    if (indexSport != -1) {\r\n      \r\n      this.goToSlide(indexSport);\r\n    }\r\n\r\n    //Emissione evento di cambio campo\r\n    this.sportChanged.emit(newSport);\r\n  }\r\n \r\n\r\n    /**\r\n   * A seconda del numero di sport presenti, ritorna le opzioni da impostare\r\n   * @returns \r\n   */\r\n     getSliderOptions():any {\r\n      let slidOpt: any;\r\n      if (this.sportList.length == 1) {\r\n        slidOpt = this.sliderOpts1;\r\n      }\r\n      else if (this.sportList.length == 2) {\r\n        slidOpt = this.sliderOpts2;\r\n      }\r\n      else if (this.sportList.length == 3) {\r\n        slidOpt = this.sliderOpts3;\r\n      }\r\n      else {\r\n        slidOpt = this.sliderOpts3;\r\n      }\r\n  \r\n      return slidOpt;\r\n    }\r\n\r\n  /**\r\n   * Ritorna il colore da applicare a seconda dello sport selezionato\r\n   * @param mySport Sport da analizzare\r\n   * @returns Colore da applicare al bottone/card\r\n   */\r\n  getColor(mySport: Sport) {\r\n    let myColor = 'light';\r\n    \r\n    if (this.selectedSport && mySport) {\r\n      if (this.selectedSport.ID == mySport.ID) {\r\n        \r\n        myColor = 'secondary';\r\n      }\r\n    }\r\n\r\n    return myColor;\r\n  }\r\n\r\n    /**\r\n   * Ricerca un campo nell'Array e ne torna l'indice\r\n   * @param mySport Campo da cercare\r\n   */\r\n     getIndexSport(mySport: Sport):number {\r\n      let myPos = -1;\r\n  \r\n      if (mySport) {\r\n        myPos = this.sportList.findIndex(el => {\r\n          return el.ID == mySport.ID\r\n        });\r\n      }\r\n  \r\n      return myPos;\r\n    }\r\n\r\n}\r\n","\r\n<div >\r\n  <ion-slides \r\n        *ngIf=\"sportList.length!=0\" \r\n        [options]=\"getSliderOptions()\" \r\n        class=\"ion-text-center\"\r\n        #sliderSport>\r\n\r\n    <ion-slide \r\n          *ngFor=\"let sport of sportList\" >\r\n      <ion-card \r\n          mode=\"md\"\r\n          class=\"card-sport\" \r\n          [color]=\"getColor(sport)\" \r\n          button (click)=\"onChangeSport(sport)\">\r\n        <ion-grid>\r\n          <ion-row class=\"ion-align-items-center\">\r\n            <ion-col size=\"4\">\r\n              <i class=\"icon-sport\"><span [innerHTML]=\"sport.htmlIconHex\"></span></i>\r\n            </ion-col>\r\n            <ion-col>\r\n              <ion-label><h3 class=\"text-sport\">{{sport.DENOMINAZIONE}}</h3></ion-label>\r\n            </ion-col>\r\n          </ion-row>\r\n        </ion-grid>\r\n      </ion-card>\r\n    </ion-slide>\r\n  </ion-slides>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Directive, HostListener, Input, OnInit, Renderer2, ElementRef } from '@angular/core';\r\nimport { DomController } from '@ionic/angular';\r\nimport { Platform } from '@ionic/angular';\r\n\r\n/**\r\n * Moves away the header when scrolling down.\r\n */\r\n@Directive({\r\n    selector: '[appHideHeader]',\r\n})\r\nexport class HideHeaderDirective implements OnInit {\r\n    @Input('header') header: any;\r\n    \r\n    /**\r\n     * Minimum scroll offset from top in pixels until the animation kicks in.\r\n     */\r\n    @Input('scrollThreshold') scrollThreshold: number;\r\n\r\n    private lastY = 0;\r\n    private heightForScroll = -1;\r\n\r\n    constructor(private renderer: Renderer2, \r\n                private domCtrl: DomController,\r\n                private el: ElementRef,\r\n                private platform: Platform) {\r\n        // Doing nothing.\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.header = this.header.el;\r\n        this.domCtrl.write(() => {\r\n            this.renderer.setStyle(this.header, 'transition', 'margin-top 500ms');\r\n        });\r\n    }\r\n\r\n    getHeightForScrollContent(myEl: ElementRef) {\r\n        \r\n        if (this.heightForScroll == -1 || isNaN(this.heightForScroll)) {\r\n\r\n            if (myEl && myEl.nativeElement) {\r\n                let domDivCont = myEl.nativeElement.firstElementChild;\r\n                if (domDivCont) {\r\n                    this.heightForScroll = domDivCont.clientHeight - this.platform.height() - this.scrollThreshold;\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    @HostListener('ionScroll', ['$event']) onContentScroll($event: any) {\r\n\r\n            //Faccio calcolare l'altezza utile al calcolo\r\n            //L'altezza è l'intera altezza del contenuto dello Scroll - Altezza del Canvas della pagina\r\n            this.getHeightForScrollContent(this.el);\r\n\r\n            if (this.heightForScroll != -1 ) {\r\n                \r\n                if (\r\n                    $event.detail.scrollTop > (this.scrollThreshold || 0) &&\r\n                    $event.detail.scrollTop > this.lastY\r\n                ) {\r\n                    this.domCtrl.write(() => {\r\n                        this.renderer.setStyle(this.header, 'margin-top', `-${this.header.clientHeight}px`);\r\n                        \r\n                    });\r\n                } else if ($event.detail.scrollTop < this.heightForScroll){\r\n                    this.domCtrl.write(() => {\r\n                        this.renderer.setStyle(this.header, 'margin-top', '0');\r\n                        \r\n                    });\r\n                }\r\n        \r\n                this.lastY = $event.detail.scrollTop;\r\n            }\r\n            else {\r\n                console.warn('Directive Scroll: heightForScroll not valid');\r\n            }\r\n    }\r\n}\r\n","import { Impegno } from './impegno.model';\r\nimport { SettoreAttivita, TipoSocieta } from './valuelist.model';\r\nimport { Settimana } from './settimana.model';\r\nimport { MyDateTime } from '../library/models/mydatetime.model';\r\nimport { OccupazioneCampi } from './occupazionecampi.model';\r\nimport { PianificazioneCorso } from './pianificazionecorso.model';\r\nimport { pipe } from 'rxjs';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nexport class ButtonHomeParams {\r\n    utenteLoggato?: boolean; //Utente loggato\r\n    registrazioneInApp?: boolean; //Indica se è possibile effettuare la registrazione nell'App\r\n    listImpegni?: Impegno[]; //Lista degli impegni utente\r\n}\r\n\r\nexport class ButtonCard {\r\n    title: string;\r\n    subtitle: string;\r\n    nameicon: string;\r\n    sloticon: string;\r\n    color: string;\r\n    iconLink: boolean;\r\n    functionCod: string;\r\n    settore: SettoreAttivita;\r\n    id: string;\r\n    idRefer: string;\r\n    disabled: boolean;\r\n\r\n    constructor() {\r\n        this.settore = 0;\r\n        this.id = '';\r\n        this.idRefer = '';\r\n        this.disabled = false;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Ritorna i Botton Action per la location\r\n     * @param canBooking E' possibile prenotare ?\r\n     */\r\n    static getButtonActionLocation(canBooking?:boolean, tipoSocieta?:TipoSocieta): ButtonCard[] {\r\n        let arButton: ButtonCard[] = [];\r\n        let newBtn: ButtonCard;\r\n\r\n        if (canBooking) {\r\n            newBtn = new ButtonCard();\r\n\r\n            if (tipoSocieta == undefined) {\r\n                newBtn.title = 'Prenota';\r\n                newBtn.subtitle = 'organizza un evento in questa location';\r\n            }\r\n            else if (tipoSocieta == TipoSocieta.formazione) {\r\n                newBtn.title = 'Prenota un\\'aula';\r\n                newBtn.subtitle = 'organizza un corso per il tuo team';\r\n            }\r\n            else if (tipoSocieta == TipoSocieta.sportiva) {\r\n                newBtn.title = 'Prenota un campo';\r\n                newBtn.subtitle = 'organizza un incontro con i tuoi amici';\r\n            }\r\n            \r\n            newBtn.nameicon = 'calendar';\r\n            newBtn.sloticon = \"start\";\r\n            newBtn.color = \"primary\";\r\n            newBtn.iconLink = true;\r\n            newBtn.functionCod = 'book';\r\n    \r\n            arButton.push(newBtn);\r\n        }\r\n\r\n        newBtn = new ButtonCard();\r\n        newBtn.title = 'Impara con noi';\r\n        newBtn.subtitle = 'guarda i corsi che abbiamo preparato per te';\r\n        newBtn.nameicon = 'library-outline';\r\n        newBtn.sloticon = \"start\";\r\n        newBtn.color = \"primary\";\r\n        newBtn.iconLink = true;\r\n        newBtn.functionCod = 'course';\r\n\r\n        arButton.push(newBtn);\r\n\r\n        return arButton;\r\n    }\r\n\r\n    /**\r\n     * Ritorna i Buttoni da mostrare nella Home \r\n     * nella parte dedicata agli Eventi in programma, \r\n     * quando non sono presenti eventi\r\n     * @param params Informazioni per la creazione dei Bottoni\r\n     */\r\n    static getButtonHomeImpegni(params?:ButtonHomeParams): ButtonCard[] {\r\n        let arButton: ButtonCard[] = [];\r\n        let newBtn: ButtonCard;\r\n        let numImpegni = 0;\r\n\r\n        let registrationInApp: boolean = false; \r\n        let userLogged: boolean = false;\r\n        let listImpegni:Impegno[] = [];\r\n\r\n        //Recupero dei parametri\r\n        if (params) {\r\n            userLogged = params.utenteLoggato;\r\n            listImpegni = params.listImpegni;\r\n            registrationInApp = params.registrazioneInApp;\r\n        }\r\n\r\n        /** UTENTE LOGGATO */\r\n        if (userLogged) {\r\n            //Determino il numero degli impegni\r\n            if (listImpegni && listImpegni.length !== 0) {\r\n                numImpegni = listImpegni.length;\r\n            }\r\n\r\n            //Non ci sono impegni \r\n            if (numImpegni == 0) {\r\n\r\n                newBtn = new ButtonCard();\r\n                newBtn.title = 'Nessun appuntamento previsto';\r\n                newBtn.subtitle = 'Organizza un incontro con i tuoi amici';\r\n                newBtn.nameicon = 'calendar-outline';\r\n                newBtn.sloticon = \"start\";\r\n                newBtn.color = \"primary\";\r\n                newBtn.iconLink = false;\r\n                newBtn.functionCod = 'noevents';\r\n        \r\n                arButton.push(newBtn);\r\n\r\n            }\r\n            else {\r\n                //Ci sono impegni e creo le varie card\r\n                listImpegni.forEach(element => {\r\n\r\n                    newBtn = new ButtonCard();\r\n                    if (element.SETTORE == SettoreAttivita.settoreCorso) {\r\n\r\n                        newBtn.title = element.DENOMINAZIONE;\r\n                        newBtn.subtitle = Settimana.getLabel(element.DATAORAINIZIO.getDay()) + ' ' + MyDateTime.formatDate(element.DATAORAINIZIO,'DD/MM') + ' alle ' + MyDateTime.formatTime(element.DATAORAINIZIO);\r\n\r\n                        newBtn.nameicon = 'school-outline';\r\n                        newBtn.sloticon = \"start\";\r\n                        newBtn.color = \"primary\";\r\n                        newBtn.iconLink = true;\r\n                        newBtn.functionCod =  \"show\";\r\n                        newBtn.id = element.IDREFER;\r\n                        newBtn.settore = SettoreAttivita.settoreCorso;\r\n                        \r\n                        arButton.push(newBtn);\r\n                    }\r\n                    else if (element.SETTORE == SettoreAttivita.settorePrenotazione){\r\n\r\n                        \r\n                        newBtn.title = element['_DENOMINAZIONE_Location'];\r\n                        newBtn.subtitle = Settimana.getLabel(element.DATAORAINIZIO.getDay()) + ' ' + MyDateTime.formatDate(element.DATAORAINIZIO,'DD/MM') + ' alle ' + MyDateTime.formatTime(element.DATAORAINIZIO);\r\n\r\n                        newBtn.nameicon = 'calendar-outline';\r\n                        newBtn.sloticon = \"start\";\r\n                        newBtn.color = \"primary\";\r\n                        newBtn.iconLink = true;\r\n\r\n                        newBtn.functionCod =  \"show\";\r\n                        newBtn.id =  element.IDREFER + '-' + element.ID;\r\n                        newBtn.settore = SettoreAttivita.settorePrenotazione;\r\n\r\n                        \r\n                \r\n                        arButton.push(newBtn);                        \r\n                    }\r\n\r\n                })\r\n            }\r\n\r\n\r\n        }\r\n        else {\r\n            //Non loggato\r\n            newBtn = new ButtonCard();\r\n            if (registrationInApp) {\r\n\r\n                newBtn.title = 'Registrati o accedi';\r\n                newBtn.subtitle = 'crea il tuo account o accedi';\r\n                newBtn.nameicon = 'person-add-outline';\r\n                newBtn.sloticon = \"start\";\r\n                newBtn.color = \"primary\";\r\n                newBtn.iconLink = true;\r\n                newBtn.functionCod = 'register';\r\n        \r\n                arButton.push(newBtn);\r\n            }\r\n            else {\r\n                newBtn.title = 'Inizia ed accedi';\r\n                newBtn.subtitle = 'accedi al tuo account';\r\n                newBtn.nameicon = 'person-add-outline';\r\n                newBtn.sloticon = \"start\";\r\n                newBtn.color = \"primary\";\r\n                newBtn.iconLink = true;\r\n                newBtn.functionCod = 'login';\r\n        \r\n                arButton.push(newBtn);\r\n            }\r\n        }\r\n\r\n        return arButton;\r\n    }\r\n\r\n    /**\r\n     * Ritorna i Buttoni da mostrare nella Home \r\n     * nella parte dedicata agli Eventi in programma, \r\n     * quando non sono presenti eventi\r\n     * @param params Informazioni per la creazione dei Bottoni\r\n     */\r\n    static getButtonAgendaFromOccupazioni(collOccupazioni: OccupazioneCampi[]): ButtonCard[] {\r\n        let arButton: ButtonCard[] = [];\r\n        let newBtn: ButtonCard;\r\n        \r\n\r\n        if (collOccupazioni) {\r\n            // Occupazioni presenti\r\n            if (collOccupazioni.length != 0) {\r\n                collOccupazioni.forEach(element => {\r\n\r\n                    newBtn = new ButtonCard();\r\n                    newBtn.title = element['_DENOMINAZIONE_Location'];\r\n                    newBtn.subtitle = Settimana.getLabel(element.DATAORAINIZIO.getDay()) + ' ' + MyDateTime.formatDate(element.DATAORAINIZIO,'DD/MM') + ' alle ' + MyDateTime.formatTime(element.DATAORAINIZIO);\r\n\r\n                    newBtn.nameicon = 'calendar-outline';\r\n                    newBtn.sloticon = \"start\";\r\n                    newBtn.color = \"primary\";\r\n                    newBtn.iconLink = true;\r\n\r\n                    newBtn.functionCod =  \"show\";\r\n                    newBtn.id =  element.ID;\r\n                    newBtn.idRefer = element.IDREF;\r\n                    newBtn.settore = element.TIPO;\r\n                    if (newBtn.settore == SettoreAttivita.settoreCorso) {\r\n                        newBtn.nameicon = 'calendar-outline';\r\n                    }\r\n                    else {\r\n                        newBtn.nameicon = 'school-outline';\r\n                    }\r\n                    arButton.push(newBtn);\r\n\r\n                });\r\n            }\r\n        }\r\n\r\n        if (arButton.length == 0) {\r\n\r\n            newBtn = new ButtonCard();\r\n            newBtn.title = 'Nessuna programmazione per la giornata';\r\n            newBtn.subtitle = 'nessun corso o prenotazione';\r\n            newBtn.nameicon = 'calendar-outline';\r\n            newBtn.sloticon = \"start\";\r\n            newBtn.color = \"primary\";\r\n            newBtn.iconLink = false;\r\n            newBtn.functionCod = 'noevents';\r\n    \r\n            arButton.push(newBtn);\r\n        }\r\n\r\n        return arButton;\r\n    }\r\n\r\n    static getButtonAgendaFromPianificazioneCorso(pianificazioneElem: PianificazioneCorso): ButtonCard{\r\n        let buttonElem: ButtonCard = new ButtonCard();\r\n        let datePipe = new DatePipe('it');\r\n\r\n        let strSubtitle = datePipe.transform(pianificazioneElem.DATAORAINIZIO, 'HH:mm') + ' - ' + datePipe.transform(pianificazioneElem.DATAORAFINE, 'HH:mm')\r\n\r\n        buttonElem.title = pianificazioneElem['_DENOMINAZIONE_Corso'];\r\n        buttonElem.subtitle = strSubtitle;\r\n        buttonElem.nameicon = 'school-outline';\r\n        buttonElem.sloticon = 'start';\r\n        buttonElem.iconLink = true;\r\n        buttonElem.color = 'primary'\r\n\r\n\r\n        return buttonElem;\r\n    }\r\n    \r\n}","import { Component, OnInit, Input } from '@angular/core';\r\nimport { AperturaLocation } from '../../../models/aperturalocation.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-aperture',\r\n  templateUrl: './aperture.component.html',\r\n  styleUrls: ['./aperture.component.scss'],\r\n})\r\nexport class ApertureComponent implements OnInit {\r\n\r\n  @Input() myApertura: AperturaLocation = new AperturaLocation();\r\n  colorChip = 'primary';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n  getIcon() {\r\n    let icon = 'close';\r\n    if (this.myApertura.isOpen()) {\r\n      icon = 'flag';\r\n    }\r\n\r\n    return icon;\r\n  }\r\n\r\n}\r\n","<ion-row class=\"ion-padding-start ion-align-items-center row-border\">\r\n  <ion-col size=\"6\">\r\n    {{ myApertura.getLabel() | titlecase}}\r\n  </ion-col>\r\n\r\n  <ion-col size=\"6\" class=\"ion-no-padding\">\r\n    \r\n      <ion-row *ngIf=\"myApertura.DALLE1\" class=\"ion-no-padding\">\r\n        <ion-col class=\"ion-text-center ion-no-padding\">\r\n\r\n          <ion-chip [color]=\"colorChip\">\r\n            <ion-icon \r\n                name=\"time\"></ion-icon>\r\n            <ion-label>{{ myApertura.DALLE1 | date:'HH:mm'}} - {{ myApertura.ALLE1 | date:'HH:mm'}}</ion-label>\r\n          </ion-chip>\r\n        </ion-col>\r\n\r\n      </ion-row>\r\n  \r\n      <ion-row *ngIf=\"myApertura.DALLE2\" class=\"ion-no-padding\">\r\n        <ion-col class=\"ion-text-center ion-no-padding\">\r\n\r\n          <ion-chip [color]=\"colorChip\">\r\n            <ion-icon \r\n                name=\"time\"></ion-icon>\r\n            <ion-label>{{ myApertura.DALLE2 | date:'HH:mm'}} - {{ myApertura.ALLE2 | date:'HH:mm'}}</ion-label>\r\n          </ion-chip>\r\n\r\n        </ion-col>\r\n      </ion-row>\r\n\r\n      <ion-row *ngIf=\" myApertura.isAlwaysOpen\" class=\"ion-no-padding\">\r\n        <ion-col class=\"ion-text-center ion-no-padding\">\r\n\r\n          <ion-chip [color]=\"colorChip\">\r\n            <ion-label>\r\n              SEMPRE APERTO\r\n            </ion-label>\r\n          </ion-chip>\r\n\r\n        </ion-col>\r\n      </ion-row>\r\n  \r\n      <ion-row *ngIf=\"!myApertura.isOpen()\" class=\"ion-no-padding\">\r\n        <ion-col class=\"ion-text-center ion-no-padding\">\r\n          <ion-chip color=\"danger\">\r\n            <ion-label>\r\n              CHIUSO\r\n            </ion-label>\r\n          </ion-chip>\r\n        </ion-col>\r\n      </ion-row>\r\n    \r\n\r\n  </ion-col>\r\n\r\n</ion-row>\r\n\r\n\r\n\r\n\r\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { CorsoValutazioneLivello } from 'src/app/models/corsovalutazionelivello.model';\nimport { Livello } from 'src/app/models/livello.model';\n\n@Component({\n  selector: 'app-level-setter',\n  templateUrl: './level-setter.component.html',\n  styleUrls: ['./level-setter.component.scss'],\n})\nexport class LevelSetterComponent implements OnInit {\n\n  @Input() readOnly: boolean = false;\n  @Input() listLivelli: Livello[] = [];\n  @Input() set valutazione(value: CorsoValutazioneLivello) {\n\n      this.myValutazione = value;\n\n      if (this.myValutazione) {\n        if (this.myValutazione.IDLIVELLOFINALE) {\n          this.idSelectedLevel = this.myValutazione.IDLIVELLOFINALE;\n        }\n        else {\n          this.idSelectedLevel = this.myValutazione.IDLIVELLOENTRATA;\n        }\n      }\n\n      //Controllo la situazione Livello Finale\n      this.setFlagComplete();\n\n  };\n  \n  \n  @Output() onChoose = new EventEmitter<CorsoValutazioneLivello>();\n\n  \n  //ID Livello Selezionato\n  idSelectedLevel: string;\n\n  //Elemento collassato\n  collapsed: boolean = true;\n\n  //Record della Valutazione\n  myValutazione: CorsoValutazioneLivello;\n\n  //Indica se è stato impostato un livello Finale\n  flagComplete: boolean = false;\n\n  /**\n   * Costruisce un elemento stile Accordion per la scelta del Livello\n   * \n   */\n  constructor() { }\n\n  /**\n   * Apre o Chiude la lista dei Livelli\n   */\n  onChangeCollapse() {\n    //Se non sono in Sola lettura\n    if (!this.readOnly) {\n\n      if (this.collapsed) {\n        this.collapsed = false;\n      }\n      else {\n        this.collapsed = true;\n      }\n\n    }\n  }\n\n  ngOnInit() {}\n\n\n  /**\n   * Imposta il flag che indica che è stato completato con \n   * il livello finale l'elemento\n   */\n  setFlagComplete() {\n    let value: boolean = false;\n    if (this.myValutazione && this.myValutazione.IDLIVELLOFINALE && this.myValutazione.IDLIVELLOFINALE.length != 0) {\n      value = true;\n    }\n\n    this.flagComplete = value;\n  }\n\n  /**\n   * Ritorna una stringa che rappresenta idSelectedLevel\n   */\n  getLabelLevel(idLevel: string): string {\n    let label: string = 'non definito';\n    let myLevel: Livello;\n    if (idLevel) {\n\n      myLevel = this.listLivelli.find(element => {\n        return element.ID == idLevel\n      });\n      if (myLevel) {\n        label = myLevel.DENOMINAZIONE;\n      }\n    }\n\n    return label;\n  }\n\n  /**\n   * Modificato il valore nel Radio Group\n   * @param value Valore Cambiato\n   */\n  onChangeRadioGroup() {\n    this.setFlagComplete();\n\n    //Segnalo la modifica del valore\n    this.onChoose.emit(this.myValutazione);\n  }\n\n}\n","<ion-list *ngIf=\"myValutazione\" class=\"ion-no-margin\">\n\n  <ion-item-group color=\"light\">\n\n    <ion-item \n      lines=\"none\"\n      \n      color=\"light\" \n      (click)=\"onChangeCollapse()\">\n\n      <ion-icon \n          slot=\"start\" \n          [color]=\"flagComplete ? 'success':'warning'\" \n          [name]=\"flagComplete ? 'checkmark-done-circle-outline':'alert-circle-outline'\"></ion-icon>\n          \n\n      <ion-label>\n        <h2>{{myValutazione.NOMINATIVO}}</h2>\n        <p>\n          <ion-text color=\"medium\" style=\"font-style: italic;\">Attuale:&nbsp;{{getLabelLevel(myValutazione.IDLIVELLOENTRATA)}}</ion-text>\n        </p>\n        <p>\n          <ion-text color=\"medium\" style=\"font-style: italic;\">Conseguito:&nbsp;</ion-text>\n          <ion-text color=\"medium\" style=\"font-style: italic;font-weight: bold;\">{{getLabelLevel(myValutazione.IDLIVELLOFINALE)}}</ion-text>\n        </p>\n      </ion-label>\n\n      <ion-icon \n          *ngIf=\"!readOnly\"\n          slot=\"end\" \n          [name]=\"collapsed ? 'chevron-down-outline':'chevron-up-outline'\">\n      </ion-icon>\n      \n    </ion-item>\n  </ion-item-group>\n\n  <ion-radio-group \n    (ionChange)=\"onChangeRadioGroup()\"\n    [(ngModel)]=\"myValutazione.IDLIVELLOFINALE\" *ngIf=\"!collapsed\">\n\n    <ion-item *ngFor=\"let level of listLivelli\">\n      <ion-label>{{level.DENOMINAZIONE}}</ion-label>\n      <ion-radio \n          [disabled]=\"readOnly\"\n          [value]=\"level.ID\" \n          slot=\"start\" \n          color=\"success\"></ion-radio>\n    </ion-item>\n  </ion-radio-group>\n\n</ion-list>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { stringify } from 'querystring';\r\nimport { MyDateTime } from 'src/app/library/models/mydatetime.model';\r\nimport { ItemCalendario } from 'src/app/models/itemCalendario.model';\r\nimport { PianificazioneCorso } from 'src/app/models/pianificazionecorso.model';\r\n\r\n@Component({\r\n  selector: 'app-item-calendario',\r\n  templateUrl: './item-calendario.component.html',\r\n  styleUrls: ['./item-calendario.component.scss'],\r\n})\r\nexport class ItemCalendarioComponent implements OnInit {\r\n\r\n  @Input() params : ItemCalendario = new ItemCalendario();\r\n  @Input() showDate: boolean = false;\r\n  @Output() click: EventEmitter<any> = new EventEmitter<any>()\r\n\r\n  TipoBadge: typeof TipoBadge = TipoBadge\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n  onClick(){\r\n    this.click.emit();\r\n  }\r\n\r\n\r\n  get tipoBadge():TipoBadge{\r\n    let tipo: TipoBadge;\r\n\r\n    if (this.params.badgeText && this.params.badgeText.length > 0){\r\n      if(this.params.badgeIcon && this.params.badgeIcon.length > 0){\r\n        //abbiamo entrambi \r\n        tipo = TipoBadge.iconAndText;\r\n      }\r\n      else{\r\n        // abbiamo solo il testo\r\n        tipo = TipoBadge.onlyText;\r\n      }\r\n    }\r\n    else if(this.params.badgeIcon && this.params.badgeIcon.length > 0){\r\n      //abbiamo solo l'icona\r\n      tipo = TipoBadge.onlyIcon;\r\n    }\r\n\r\n    else{\r\n      //non abbiamo nulla\r\n      tipo = TipoBadge.noBadge;\r\n    }\r\n\r\n\r\n    return tipo\r\n  }\r\n\r\n  get badgeClass():string{\r\n    let myCssClass: string = '';\r\n\r\n    if(this.tipoBadge == TipoBadge.onlyIcon){\r\n      myCssClass = 'badge-icon-only';\r\n    }\r\n    else if(this.tipoBadge == TipoBadge.iconAndText){\r\n      myCssClass = 'badge-icon-text';\r\n    }\r\n\r\n    return myCssClass;\r\n  }\r\n\r\n    /**\r\n   * Ritorna il colore da applicare alla riga verticale che separa \r\n   * la colonna Sinistra dalla destra\r\n   * @param elItem \r\n   */\r\n  getClassColorColumn(elItem: ItemCalendario):string {\r\n      let color = 'undef';\r\n      let dataitem: Date;\r\n\r\n      let today: Date = new Date(MyDateTime.formatDateISO(new Date));\r\n\r\n      if (elItem && elItem.oraInizio) {\r\n\r\n          dataitem = MyDateTime.getOnlyDate(elItem.oraInizio);\r\n\r\n        if (dataitem < today) {\r\n          //Passata\r\n          color='past';\r\n        }\r\n        else if (dataitem > today) {\r\n          color = 'future'\r\n        }\r\n        else {\r\n          color = 'today';\r\n        }\r\n      }\r\n  \r\n      return color;\r\n    }\r\n\r\n\r\n}\r\n\r\nenum TipoBadge{\r\n  onlyIcon = 0,\r\n  onlyText = 1,\r\n  iconAndText = 2,\r\n  noBadge = 3\r\n}\r\n","  <div class=\"custom-element\">\r\n    <ion-grid class=\"ion-no-padding\">\r\n      <ion-row class=\"ion-align-items-center\">\r\n        <ion-col class=\"ion-no-padding col-left\" size=\"auto\">\r\n          <ion-label class=\"left-label\">\r\n            <h4>{{params.oraInizio | date: 'HH.mm'}}</h4>\r\n            <h4>{{params.oraFine | date: 'HH.mm'}}</h4>\r\n          </ion-label>\r\n        </ion-col>\r\n        <ion-col \r\n            class=\"ion-no-padding col-center\" \r\n            [ngClass]=\"getClassColorColumn(params)\">\r\n          <ion-label>\r\n            <p>{{params.oraInizio | date: 'EEE dd/MM/yyyy'}}</p>\r\n            <h2 *ngIf=\"params.riga1Text\">{{params.riga1Text}}</h2>\r\n            <h3 *ngIf=\"params.riga2Text\">{{params.riga2Text}}</h3>\r\n            <h3 *ngIf=\"params.riga3Text\">{{params.riga3Text}}</h3>\r\n          </ion-label>\r\n        </ion-col>\r\n        <ion-col \r\n              class=\"ion-no-padding col-right\">\r\n          <ion-badge \r\n            *ngIf=\"tipoBadge != TipoBadge.noBadge\"\r\n            [color]=\"params.badgeColor\"\r\n            [class]=\"badgeClass\"\r\n          >\r\n            <ion-icon *ngIf=\"tipoBadge == TipoBadge.iconAndText || tipoBadge == TipoBadge.onlyIcon\" [name]=\"params.badgeIcon\"></ion-icon>\r\n            <span *ngIf=\"tipoBadge == TipoBadge.iconAndText || tipoBadge == TipoBadge.onlyText\">\r\n              {{params.badgeText}}\r\n            </span>\r\n          </ion-badge>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </div>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-alert-input-prezzo',\r\n  templateUrl: './alert-input-prezzo.component.html',\r\n  styleUrls: ['./alert-input-prezzo.component.scss'],\r\n})\r\nexport class AlertInputPrezzoComponent implements OnInit {\r\n\r\n  @Input() placeholder: string;\r\n  @Input() description: string;\r\n  @Input() btnText: string;\r\n\r\n  @Output() onDismiss = new EventEmitter<number>();\r\n\r\n  value: number;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n\r\n  onClickBtn(){\r\n    this.onDismiss.emit(this.value);\r\n  }\r\n\r\n  onClickBackdrop(){\r\n    this.onDismiss.emit(undefined);\r\n  }\r\n\r\n}\r\n","<div class=\"input-prezzo\">\r\n  <ion-backdrop [tappable]=\"true\" [visible]=\"true\" [stopPropagation]=\"true\" (ionBackdropTap)=\"onClickBackdrop()\"></ion-backdrop>\r\n  <ion-card>\r\n    <ion-card-content>\r\n      <p *ngIf=\"description\">\r\n        <ion-icon name=\"information-circle-outline\" color=\"primary\"></ion-icon>\r\n        <span>{{description}}</span>\r\n      </p>\r\n      <ion-input clearInput=\"true\" inputmode=\"numeric\"  [placeholder]=\"placeholder | currency:'EUR'\" [(ngModel)]=\"value\"></ion-input>\r\n      <ion-button expand=\"block\" color=\"primary\" fill=\"clear\" (click)=\"onClickBtn()\">\r\n        {{btnText? btnText : 'Conferma'}}\r\n      </ion-button>\r\n    </ion-card-content>\r\n  </ion-card>\r\n</div>","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport * as moment from \"moment\";\r\nimport { IonSlides, PickerController } from '@ionic/angular';\r\nimport { PickerOptions, PickerButton, PickerColumn, PickerColumnOption } from '@ionic/core';\r\nimport { ValueList, Mesi } from 'src/app/models/valuelist.model';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-calendarscroll',\r\n  templateUrl: './calendarscroll.component.html',\r\n  styleUrls: ['./calendarscroll.component.scss'],\r\n})\r\nexport class CalendarscrollComponent implements OnInit {\r\n\r\n\r\n  @Input() activeDay = new Date();\r\n  @Output() onChangeActiveDay = new EventEmitter<Date>();\r\n  @ViewChild('sliderDays')sliderDays: IonSlides;\r\n\r\n  listDay: number[] = [];\r\n  listMesi: ValueList[] = []; //Elenco dei mesi da visualizzare nel Picker\r\n\r\n  sliderOpts = {\r\n    slidesPerView: 15,\r\n    spaceBetween: 3,\r\n    initialSlide: 1, //Dovrei farla variabile\r\n    // Responsive breakpoints   \r\n   breakpoints: {  \r\n   \r\n      // when window width is <= 320px     \r\n      320: {       \r\n         slidesPerView: 5,\r\n         spaceBetween: 1     \r\n      },     \r\n      // when window width is <= 480px     \r\n      480: {       \r\n         slidesPerView: 7,       \r\n         spaceBetween: 3     \r\n      },   \r\n  \r\n      // when window width is <= 640px     \r\n      640: {       \r\n         slidesPerView: 10,       \r\n         spaceBetween: 1     \r\n      },\r\n      1000: {       \r\n        slidesPerView: 15,       \r\n        spaceBetween: 1     \r\n     } \r\n  \r\n   } \r\n  }\r\n\r\n  constructor(private pickController:PickerController) { \r\n    \r\n    this.setStartSlide();\r\n    \r\n    //Creo l'Array dei Mesi che utilizzero nel Picker Date\r\n    this.listMesi = ValueList.getArray(Mesi);\r\n  }\r\n\r\n  /**\r\n   * Imposta la Slide del giorno da mostrare a seconda del ActiveDay\r\n   */\r\n  setStartSlide() {\r\n      //Prendo il giorno attivo -1\r\n      let startSlide = this.activeDay.getDate() - 1;\r\n      //Sottraggo 2 per dare più respiro\r\n      startSlide -= 2;\r\n      if (startSlide < 0) {\r\n        startSlide = 0\r\n      }\r\n\r\n      this.sliderOpts.initialSlide = startSlide;\r\n      \r\n  }\r\n\r\n  /**\r\n   * Si posiziona sulla Slide richiesta\r\n   * @param indexSlideZeroBased Indice della Slide\r\n   */\r\n  goToSlide(indexSlideZeroBased: number) {\r\n    if (this.sliderDays) {\r\n      this.sliderDays.slideTo(indexSlideZeroBased);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setListDay();\r\n  }\r\n\r\n\r\n  /* Ricava tutti i giorni del mese presente in activeDay */\r\n  setListDay() {\r\n    let endDay = 30;\r\n    let endWrapper = moment(new Date(this.activeDay.getFullYear(), this.activeDay.getMonth(), 1)).add(1, 'M');\r\n    endWrapper.subtract(1,'day');\r\n    endDay = endWrapper.date();\r\n\r\n    this.listDay = [];\r\n    endDay += 1; //Incremento EndDay per usare la condizione <\r\n    for (let index = 1; index < endDay; index++) {\r\n      this.listDay.push(index);\r\n    }\r\n  }\r\n\r\n  // Ritorna il colore del Button\r\n  getFillButton(day) {\r\n    let fill = 'outline';\r\n    if (this.activeDay.getDate() == day) {\r\n      fill = 'solid';\r\n    }\r\n\r\n    return fill;\r\n  }\r\n\r\n  //Bottone del giorno premuto\r\n  onClickButton(day) {\r\n    let anno = this.activeDay.getFullYear();\r\n    let mese = this.activeDay.getMonth();\r\n    let giorno = day;\r\n    this.activeDay = new Date(anno, mese, giorno);\r\n\r\n    //Lancio evento di cambio giorno\r\n    this.onChangeActiveDay.emit(this.activeDay);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Usato per creare la colonna del mese del ion picker\r\n   * @param meseZeroBased è il numero del Mese Zero Base (0 = Gennaio)\r\n   */\r\n  initColumnMesi(meseZeroBased: number): PickerColumnOption[] {\r\n    let optionColMesi: PickerColumnOption[] = [];\r\n    for (let index = 0; index < this.listMesi.length; index++) {\r\n      const element = this.listMesi[index];\r\n      let isDisabled = (index >= meseZeroBased ? false:true);\r\n\r\n      let pickColMese: PickerColumnOption = {\r\n        text: element.description,\r\n        value: element.value,\r\n        disabled: isDisabled\r\n        \r\n      }\r\n      optionColMesi.push(pickColMese);\r\n    }    \r\n\r\n    return optionColMesi;\r\n  }\r\n\r\n  /**\r\n   * Crea la colonna degli anni\r\n   */\r\n  initColumnAnni(): PickerColumnOption[] {\r\n    //Creo l'elenco sulla colonna dell'Anno\r\n    let optionColAnni: PickerColumnOption[] = [];\r\n    let startAnno = (new Date()).getFullYear();\r\n    for (let index = startAnno; index < startAnno + 5 ; index++) {\r\n\r\n\r\n      let pickColAnno: PickerColumnOption = {\r\n        text: index + '',\r\n        value: index\r\n      }\r\n\r\n      optionColAnni.push(pickColAnno);\r\n      \r\n      \r\n    }\r\n\r\n    return optionColAnni;\r\n  }\r\n\r\n  /**\r\n   * Crea l'insieme delle colonne da passare al Picker\r\n   * @param optColMesi       Colonna del Mese\r\n   * @param indexActiveMese  Index Selezionato Mese\r\n   * @param optColAnni       Colonna degli Anni\r\n   * @param indexActiveAnno  Index Selezionato Anno\r\n   */\r\n  initColumnsPicker(optColMesi: PickerColumnOption[], indexActiveMese: number, optColAnni: PickerColumnOption[], indexActiveAnno:number): PickerColumn[] {\r\n        // Colonne del Picker\r\n        let pickColumns: PickerColumn[] = [\r\n          {\r\n            name: 'mese',\r\n            options: optColMesi,\r\n            selectedIndex: indexActiveMese\r\n          },\r\n          {\r\n            name: 'anno',\r\n            options: optColAnni,\r\n            selectedIndex: indexActiveAnno\r\n          }];\r\n\r\n      return pickColumns;\r\n  }\r\n  \r\n  /**\r\n   * Visualizza il Picker Date\r\n   */\r\n  showPickerDate(): void {\r\n    let _this = this;\r\n    // Indici delle voci selezionate\r\n    let indexActiveMese = 0;\r\n    let indexActiveAnno = (_this.activeDay.getFullYear() - (new Date()).getFullYear());\r\n    const myMese = (new Date()).getMonth();\r\n\r\n    let pickButtons: PickerButton[] = [{\r\n      text: 'Conferma',\r\n      handler: (data: any) => {\r\n        //Recupero Mese e Anno\r\n        let m = data.mese.value;\r\n        let a = data.anno.value;\r\n\r\n        //Imposto la nuova Data attiva\r\n        _this.setNewActiveDateFromPicker(m, a);\r\n        \r\n      }\r\n      },\r\n      {\r\n        role: 'cancel',\r\n        text: 'Annulla'\r\n      }];\r\n\r\n    //Creo l'elenco sulla colonna del Mese\r\n    let optionColMesi: PickerColumnOption[] = this.initColumnMesi(myMese);\r\n    \r\n    //Creo l'elenco sulla colonna dell'Anno\r\n    let optionColAnni: PickerColumnOption[] = [];\r\n    optionColAnni = this.initColumnAnni();\r\n\r\n    \r\n    // Colonne del Picker\r\n    let pickColumns = this.initColumnsPicker(optionColMesi, indexActiveMese, optionColAnni, indexActiveAnno);\r\n\r\n\r\n    //Opzioni del Picker\r\n    let pickOptions: PickerOptions = {\r\n      columns: pickColumns,\r\n      buttons: pickButtons,\r\n      keyboardClose: true\r\n    }\r\n\r\n    //Mostro il Picker\r\n    this.pickController\r\n          .create(pickOptions)\r\n          .then(elPicker => {\r\n            elPicker.addEventListener('ionPickerColChange', async (event:any) => {\r\n              const data = event.detail;\r\n              \r\n              //Cambiare la colonna dei Mesi a seconda dell'anno\r\n              if (data.name == 'anno') {\r\n                    const myAnno = (new Date()).getFullYear();\r\n                    const myMese = (new Date()).getMonth();\r\n                    let optionColMesi: PickerColumnOption[] = [];\r\n                    let optionColAnni: PickerColumnOption[] = [];\r\n                    let pickColumns: PickerColumn[] = [];\r\n\r\n                    //Indice di posizione dell'array\r\n                    const colSelectedIndex = data.selectedIndex;\r\n                    //Tutto il contenuto della colonna \r\n                    const colOptions = data.options;\r\n                    //Vediamo quale anno ha scelto\r\n                    const chooseAnno = colOptions[colSelectedIndex].value;\r\n\r\n                    //Creo la Colonna dell'Anno\r\n                    optionColAnni = this.initColumnAnni();\r\n\r\n                    //Stesso Anno attuale devo filtrare i mesi\r\n                    if (chooseAnno == myAnno) {\r\n                      //Devo filtrare i mesi visualizzando solo i mancanti\r\n                      optionColMesi = this.initColumnMesi(myMese);\r\n                    }\r\n                    else {\r\n                      //Tutti i mesi\r\n                      optionColMesi = this.initColumnMesi(0);\r\n                    }\r\n\r\n                    //Unisco le colonne\r\n                    pickColumns = this.initColumnsPicker(optionColMesi, 0, optionColAnni, colSelectedIndex);\r\n                    \r\n\r\n                    //Applico le nuove colonne\r\n                    elPicker.columns = pickColumns;\r\n\r\n                    //Il metodo ForceUpdate non esiste più\r\n                    //elPicker.forceUpdate();\r\n\r\n              }\r\n\r\n            });\r\n            elPicker.present();\r\n          });\r\n  }\r\n\r\n  /**\r\n   * Imposta activeDay sulla base della scelta fatta nel picker\r\n   * @param meseOneBasedNew Numero del Mese (da 1 a 12)\r\n   * @param annoNew Anno scelto\r\n   */\r\n  setNewActiveDateFromPicker(meseOneBasedNew: number, annoNew: number ) {\r\n    let activeM = this.activeDay.getMonth();\r\n    let activeA = this.activeDay.getFullYear();\r\n    let activeG = this.activeDay.getDate();\r\n    let message = '';\r\n    let oggi = new Date();\r\n\r\n\r\n    // message = `Nuovo (M-A): ${meseOneBasedNew} - ${annoNew} / Attuali (M-A): ${activeM} - ${activeA}`;\r\n    // console.log(message);\r\n\r\n    // Cambiato il mese o l'anno\r\n    if ((meseOneBasedNew - 1) !== activeM || annoNew !== activeA) {\r\n      \r\n      //Ci siamo spostati sul mese/anno di oggi\r\n      if ((meseOneBasedNew - 1) == oggi.getMonth() && annoNew == oggi.getFullYear()) {\r\n        \r\n        //Allora spostiamo il giorno scelto a oggi\r\n        activeG = oggi.getDate();\r\n\r\n      }\r\n      else {\r\n        //Lo portiamo al primo del mese\r\n        activeG = 1;\r\n\r\n        // //Qual'e' il giorno piu' alto nel nuovo mese scelto\r\n        // let maxDay = this.getMaxDayInMont((meseOneBasedNew - 1), annoNew);\r\n        // if (activeG > maxDay) {\r\n        //   activeG = maxDay;\r\n        // }\r\n\r\n      }\r\n\r\n\r\n\r\n      //Cambio il Giorno attivo\r\n      this.activeDay = new Date(annoNew, (meseOneBasedNew - 1), activeG);\r\n\r\n      //Ripreparo la lista dei giorni\r\n      this.setListDay();\r\n\r\n      //Si posiziona sulla Slide\r\n      this.goToSlide(this.activeDay.getDate() -1);\r\n\r\n      //Lancio evento di cambio giorno\r\n      this.onChangeActiveDay.emit(this.activeDay);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Ritorna il numero del giorno piu' alto del mese\r\n   * @param meseZeroBase Numero del Mese (o Based)\r\n   * @param anno Anno\r\n   */\r\n  getMaxDayInMont(meseZeroBase: number, anno: number) {\r\n    let newDate = moment(new Date(anno, meseZeroBase, 1));\r\n    newDate.add(1,'month');\r\n    newDate.subtract(1,'day');\r\n\r\n    return newDate.toDate().getDate();\r\n  }\r\n\r\n}\r\n","<ion-grid class=\"ion-no-padding ion-no-margin\">\r\n  <ion-row class=\" date-row\">\r\n    <ion-col (click)=\"showPickerDate()\" size=\"\"  class=\"ion-text-center\">\r\n      <div class=\"custom-div\">\r\n      <h5 class=\"ion-no-margin custom-h5 ion-text-center\">\r\n        <span> {{ activeDay | date: \"MMMM yyyy\" | titlecase}}</span>\r\n        <ion-icon name=\"chevron-down\" color=\"primary\" class=\"\"></ion-icon>\r\n      </h5>\r\n    </div>\r\n    </ion-col>\r\n    <!-- <ion-col (click)=\"showPickerDate()\" size=\"5\" class=\"ion-no-padding ion-no-margin ion-text-left\">\r\n    </ion-col> -->\r\n  </ion-row>\r\n\r\n  <ion-row class=\"ion-no-margin ion-padding-horizontal\">\r\n  <ion-slides [options]=\"sliderOpts\" #sliderDays>\r\n    <ion-slide *ngFor=\"let day of listDay\">\r\n\r\n\r\n        <ion-button \r\n            class=\"ion-no-padding ion-no-margin\"\r\n            shape=\"round\" \r\n            size = \"large\"\r\n            [fill]=\"getFillButton(day)\" \r\n            color=\"secondary\"\r\n            (click)=\"onClickButton(day)\">\r\n          {{ day }}\r\n        </ion-button>\r\n\r\n        \r\n    </ion-slide>\r\n  </ion-slides>\r\n  </ion-row>\r\n</ion-grid>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Platform, ActionSheetController } from '@ionic/angular';\r\nimport { AreaPaymentSetting } from 'src/app/models/areapaymentsetting.model';\r\n\r\n@Component({\r\n  selector: 'app-payment-choose',\r\n  templateUrl: './payment-choose.component.html',\r\n  styleUrls: ['./payment-choose.component.scss'],\r\n})\r\nexport class PaymentChooseComponent implements OnInit {\r\n\r\n  //Elenco dei pagamenti accettati\r\n  @Input() arPayment: AreaPaymentSetting[] = [];\r\n  @Output() onPaymentChoosed = new EventEmitter<AreaPaymentSetting>();\r\n  @Input() selectedPayment: AreaPaymentSetting;\r\n\r\n  isMobile = false;\r\n\r\n  constructor(private platform: Platform,\r\n              private actionSheetController: ActionSheetController) { \r\n\r\n    if (platform.is('hybrid')) {\r\n      this.isMobile = true;\r\n    }\r\n    else {\r\n      this.isMobile = false;\r\n    }\r\n  }\r\n\r\n  get itemIcon() {\r\n    let nameIcon = 'cart-outline';\r\n\r\n    if (this.selectedPayment) {\r\n      nameIcon = this.selectedPayment.icon;\r\n    }\r\n\r\n    return nameIcon;\r\n  }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  /**\r\n   * Apertura delle voci di scelta\r\n   * Mobile: ActionSheet\r\n   * Desktop: \r\n   */\r\n  onOpenChoose() {\r\n    let buttonsArray: any[]=[];\r\n    let singleButton: any;\r\n\r\n    if (this.arPayment) {\r\n      if (this.arPayment.length !== 0) {\r\n\r\n        //Popolo i Bottoni\r\n        for (const iterator of this.arPayment) {\r\n          singleButton = {\r\n            text: iterator.label,\r\n            icon: iterator.icon,\r\n            handler: ()=>{\r\n              //Cambio metodo pagamento\r\n              this.onChangePaymentSelection(iterator);\r\n            }\r\n          }\r\n    \r\n          buttonsArray.push(singleButton);\r\n        }\r\n    \r\n        //Pulsante Annulla\r\n        singleButton = {\r\n          text:'Annulla',\r\n          icon:'arrow-undo-sharp',\r\n          role: 'cancel'\r\n        }\r\n        buttonsArray.push(singleButton);\r\n    \r\n        this.actionSheetController.create({\r\n          header: 'Come desideri pagare ?',\r\n          buttons: buttonsArray\r\n        })\r\n        .then(elAction => {\r\n          elAction.present();\r\n        });\r\n\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n\r\n   \r\n\r\n\r\n  /**\r\n   * Cambio di selezione nel pagamento\r\n   * @param value Nuova selezione\r\n   */\r\n  onChangePaymentSelection(value:AreaPaymentSetting) {\r\n    //Memorizzo il pagamento\r\n    this.selectedPayment = value;\r\n\r\n    //Invio l'informazione al padre\r\n    this.onPaymentChoosed.emit(value);\r\n  }\r\n\r\n}\r\n","<!-- NELLA PAGINA DOVE VIENE INNESTATO IL COMPONENTE CIRCONDARLO DENTRO A ION-LIST-->\r\n  <ion-item *ngIf=\"!arPayment.length\" lines=\"none\">\r\n    <ion-label>Pagamento non supportato</ion-label>\r\n  </ion-item>\r\n\r\n  <ion-item \r\n          button\r\n          *ngIf=\"arPayment.length\" \r\n          lines=\"none\" \r\n          [detail]=\"true\"\r\n          (click)=\"onOpenChoose()\">\r\n      <ion-icon slot=\"start\" [name]=\"itemIcon\"></ion-icon>\r\n      <ion-label *ngIf=\"selectedPayment\">{{selectedPayment?.label}}</ion-label>\r\n      <ion-label *ngIf=\"!selectedPayment\">Scegli metodo di pagamento</ion-label>\r\n  </ion-item>\r\n\r\n\r\n\r\n\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Settimana } from 'src/app/models/settimana.model';\n\n@Component({\n  selector: 'app-settimana-block',\n  templateUrl: './settimana-block.component.html',\n  styleUrls: ['./settimana-block.component.scss'],\n})\nexport class SettimanaBlockComponent implements OnInit {\n\n  constructor() { \n\n    \n  }\n\n  @Input() listDays: Settimana[] = [];\n  @Input() colorSelected: string = 'primary';\n  @Input() colorNotSelected: string = 'secondary';\n  @Input() clickable: boolean = false;\n  @Input() isDesktop: boolean = false;\n  @Output() clickElement: EventEmitter<Settimana> = new EventEmitter();\n\n\n  ngOnInit() {}\n\n  /**\n   * Ritorna il colore da applicare\n   * @param myDay Giornata\n   */\n  getColorDay(myDay: Settimana): string {\n    let myColor = this.colorNotSelected;\n\n    if (myDay && myDay.selected)  {\n      myColor = this.colorSelected;\n    }\n\n    return myColor;\n  }\n\n  /**\n   * Ritorna il Fill da applicare\n   * @param myDay Giornata\n   */\n  getFillDay(myDay: Settimana): string {\n    let myColor = 'outline';\n\n    if (myDay && myDay.selected)  {\n      myColor = 'solid';\n    }\n\n    return myColor;\n  }  \n\n  /**\n   * Ritorna la Label da applicare\n   * @param myDay Giornata\n   */\n   getLabelDay(myDay: Settimana): string {\n\n    let myLabel = '';\n\n    if (this.isDesktop)  {\n      myLabel = myDay.label.toUpperCase();\n    }\n    else {\n      myLabel = myDay.xsLabel.toUpperCase();\n    }\n\n    return myLabel;\n  }   \n\n\n  /**\n   * Evento di click sul button\n   * @param giorno Giorno cliccato\n   */\n  onClickDay(giorno:Settimana) {\n    if (this.clickable) {\n      //Emetto l'evento con il giorno\n      this.clickElement.emit(giorno);\n    }\n  }\n  \n\n}\n","<table \n  class=\"ion-margin-vertical\"\n  style=\"width: 100%\">\n  <tr>\n    <td class=\"ion-text-center\" *ngFor=\"let giorno of listDays\">\n      <ion-button\n        (onClick)=\"onClickDay(giorno)\"\n        [color]=\"getColorDay(giorno)\"\n        size=\"small\"\n        [fill]=\"getFillDay(giorno)\">\n        <span>\n          {{ getLabelDay(giorno) }}\n        </span>\n\n      </ion-button>\n    </td>\n  </tr>\n</table>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ButtonCard } from 'src/app/models/buttoncard.model';\r\n\r\n@Component({\r\n  selector: 'app-button-card',\r\n  templateUrl: './button-card.component.html',\r\n  styleUrls: ['./button-card.component.scss'],\r\n})\r\nexport class ButtonCardComponent implements OnInit {\r\n\r\n  @Input() myButtonCard: ButtonCard = new ButtonCard();\r\n  @Input() smallVersion = false; //Small Version usa H2 e P invece di H1 e H3\r\n  @Input() homeCustodeVersion;\r\n  @Input() disabled = false;\r\n  @Output() clickElement = new EventEmitter<ButtonCard>();\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n  /**\r\n   * Click sull'elemento\r\n   * @param objButtonCard Card scelta\r\n   */\r\n  onClickElement(objButtonCard: ButtonCard) {\r\n    if (objButtonCard) {\r\n      this.clickElement.emit(objButtonCard);\r\n    }\r\n  }\r\n\r\n}\r\n","<ion-card [ngClass]=\"{'card-small-version': smallVersion, 'card-home-custode': homeCustodeVersion}\">\r\n  <ion-item \r\n      [button]=\"myButtonCard.iconLink\" \r\n      (click)=\"onClickElement(myButtonCard)\" \r\n      lines=\"none\"\r\n      [detail] = \"myButtonCard.iconLink\"\r\n      [disabled] = \"myButtonCard.disabled\"\r\n      >\r\n\r\n    <ion-icon \r\n        [slot]=\"myButtonCard.sloticon\" \r\n        [name]=\"myButtonCard.nameicon\" \r\n        [color]=\"myButtonCard.color\"></ion-icon>\r\n\r\n    <ion-label *ngIf=\"!smallVersion\">\r\n      <h2 class=\"ion-text-wrap\">\r\n        {{ myButtonCard.title }}\r\n      </h2>\r\n      <h3 class=\"ion-text-wrap\">\r\n        {{ myButtonCard.subtitle }}\r\n      </h3>\r\n    </ion-label>\r\n\r\n    <ion-label *ngIf=\"smallVersion\">\r\n      <h3 class=\"ion-text-wrap\">\r\n        {{ myButtonCard.title }}\r\n      </h3>\r\n      <p class=\"ion-text-wrap\">\r\n        {{ myButtonCard.subtitle }}\r\n      </p>\r\n    </ion-label>\r\n\r\n  </ion-item>\r\n</ion-card>","import { MyDateTime } from '../library/models/mydatetime.model';\r\nimport { OccupazioneCampi } from './occupazionecampi.model';\r\nimport { PianificazioneCorso } from './pianificazionecorso.model';\r\nimport { SettoreAttivita } from './valuelist.model';\r\n\r\nexport class ItemCalendario{\r\n    oraInizio: Date;\r\n    oraFine: Date;\r\n    riga1Text: string;\r\n    riga2Text: string;\r\n    riga3Text: string;\r\n    badgeText: string;\r\n    badgeColor: string;\r\n\r\n    badgeIcon: string;\r\n\r\n    static getParamsPianificazioneCorso(pianificazioneElem: PianificazioneCorso): ItemCalendario{\r\n\r\n        let paramsItem: ItemCalendario;\r\n\r\n\r\n        paramsItem = new ItemCalendario();\r\n        paramsItem.oraInizio = pianificazioneElem.DATAORAINIZIO;\r\n        paramsItem.oraFine = pianificazioneElem.DATAORAFINE;\r\n        paramsItem.riga1Text = pianificazioneElem['_DENOMINAZIONE_Corso'];\r\n        paramsItem.riga2Text = pianificazioneElem['_DENOMINAZIONE_Location'];\r\n        paramsItem.riga3Text = pianificazioneElem['_DENOMINAZIONE_Campo'];\r\n\r\n        \r\n        paramsItem.badgeText = pianificazioneElem.getDocPropertyInRepository(['IDCORSO','IDLIVELLOENTRATA'],'DENOMINAZIONE');\r\n        \r\n        \r\n        paramsItem.badgeColor = \"primary\";\r\n        return paramsItem;\r\n    }\r\n\r\n    //mi dice se l'impegno a cui si riferisce l'item è già finito\r\n    get isPast(): boolean{\r\n        let now = new Date;\r\n        if (this.oraFine < now){\r\n        return true;\r\n        }\r\n        else{\r\n        return false\r\n        }\r\n    }\r\n\r\n\r\n    static getParamsOccupazioneCampo(occupazioneElem: OccupazioneCampi): ItemCalendario{\r\n        let paramsItem: ItemCalendario = new ItemCalendario();\r\n        paramsItem.oraInizio = occupazioneElem.DATAORAINIZIO;\r\n        paramsItem.oraFine = occupazioneElem.DATAORAFINE;\r\n        if(occupazioneElem.TIPO == SettoreAttivita.settoreCorso){\r\n            paramsItem.riga1Text = occupazioneElem.getDocPropertyInRepository(['IDREF'], 'DENOMINAZIONE');\r\n            paramsItem.badgeIcon = \"school-outline\";\r\n        }\r\n        else if(occupazioneElem.TIPO == SettoreAttivita.settorePrenotazione){\r\n            paramsItem.riga1Text = occupazioneElem.getDocPropertyInRepository(['IDREF'], 'NOMINATIVO');\r\n            paramsItem.badgeIcon = \"calendar-outline\"\r\n        }\r\n        paramsItem.riga2Text = `${occupazioneElem['_DENOMINAZIONE_Location']} - ${occupazioneElem['_DENOMINAZIONE_Campo']}`;\r\n        paramsItem.riga3Text = MyDateTime.formatDate(occupazioneElem.DATAINIZIO, 'DD/MM/YYYY');\r\n\r\n        paramsItem.badgeColor = \"primary\";\r\n\r\n        return paramsItem;\r\n    }\r\n\r\n    \r\n}","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { PickerController } from '@ionic/angular';\r\nimport { PickerOptions, PickerButton, PickerColumn, PickerColumnOption } from '@ionic/core';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-player-number',\r\n  templateUrl: './player-number.component.html',\r\n  styleUrls: ['./player-number.component.scss'],\r\n})\r\nexport class PlayerNumberComponent implements OnInit {\r\n  \r\n  @Input() numPlayer: number;\r\n  maxPlayerIcon: number= 6;\r\n  maxPlayers:number=30;\r\n\r\n\r\n  @Output() changeNumPlayer= new EventEmitter<Number>();\r\n   \r\n  icone : number[] = [];\r\n  \r\n  constructor(private pickerController: PickerController) {\r\n  }\r\n  \r\n  ngOnInit() {\r\n    this.initIcone();\r\n    \r\n  }\r\n  \r\n  initIcone(){\r\n    // 6 FACCE e 1 PLUS\r\n    for(let index=0; index<=5; index++)\r\n    {\r\n      this.icone[index] = index+1;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Invia alla pagina il nuovo numero player\r\n   * @param nPlayer Numero Player\r\n   */\r\n  onClickPlayer(nPlayer, event:any)\r\n  {\r\n    this.changeNumPlayer.emit(nPlayer);\r\n  }\r\n\r\n  /**\r\n   * invia alla pagina la richiesta di aggiunta giocatori\r\n   */\r\n  onClickPlusPlayer()\r\n  {\r\n    let _this=this;\r\n    //array di bottoni del picker (per ora vuoto)\r\n    let pickerButtons:PickerButton[]=[\r\n      {\r\n        text: 'Conferma',\r\n        handler: (nPlayers)=>{\r\n        _this.changeNumPlayer.emit(nPlayers.column.value);\r\n        }\r\n      },\r\n      {\r\n        text: 'Annulla',\r\n        role: 'cancel'\r\n      }\r\n    ];\r\n    \r\n    //Valori della colonna \r\n    let pickerValues: PickerColumnOption[]= [];\r\n    for (let i=(this.maxPlayerIcon+1);i<this.maxPlayers;i++)\r\n    {\r\n      let pickerValue : PickerColumnOption ={\r\n        text: String(i),\r\n        value: i\r\n      }\r\n      pickerValues.push(pickerValue);\r\n    }\r\n\r\n    //Intestazione della colonna\r\n    let pickerColumns: PickerColumn[]=[{\r\n      name: 'column',\r\n      options: pickerValues\r\n    }]\r\n\r\n    //caratteristiche del picker\r\n    let pickerOptions: PickerOptions={\r\n      columns: pickerColumns,\r\n      buttons: pickerButtons,\r\n      keyboardClose: true\r\n    }\r\n\r\n    this.pickerController\r\n            .create(pickerOptions)\r\n            .then(picker=>{\r\n              picker.present()\r\n            })\r\n\r\n\r\n\r\n  }\r\n\r\n  \r\n  \r\n}\r\n\r\nexport enum typeIcon {\r\n  player=10,\r\n  add=20\r\n} ","<ion-card>\r\n  <ion-grid>\r\n    <ion-row class=\"ion-align-items-center\">\r\n      <ion-col size=\"3\"class=\"ion-text-center ion-no-padding\">\r\n          <ion-row>\r\n            <ion-col size=\"12\"  class=\"ion-no-padding\">\r\n              <ion-icon name=\"person-circle\" color=\"secondary\" class=\"player-indicator-icon\"></ion-icon>\r\n            </ion-col>\r\n          </ion-row>\r\n          <ion-row>\r\n            <ion-col size=\"12\" class=\"ion-no-padding\">\r\n              <ion-label>{{numPlayer}} {{numPlayer>1? 'Giocatori':'Giocatore'}}</ion-label>\r\n            </ion-col>\r\n          </ion-row>\r\n      </ion-col>\r\n      <ion-col size=\"7\" class=\"left-border ion-no-padding\">\r\n              <ion-grid class=\"ion-no-padding\">\r\n                <ion-row>\r\n                  <ion-col size=\"4\" *ngFor=\"let icona of icone\" class=\"ion-no-padding\">\r\n                    <ion-button class=\"player-buttons\" [color]=\"icona<=numPlayer? 'secondary' : 'light'\" shape=\"round\" (click)=\"onClickPlayer(icona, $event)\">\r\n                      <ion-icon  class=\"player-icons\" name=\"person\" slot=\"icon-only\"></ion-icon>\r\n                    </ion-button>\r\n                    <!-- <ion-icon button=\"true\" class=\"players\" name=\"person-circle\" [color]=\"icona<=numPlayer? 'primary' : 'light'\" (click)=\"onClickPlayer(icona, $event)\"></ion-icon> -->\r\n                  </ion-col>\r\n                </ion-row>\r\n              </ion-grid>\r\n      </ion-col>\r\n      <ion-col size=\"2\" class=\"ion-no-padding\">\r\n        <ion-button class=\"add-buttons\" [color]=\"numPlayer>maxPlayerIcon? 'secondary' : 'light'\" shape=\"round\" (click)=\"onClickPlusPlayer()\">\r\n          <ion-icon  class=\"add-icons\" name=\"add\"></ion-icon>\r\n        </ion-button>\r\n        <!-- <ion-icon name=\"add-circle\" class=\"add\" button [color]=\"numPlayer>maxPlayerIcon? 'primary' : 'light'\" (click)=\"onClickPlusPlayer()\"></ion-icon> -->\r\n      </ion-col>\r\n      \r\n    </ion-row>\r\n  </ion-grid>\r\n\r\n</ion-card>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n//TODO: componente dichiarato momentaneamente nell'home.module per evitare errori, da rimuovere\r\n\r\n@Component({\r\n  selector: 'app-circular',\r\n  templateUrl: './circular.component.html',\r\n  styleUrls: ['./circular.component.scss'],\r\n})\r\n\r\nexport class CircularComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  open = false;\r\n\r\n  ngOnInit() {}\r\n\r\n  switchMenu() {\r\n    this.open = !this.open;\r\n  }\r\n}\r\n","<button \r\n  class=\"cn-button\" \r\n  id=\"cn-button\"\r\n  (click)=\"switchMenu()\">\r\n  <div style=\"display: flex; align-items: center;\">\r\n    <span>Accedi</span>\r\n  </div>\r\n</button>\r\n\r\n<!-- <div class=\"cn-wrapper\" id=\"cn-wrapper\" [ngClass]=\"{'opened-nav': open}\">\r\n   <ul>\r\n       <li>\r\n         <a href=\"#\">\r\n           <ion-icon name=\"image\"></ion-icon>\r\n         </a>\r\n        </li>\r\n\r\n        <li>\r\n          <a href=\"#\">\r\n            <ion-icon name=\"image\"></ion-icon>\r\n          </a>\r\n        </li>\r\n\r\n        <li>\r\n          <a href=\"#\">\r\n            <ion-icon name=\"image\"></ion-icon>\r\n          </a>\r\n        </li>\r\n\r\n        <li>\r\n          <a href=\"#\">\r\n            <ion-icon name=\"image\"></ion-icon>\r\n          </a>\r\n        </li>\r\n\r\n        <li>\r\n          <a href=\"#\">\r\n            <ion-icon name=\"image\"></ion-icon>\r\n          </a>\r\n        </li>\r\n   </ul>\r\n</div>\r\n<div id=\"cn-overlay\" class=\"cn-overlay\"></div> -->\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-advertising',\r\n  templateUrl: './advertising.component.html',\r\n  styleUrls: ['./advertising.component.scss'],\r\n})\r\nexport class AdvertisingComponent implements OnInit {\r\n\r\n//TODO: componente dichiarato momentaneamente nell'home.module per evitare errori, da rimuovere\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","<p>\r\n  advertising works!\r\n</p>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Location } from 'src/app/models/location.model';\r\nimport { StartConfiguration } from 'src/app/models/start-configuration.model';\r\nimport { TipoSocieta } from 'src/app/models/valuelist.model';\r\n\r\n@Component({\r\n  selector: 'app-centri',\r\n  templateUrl: './centri.component.html',\r\n  styleUrls: ['./centri.component.scss'],\r\n})\r\nexport class CentriComponent implements OnInit {\r\n\r\n  @Input() location: Location = new Location();\r\n  @Output() clickPrenota = new EventEmitter<Location>();\r\n  @Output() clickLocation = new EventEmitter<Location>();\r\n  @Input() myStartConfig: StartConfiguration = new StartConfiguration();\r\n\r\n  constructor() {\r\n    \r\n    \r\n   }\r\n\r\n  ngOnInit() {}\r\n\r\n  onClickFavorite()\r\n  {\r\n    this.location.FAVORITE=!this.location.FAVORITE;\r\n  }\r\n\r\n  // Lancio l'evento di Click di Prenotazione\r\n  onClickPrenota() {\r\n    this.clickPrenota.emit(this.location);\r\n  }\r\n\r\n  /**\r\n   * Lancio l'evento di Click per la scheda Location\r\n   */\r\n  onClickLocation(event:any) {\r\n    this.clickLocation.emit(this.location);\r\n  }\r\n\r\n  /**\r\n   * Ritorna il testo dell'indirizzo, in caso non fosse presente \r\n   * ritorna l'etichetta del tipo di società\r\n   */\r\n  getTextIndirizzo() {\r\n    let testo = 'Centro'\r\n    let setStandard = false;\r\n\r\n    //Imposto la frase standard\r\n    setStandard = true;\r\n\r\n    if (this.location && this.location.INDIRIZZO) {\r\n      if (this.location.INDIRIZZO.length !== 0) {\r\n        setStandard = false;\r\n        testo = this.location.INDIRIZZO;  \r\n      }  \r\n    }\r\n\r\n\r\n    if (setStandard) {\r\n      if (this.myStartConfig && this.myStartConfig.gruppo) {\r\n\r\n        if (this.myStartConfig.gruppo) {\r\n  \r\n          switch (this.myStartConfig.gruppo.TIPOGRUPPO) {\r\n            case TipoSocieta.sportiva:\r\n              testo = 'Centro Sportivo';\r\n              break;\r\n  \r\n            case TipoSocieta.formazione:\r\n                testo = 'Centro di Formazione';\r\n                break;\r\n          \r\n            default:\r\n              break;\r\n          }\r\n  \r\n        }\r\n      }\r\n    }\r\n\r\n    return testo;\r\n  }\r\n\r\n  getUrlCoverImage() {\r\n    let tipoSocieta: TipoSocieta;\r\n    let urlImage = '';\r\n    if (this.myStartConfig && this.myStartConfig.gruppo) {\r\n      tipoSocieta = this.myStartConfig.gruppo.TIPOGRUPPO;\r\n    }\r\n\r\n    urlImage = this.location.getUrlImage(tipoSocieta);\r\n\r\n    return urlImage;\r\n  }\r\n\r\n\r\n}\r\n","<ion-card \r\n      mode=\"ios\" \r\n      button=\"true\"\r\n      (click)=\"onClickLocation($event); $event.stopPropagation();\">\r\n\r\n  <img [src]=\"getUrlCoverImage()\">\r\n\r\n  <ion-fab \r\n    horizontal=\"start\" \r\n    vertical=\"top\"\r\n    *ngIf=\"location.ENABLEPRENOTAZIONI\">\r\n    <ion-button \r\n        color=\"danger\" \r\n        (click)=\"onClickPrenota(); $event.stopPropagation();\">\r\n      <ion-icon \r\n          slot=\"start\" \r\n          name=\"calendar-outline\">\r\n      </ion-icon>\r\n        PRENOTA\r\n    </ion-button>\r\n  </ion-fab>\r\n\r\n\r\n  <ion-card-header >\r\n    <ion-card-title>\r\n      <h2>\r\n        {{location.DENOMINAZIONE}}\r\n      </h2>\r\n    </ion-card-title>\r\n\r\n    <ion-card-subtitle>\r\n      <div>\r\n        <span>{{ getTextIndirizzo() }}</span>\r\n      </div>\r\n    </ion-card-subtitle>\r\n  </ion-card-header>\r\n</ion-card>\r\n\r\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { IonSlides } from '@ionic/angular';\r\nimport { Campo } from 'src/app/models/campo.model';\r\nimport { Location } from 'src/app/models/location.model';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-campi-scroll',\r\n  templateUrl: './campi-scroll.component.html',\r\n  styleUrls: ['./campi-scroll.component.scss'],\r\n})\r\nexport class CampiScrollComponent implements OnInit {\r\n\r\n  @Input() selectedCampo: Campo;\r\n  @Output() campoChanged= new EventEmitter<Campo>();\r\n  @Input() campiList:Campo[];\r\n  @Input() selectedLocation: Location;\r\n  @Input() canChoose: boolean; //Indica se è possibile modificare la scelta con i pulsanti\r\n  @ViewChild('sliderCampi')sliderCampi: IonSlides;\r\n\r\n  styleInfoMessage: number = 2; //Stile del messaggio visualizzato\r\n  \r\n  sliderOpts1={\r\n    slidesPerView: 1,\r\n    spaceBetween: 0,\r\n    initialSlide: 0,\r\n  }\r\n\r\n  sliderOpts2={\r\n    slidesPerView: 2,\r\n    spaceBetween: 0,\r\n    initialSlide: 0,\r\n  }\r\n  \r\n  sliderOpts3={\r\n    slidesPerView: 2.5,\r\n    spaceBetween: 0,\r\n    initialSlide: 0, //Dovrei farla variabile\r\n    // Responsive breakpoints   \r\n  //  breakpoints: {  \r\n   \r\n  //     // when window width is <= 320px     \r\n  //     320: {       \r\n  //        slidesPerView: 2.5,\r\n  //        spaceBetween: 1     \r\n  //     },     \r\n  //     // when window width is <= 480px     \r\n  //     480: {       \r\n  //        slidesPerView: 2.5,       \r\n  //        spaceBetween: 6     \r\n  //     },   \r\n  \r\n  //     // when window width is <= 640px     \r\n  //     640: {       \r\n  //        slidesPerView: 2.5,       \r\n  //        spaceBetween: 1     \r\n  //     },\r\n\r\n  //     1024: {\r\n  //       slidesPerView: 2.5,       \r\n  //       spaceBetween: 1  \r\n  //     }\r\n\r\n\r\n  \r\n  //  } \r\n  }\r\n\r\n  sliderOpts4={\r\n    slidesPerView: 3.5,\r\n    spaceBetween: 0,\r\n    initialSlide: 0\r\n  }\r\n  \r\n  constructor() {\r\n  }\r\n\r\n\r\n  /**\r\n   * A seconda del numero di campi presenti, ritorna le opzioni da impostare\r\n   * @returns \r\n   */\r\n  getSliderOptions():any {\r\n    let slidOpt: any;\r\n    if (this.campiList.length == 1) {\r\n      slidOpt = this.sliderOpts1;\r\n    }\r\n    else if (this.campiList.length == 2) {\r\n      slidOpt = this.sliderOpts2;\r\n    }\r\n    else if (this.campiList.length == 3) {\r\n      slidOpt = this.sliderOpts3;\r\n    }\r\n    else {\r\n      slidOpt = this.sliderOpts3;\r\n    }\r\n\r\n    return slidOpt;\r\n  }\r\n\r\n    /**\r\n   * Si posiziona sulla Slide richiesta\r\n   * @param indexSlideZeroBased Indice della Slide\r\n   */\r\n     goToSlide(indexSlideZeroBased: number) {\r\n      if (this.sliderCampi) {\r\n        this.sliderCampi.slideTo(indexSlideZeroBased);\r\n      }\r\n    }\r\n  \r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  /**\r\n   * Scelta di un nuovo campo inviata al chiamante\r\n   * @param newCampo \r\n   */\r\n  onChangeCampo(newCampo: Campo): void\r\n  {\r\n    let indexCampo = this.getIndexCampo(newCampo);\r\n    \r\n    //Posizionamento della Slide sul bottone premuto\r\n    if (indexCampo != -1) {\r\n      \r\n      this.goToSlide(indexCampo);\r\n    }\r\n    //Emissione evento di cambio campo\r\n    this.campoChanged.emit(newCampo);\r\n  }\r\n\r\n  /**\r\n   * Ricerca un campo nell'Array e ne torna l'indice\r\n   * @param myCampo Campo da cercare\r\n   */\r\n  getIndexCampo(myCampo: Campo):number {\r\n    let myPos = -1;\r\n\r\n    if (myCampo) {\r\n      myPos = this.campiList.findIndex(el => {\r\n        return el.ID == myCampo.ID\r\n      });\r\n    }\r\n\r\n    return myPos;\r\n  }\r\n\r\n  /**\r\n   * Ritorna il colore da applicare a seconda del campo selezionato\r\n   * @param myCampo Campo da analizzare\r\n   * @returns Colore da applicare al bottone/card\r\n   */\r\n  getColor(myCampo: Campo) {\r\n    let myColor = 'primary';\r\n    \r\n    if (this.selectedCampo && myCampo) {\r\n      if (this.selectedCampo.ID == myCampo.ID) {\r\n        //myColor = 'danger';\r\n        myColor = 'tertiary';\r\n      }\r\n    }\r\n\r\n    return myColor;\r\n  }\r\n\r\n  /**\r\n   * Ritorna il valore di Fill da applicare a seconda del campo selezionato\r\n   * @param myCampo Campo da analizzare\r\n   * @returns Fill da applicare al bottone/card\r\n   */\r\n   getFill(myCampo: Campo) {\r\n    let myFill = 'outline';\r\n    if (this.selectedCampo && myCampo) {\r\n      if (this.selectedCampo.ID == myCampo.ID) {\r\n        myFill = 'solid';\r\n      }\r\n    }\r\n\r\n    return myFill;\r\n  }\r\n\r\n\r\n  /**\r\n   * Ritorna se il campo è selezionato oppure no\r\n   * @param myCampo Campo da controllare\r\n   * @returns TRUE/FALSE\r\n   */\r\n  isSelected(myCampo: Campo) {\r\n    let isSel = false;\r\n    \r\n    if (this.selectedCampo && myCampo) {\r\n      if (this.selectedCampo.ID == myCampo.ID) {\r\n        isSel = true;\r\n      }\r\n    }\r\n\r\n    return isSel;\r\n  }\r\n\r\n\r\n  /**\r\n   * Cambia la modalità del messaggio informativo\r\n   */\r\n  onChangeInfoStyle() {\r\n    if (this.styleInfoMessage == 1) {\r\n      this.styleInfoMessage = 2;\r\n    }\r\n    else {\r\n      this.styleInfoMessage = 1;\r\n    }\r\n  }\r\n}\r\n","<div class=\"slideCampi\">\r\n  <ion-slides \r\n      *ngIf=\"campiList.length!=0\" \r\n      [options]=\"getSliderOptions()\" \r\n      class=\"ion-text-center\"\r\n      #sliderCampi>\r\n    <ion-slide *ngFor=\"let campo of campiList\" >\r\n\r\n      <ion-button \r\n        expand = \"block\"\r\n        [fill] = \"getFill(campo)\"\r\n        size = \"large\"\r\n        shape = \"round\"\r\n        mode = \"ios\"\r\n        [color]=\"getColor(campo)\" \r\n        (click)=\"onChangeCampo(campo)\"\r\n        [disabled]=\"!canChoose\">\r\n        <ion-icon \r\n              slot = \"start\"\r\n              [name] = \"isSelected(campo)?'location-outline':'locate-outline'\" \r\n              >\r\n        </ion-icon>\r\n\r\n        <ion-label class=\"ion-text-wrap\">\r\n          <p>{{campo.DENOMINAZIONE}}</p>\r\n        </ion-label>\r\n\r\n      </ion-button>\r\n\r\n    </ion-slide>\r\n  </ion-slides>\r\n</div>\r\n\r\n<div *ngIf=\"selectedCampo && selectedLocation\">\r\n  <ion-list class=\"list-nopadding\">\r\n    <ion-item \r\n      lines=\"none\"\r\n      color=\"tertiary\"\r\n      type=\"header\"\r\n      (click)=\"onChangeInfoStyle()\">\r\n      \r\n      <ion-icon slot=\"start\" name=\"information-circle-outline\" ></ion-icon>\r\n      <ion-label class=\"ion-text-wrap ion-padding-start\" *ngIf=\"styleInfoMessage==1\">\r\n        <p>\r\n          <ion-text>Stai visualizzando le disponibilità di <strong>{{selectedCampo?.DENOMINAZIONE}}</strong> presso <strong>{{selectedLocation?.DENOMINAZIONE}}.</strong></ion-text>\r\n          <br/><ion-text style=\"font-size: small;\">&nbsp;(in caso di slot occupati ricercare su altre giornate/struttura)</ion-text>\r\n        </p>\r\n      </ion-label>   \r\n\r\n\r\n      <ion-label class=\"ion-text-wrap ion-padding-start\" *ngIf=\"styleInfoMessage==2\">\r\n        <p>\r\n          <ion-text><strong>{{selectedCampo?.DENOMINAZIONE}}</strong> presso <strong>{{selectedLocation?.DENOMINAZIONE}}.</strong></ion-text>\r\n        </p>\r\n      </ion-label>         \r\n  </ion-item>\r\n\r\n\r\n  </ion-list>\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n","import { __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { IonicNativePlugin, cordova } from '@ionic-native/core';\nimport * as ɵngcc0 from '@angular/core';\nvar Chooser = /** @class */ (function (_super) {\n    __extends(Chooser, _super);\n    function Chooser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Chooser.prototype.getFile = function (accept) { return cordova(this, \"getFile\", {}, arguments); };\n    Chooser.prototype.getFileMetadata = function (accept) { return cordova(this, \"getFileMetadata\", {}, arguments); };\n    Chooser.pluginName = \"Chooser\";\n    Chooser.plugin = \"cordova-plugin-chooser\";\n    Chooser.pluginRef = \"chooser\";\n    Chooser.repo = \"https://github.com/cyph/cordova-plugin-chooser\";\n    Chooser.platforms = [\"Android\", \"iOS\"];\nChooser.ɵfac = function Chooser_Factory(t) { return ɵChooser_BaseFactory(t || Chooser); };\nChooser.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Chooser, factory: function (t) { return Chooser.ɵfac(t); } });\nvar ɵChooser_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(Chooser);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Chooser, [{\n        type: Injectable\n    }], null, null); })();\n    return Chooser;\n}(IonicNativePlugin));\nexport { Chooser };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9AaW9uaWMtbmF0aXZlL3BsdWdpbnMvY2hvb3Nlci9uZ3gvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyw4QkFBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7QUFDeEU7SUFxRDZCLDJCQUFpQjs7OztJQVE1Qyx5QkFBTyxhQUFDLE1BQWU7SUFXdkIsaUNBQWUsYUFBQyxNQUFlOzs7OzsyQ0FJME07MkNBeEIxTyxVQUFVOzs7OzswQkFDTDtrQkF2RE47RUF1RDZCLGlCQUFpQjtTQUFqQyxPQUFPIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ2hvb3NlclJlc3VsdCB7XG4gIGRhdGE/OiBVaW50OEFycmF5O1xuICBkYXRhVVJJPzogc3RyaW5nO1xuICBtZWRpYVR5cGU6IHN0cmluZztcbiAgbmFtZTogc3RyaW5nO1xuICB1cmk6IHN0cmluZztcbn1cblxuLyoqXG4gKiBAbmFtZSBDaG9vc2VyXG4gKiBAZGVzY3JpcHRpb25cbiAqIEZpbGUgY2hvb3NlciBwbHVnaW4gZm9yIENvcmRvdmEuXG4gKlxuICogVGhlIGZvbGxvd2luZyBtdXN0IGJlIGFkZGVkIHRvIGNvbmZpZy54bWwgdG8gcHJldmVudCBjcmFzaGluZyB3aGVuIHNlbGVjdGluZyBsYXJnZSBmaWxlcyBvbiBBbmRyb2lkOlxuICogYGBgeG1sXG4gKiA8cGxhdGZvcm0gbmFtZT1cImFuZHJvaWRcIj5cbiAqICA8ZWRpdC1jb25maWdcbiAqICAgIGZpbGU9XCJhcHAvc3JjL21haW4vQW5kcm9pZE1hbmlmZXN0LnhtbFwiXG4gKiAgICBtb2RlPVwibWVyZ2VcIlxuICogICAgdGFyZ2V0PVwiL21hbmlmZXN0L2FwcGxpY2F0aW9uXCI+XG4gKiAgICA8YXBwbGljYXRpb24gYW5kcm9pZDpsYXJnZUhlYXA9XCJ0cnVlXCIgLz5cbiAqICA8L2VkaXQtY29uZmlnPlxuICogPC9wbGF0Zm9ybT5cbiAqIGBgYFxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgQ2hvb3NlciB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY2hvb3Nlci9uZ3gnO1xuICpcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGNob29zZXI6IENob29zZXIpIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqXG4gKiB0aGlzLmNob29zZXIuZ2V0RmlsZSgpXG4gKiAgIC50aGVuKGZpbGUgPT4gY29uc29sZS5sb2coZmlsZSA/IGZpbGUubmFtZSA6ICdjYW5jZWxlZCcpKVxuICogICAuY2F0Y2goKGVycm9yOiBhbnkpID0+IGNvbnNvbGUuZXJyb3IoZXJyb3IpKTtcbiAqXG4gKiBgYGBcbiAqXG4gKiBAaW50ZXJmYWNlc1xuICogQ2hvb3NlclJlc3VsdFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0Nob29zZXInLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1jaG9vc2VyJyxcbiAgcGx1Z2luUmVmOiAnY2hvb3NlcicsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vY3lwaC9jb3Jkb3ZhLXBsdWdpbi1jaG9vc2VyJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ10sXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIENob29zZXIgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG4gIC8qKlxuICAgKiBEaXNwbGF5cyBuYXRpdmUgcHJvbXB0IGZvciB1c2VyIHRvIHNlbGVjdCBhIGZpbGUuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBbYWNjZXB0XSBPcHRpb25hbCBNSU1FIHR5cGUgZmlsdGVyIChlLmcuICdpbWFnZS9naWYsdmlkZW8vKicpLlxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFByb21pc2UgY29udGFpbmluZyBzZWxlY3RlZCBmaWxlJ3MgcmF3IGJpbmFyeSBkYXRhLFxuICAgKiBiYXNlNjQtZW5jb2RlZCBkYXRhOiBVUkksIE1JTUUgdHlwZSwgZGlzcGxheSBuYW1lLCBhbmQgb3JpZ2luYWwgVVJJLlxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBnZXRGaWxlKGFjY2VwdD86IHN0cmluZyk6IFByb21pc2U8Q2hvb3NlclJlc3VsdCB8IHVuZGVmaW5lZD4ge1xuICAgIHJldHVybjtcbiAgfVxuICAvKipcbiAgICogRGlzcGxheXMgbmF0aXZlIHByb21wdCBmb3IgdXNlciB0byBzZWxlY3QgYSBmaWxlLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gW2FjY2VwdF0gT3B0aW9uYWwgTUlNRSB0eXBlIGZpbHRlciAoZS5nLiAnaW1hZ2UvZ2lmLHZpZGVvLyonKS5cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gUHJvbWlzZSBjb250YWluaW5nIHNlbGVjdGVkIGZpbGUncyBNSU1FIHR5cGUsIGRpc3BsYXkgbmFtZSwgYW5kIG9yaWdpbmFsIFVSSS5cbiAgICogSWYgdXNlciBjYW5jZWxzLCBwcm9taXNlIHdpbGwgYmUgcmVzb2x2ZWQgYXMgdW5kZWZpbmVkLlxuICAgKiBJZiBlcnJvciBvY2N1cnMsIHByb21pc2Ugd2lsbCBiZSByZWplY3RlZC5cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZ2V0RmlsZU1ldGFkYXRhKGFjY2VwdD86IHN0cmluZyk6IFByb21pc2U8Q2hvb3NlclJlc3VsdCB8IHVuZGVmaW5lZD4ge1xuICAgIHJldHVybjtcbiAgfVxufVxuIl19","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Corso } from '../../../models/corso.model'\r\nimport { ValueList, TargetSesso, Sesso, TipoCorso } from 'src/app/models/valuelist.model';\r\nimport { StartService } from 'src/app/services/start.service'\r\nimport { Sport } from 'src/app/models/sport.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-card-course',\r\n  templateUrl: './card-course.component.html',\r\n  styleUrls: ['./card-course.component.scss'],\r\n})\r\nexport class CardCourseComponent implements OnInit {\r\n\r\n  constructor(private startService: StartService) { }\r\n\r\n  @Input() myCorso = new Corso();\r\n  //Se impostato a TRUE significa che nell'area sono abilitate le iscrizioni con l'app\r\n  //e quindi controllare se è possibile iscriversi con le date ed\r\n  //enfatizzare la scheda con un colore speciale\r\n  @Input() useIscrizioniColor = false;\r\n  @Output() clickDetail = new EventEmitter<Corso>();\r\n  @Output() clickIscrizione = new EventEmitter<Corso>();\r\n  \r\n  iconColor = 'primary';\r\n\r\n  \r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n  /**\r\n   * Indica se mostrare il pulsante delle Iscrizioni\r\n   */\r\n   showIscrizioniButton():boolean {\r\n    let show = false;\r\n    if (this.myCorso) {\r\n      if (this.useIscrizioniColor && this.myCorso.flagIscrizioniAperte()) {\r\n        show = true;\r\n      }\r\n    }\r\n\r\n    return show;\r\n  }  \r\n\r\n  /**\r\n  * Emetto un evento per il pulsante di Iscrizione\r\n   */\r\n  onClickIscrizione() {\r\n    //Emetto l'evento per segnalare la richiesta di Iscrizione\r\n    this.clickIscrizione.emit(this.myCorso);\r\n  }\r\n\r\n  /**\r\n   * Torna l'eventuale classe speciale da applicare\r\n   */\r\n  getClassHeader(): string {\r\n    let myClass = '';\r\n    if (this.myCorso) {\r\n\r\n      if (this.useIscrizioniColor && this.myCorso.flagIscrizioniAperte()) {\r\n        myClass = 'special';\r\n      }\r\n    }\r\n    \r\n    return myClass;\r\n  }\r\n\r\n\r\n  /**\r\n   * Indica se mostrare o no il Bollino Prova\r\n   * @returns TRUE/FALSE\r\n   */\r\n  showFabProva():boolean {\r\n    let show:boolean = false; \r\n    if (this.myCorso && this.myCorso.TIPO == TipoCorso.prova) {\r\n      show = true;\r\n    }\r\n\r\n    return show;\r\n\r\n  }\r\n\r\n  getLabelTargetSesso() {\r\n    let toDecode = TargetSesso.maschileFemminile;\r\n    let label = '';\r\n    \r\n    if (this.myCorso.TARGETSESSO) {\r\n      toDecode = this.myCorso.TARGETSESSO;\r\n    }\r\n\r\n    label = ValueList.decode(TargetSesso, toDecode);\r\n\r\n    return label;\r\n  }\r\n\r\n\r\n  goToDetail() {\r\n    //Emetto l'evento per andare al dettaglio corso\r\n    this.clickDetail.emit(this.myCorso);\r\n  }\r\n\r\n  \r\n  /**\r\n   * Dato un oggetto corso, ritorna la stringa dell'icona corrispondente\r\n   * @param corso L'oggetto corso\r\n   */\r\n  getSportIcon (corso: Corso)\r\n  {\r\n    if (corso){\r\n      return this.startService.getSportIcon(corso.IDSPORT);\r\n    }\r\n  }\r\n}\r\n","<ion-card  \r\n  class=\"ion-no-margin ion-margin-horizontal\" \r\n  button (click)=\"goToDetail()\">\r\n\r\n\r\n  \r\n  <!-- SPORT E NOME CORSO-->\r\n  <ion-card-header [ngClass]=\"getClassHeader()\">\r\n    \r\n\r\n    <!-- FAB CON LA VOCE PROVA -->\r\n   <ion-fab \r\n        *ngIf=\"showFabProva()\"\r\n        vertical=\"top\" \r\n        horizontal=\"end\">\r\n     <ion-fab-button\r\n        color=\"danger\">Prova</ion-fab-button> \r\n   </ion-fab>\r\n\r\n\r\n\r\n    <ion-grid class=\"ion-no-padding\">\r\n      <ion-row class=\"ion-no-padding ion-align-items-center\">\r\n        <ion-col size=\"2\" class=\"ion-no-padding\">\r\n          <i class=\"icon-sport\"><span [innerHTML]=\"getSportIcon(myCorso)\" ></span> </i>\r\n        </ion-col>\r\n        <ion-col size=\"10\" class=\"ion-no-padding\">\r\n          <ion-card-subtitle>{{myCorso['_DENOMINAZIONE_Sport']}}</ion-card-subtitle>\r\n          <ion-card-title>{{myCorso.DENOMINAZIONE}}</ion-card-title>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </ion-card-header>\r\n\r\n  <!-- ORA INIZIO E DURATA-->\r\n  <ion-card-content class=\"ion-no-padding\">\r\n\r\n    <ion-grid>\r\n      <ion-row>\r\n        <ion-col size=\"6\" size-sm=\"6\">\r\n          <ion-button \r\n              size=\"small\" \r\n              color=\"primary\" \r\n              expand=\"block\" \r\n              fill=\"outline\"\r\n              >\r\n\r\n            <ion-icon name=\"time\" slot=\"start\"></ion-icon>\r\n            {{myCorso.ORAINIZIO | date:'HH:mm'}}\r\n          </ion-button>\r\n        </ion-col>\r\n\r\n        <ion-col size=\"6\" size-sm=\"6\">\r\n          <ion-button \r\n            size=\"small\" \r\n            color=\"primary\" \r\n            expand=\"block\" \r\n            fill=\"outline\"\r\n            >\r\n            <ion-icon name=\"infinite\" slot=\"start\"></ion-icon>\r\n            {{myCorso.ORELEZIONE}} {{myCorso.ORELEZIONE > 1 ?'Ore':'Ora'}}\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </ion-card-content>\r\n\r\n\r\n  <!-- BOX GIORNATE -->\r\n  <ion-card-content class=\"ion-no-padding\">\r\n    <div class=\"div-giornate ion-text-center\" >\r\n      <table style=\"width: 100%;\">\r\n        <tr>\r\n          <td *ngFor=\"let giorno of myCorso._SETTIMANA\">\r\n            <ion-button \r\n                color=\"secondary\"\r\n                size=\"small\" \r\n                [fill]=\"giorno.selected ?'solid':'outline'\">\r\n              {{giorno.xsLabel | uppercase}}\r\n            </ion-button>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n      <!-- NUMERO LEZIONI-->\r\n    <div \r\n        class=\"contentLezioni ion-margin-horizontal\" \r\n        \r\n        *ngIf=\"myCorso.NUMEROLEZIONI\">\r\n      <h6>\r\n        <em>{{myCorso.NUMEROLEZIONI}} {{myCorso.NUMEROLEZIONI > 1 ?'Incontri ':'Incontro '}}</em>\r\n      </h6>\r\n    </div>\r\n  </ion-card-content>\r\n\r\n  <!-- LISTA INFORMAZIONI LIVELLO, ETA, SESSO-->\r\n  <ion-item>\r\n    <ion-icon \r\n        name=\"stats-chart-outline\" \r\n        slot=\"start\" \r\n        [color]=\"iconColor\"></ion-icon>\r\n  <ion-label>{{myCorso['_DENOMINAZIONE_Livello'] ? myCorso['_DENOMINAZIONE_Livello']:'Tutti i Livelli'}}</ion-label>\r\n  </ion-item>\r\n\r\n  <ion-item>\r\n    <ion-icon \r\n        name=\"bookmark-outline\" \r\n        slot=\"start\" \r\n        [color]=\"iconColor\"></ion-icon>\r\n    <ion-label>{{myCorso.IDCATEGORIEETA?myCorso['_DESCTOOLTIP_CategoriaEta']:'Per tutte le età'}}</ion-label>\r\n  </ion-item>\r\n\r\n  <ion-item lines=\"none\">\r\n    <ion-icon \r\n      name=\"transgender-outline\" \r\n      slot=\"start\" \r\n      [color]=\"iconColor\"></ion-icon>\r\n    <ion-label>{{getLabelTargetSesso()}}</ion-label>\r\n  </ion-item>\r\n\r\n  <ion-footer>\r\n    <ion-row>\r\n      <ion-col \r\n          size=\"12\" \r\n          size-sm=\"12\">\r\n          <p class=\"footer\" *ngIf=\"myCorso.tempoCorso()=='next'\">Inizia il {{myCorso.DATAINIZIO|date:'dd/MM/yyyy'}}</p>\r\n          <p class=\"footer\" *ngIf=\"myCorso.tempoCorso()=='during'\">Termina il {{myCorso.DATAFINE|date:'dd/MM/yyyy'}}</p>\r\n          <p class=\"footer\" *ngIf=\"myCorso.tempoCorso()=='stop'\">Concluso il {{myCorso.DATAFINE|date:'dd/MM/yyyy'}}</p>\r\n      </ion-col>\r\n    </ion-row>\r\n\r\n  </ion-footer>\r\n  \r\n\r\n</ion-card>\r\n\r\n<ion-row *ngIf = \"showIscrizioniButton()\">\r\n  <ion-col\r\n    size=\"12\" \r\n    size-sm=\"12\">\r\n\r\n      <ion-button \r\n        color=\"success\" \r\n        fill=\"solid\" \r\n        expand=\"block\"\r\n        *ngIf = \"showIscrizioniButton()\"\r\n        (click)=\"onClickIscrizione()\">\r\n          Iscriviti adesso\r\n      </ion-button>\r\n\r\n  </ion-col>\r\n</ion-row>\r\n\r\n        \r\n\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { PrenotazionePianificazione } from 'src/app/models/prenotazionepianificazione.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-footbooked',\r\n  templateUrl: './footbooked.component.html',\r\n  styleUrls: ['./footbooked.component.scss'],\r\n})\r\nexport class FootbookedComponent implements OnInit {\r\n\r\n  /* Componente mostrato nella pagina di Booking per segnalare la prenotazione che l'utente sta effettuando*/\r\n\r\n\r\n  @Input() myPrenotaPianifica: PrenotazionePianificazione;\r\n  @Output() clickPrenota = new EventEmitter<PrenotazionePianificazione>();\r\n\r\n  constructor() { \r\n\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  /** Emette un evento di Click sul pulsante di prenotazione */\r\n  onClickPrenota() {\r\n    this.clickPrenota.emit(this.myPrenotaPianifica);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","\r\n  <ion-list color=\"tertiary\">\r\n    <ion-item lines=\"none\" detail=\"false\">\r\n      <ion-icon slot=\"start\" name=\"calendar\" color=\"tertiary\"></ion-icon>\r\n      <ion-label>\r\n        <h2>\r\n          {{ myPrenotaPianifica?.DATAORAINIZIO | date: \"EEE dd/MM/yyyy\" | titlecase }}\r\n        </h2>\r\n        <p>\r\n          dalle {{ myPrenotaPianifica?.DATAORAINIZIO | date : \"HH:mm\" }} alle {{ myPrenotaPianifica?.DATAORAFINE | date : \"HH:mm\" }}\r\n        </p>\r\n      </ion-label>\r\n      <ion-button \r\n        slot=\"end\" \r\n        color=\"tertiary\" \r\n        expand=\"block\"\r\n        size=\"default\"\r\n        (click)=\"onClickPrenota()\"\r\n        >Prenota</ion-button>\r\n    </ion-item>\r\n  </ion-list>\r\n\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Impegno } from 'src/app/models/impegno.model';\r\nimport { SettoreAttivita } from '../../../models/valuelist.model';\r\n\r\n@Component({\r\n  selector: 'app-impegni',\r\n  templateUrl: './impegni.component.html',\r\n  styleUrls: ['./impegni.component.scss'],\r\n})\r\nexport class ImpegniComponent implements OnInit {\r\n\r\n  @Input() impegno:Impegno=new Impegno;\r\n  iconName: string;\r\n  locationName: string;//da valorizzare\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    if (this.impegno.SETTORE===SettoreAttivita.settoreCorso)\r\n    {\r\n      this.iconName='school';\r\n    }\r\n    else if(this.impegno.SETTORE===SettoreAttivita.settorePrenotazione)\r\n    {\r\n      this.iconName='calendar';\r\n    }\r\n    else if(this.impegno.SETTORE===SettoreAttivita.settoreTorneo)\r\n    {\r\n      this.iconName='medal';\r\n    }\r\n  }\r\n}\r\n","<ion-card class=\"ActivityCard scroll-item\">\r\n  <ion-card-content class=\"ActivityLabel\">\r\n    <ion-item lines=\"none\">\r\n      <ion-button slot=\"start\" size=\"large\" color=\"primary\" fill=\"outline\">\r\n        <ion-icon [name]=\"iconName\" ></ion-icon>\r\n      </ion-button>\r\n      <ion-label>\r\n        <h2>{{ impegno.DATAORAINIZIO.getHours() }}:{{ impegno.DATAORAINIZIO.getMinutes() }}</h2>\r\n        <h3>{{ impegno.DATAORAINIZIO| date: 'EEEE'}}</h3>\r\n        <p>{{ locationName }}</p>\r\n      </ion-label>\r\n    </ion-item>\r\n  </ion-card-content>\r\n</ion-card>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\n\r\nimport { AdvertisingComponent } from './advertising/advertising.component'\r\nimport { ApertureComponent } from './aperture/aperture.component'\r\nimport { ButtonCardComponent } from './button-card/button-card.component'\r\nimport { CalendarscrollComponent } from './calendarscroll/calendarscroll.component'\r\nimport { CardCourseComponent } from './card-course/card-course.component'\r\nimport { CentriComponent } from './centri/centri.component'\r\nimport { CircularComponent } from './circular/circular.component'\r\nimport { FootbookedComponent } from './footbooked/footbooked.component'\r\nimport { HorTimelineComponent } from './hor-timeline/hor-timeline.component'\r\nimport { ImpegniComponent } from './impegni/impegni.component'\r\nimport { ItemCalendarioComponent } from './item-calendario/item-calendario.component'\r\nimport { NewsEventiComponent } from './news-eventi/news-eventi.component'\r\nimport { PaymentChooseComponent } from './payment-choose/payment-choose.component'\r\nimport { PlayerNumberComponent } from './player-number/player-number.component'\r\nimport { SlottimeComponent } from './slottime/slottime.component'\r\nimport { SportScrollComponent } from './sport-scroll/sport-scroll.component'\r\nimport { UploadComponent } from './upload/upload.component'\r\nimport { AlertInputPrezzoComponent } from './alert-input-prezzo/alert-input-prezzo.component';\r\nimport { CampiScrollComponent } from './campi-scroll/campi-scroll.component';\r\nimport { HideHeaderDirective } from '../directives/hide-header.directive';\r\nimport { PaymentModeComponent } from './payment-mode/payment-mode.component';\r\nimport { SettimanaBlockComponent } from './settimana-block/settimana-block.component';\r\nimport { LevelSetterComponent } from './level-setter/level-setter.component';\r\n\r\n/**\r\n * Questo modulo, come quello delle pipes, dichiara tutti i componenti e li esporta;\r\n * è possibile importarlo in altri moduli per utilizzare i componenti all'interno degli stessi\r\n */\r\n\r\n\r\n@NgModule({\r\n\r\n    //commonModule serve sempre per rendere visibile questo module all'esterno\r\n    imports: [\r\n        IonicModule,\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule\r\n    ],\r\n    declarations: [\r\n        AdvertisingComponent,\r\n        ApertureComponent,\r\n        ButtonCardComponent,\r\n        CalendarscrollComponent,\r\n        CardCourseComponent,\r\n        CentriComponent,\r\n        CircularComponent,\r\n        FootbookedComponent,\r\n        HorTimelineComponent,\r\n        ImpegniComponent,\r\n        ItemCalendarioComponent,\r\n        NewsEventiComponent,\r\n        PaymentChooseComponent,\r\n        PaymentModeComponent,\r\n        PlayerNumberComponent,\r\n        SlottimeComponent,\r\n        SportScrollComponent,\r\n        UploadComponent,\r\n        AlertInputPrezzoComponent,\r\n        CampiScrollComponent,\r\n        HideHeaderDirective,\r\n        SettimanaBlockComponent,\r\n        LevelSetterComponent\r\n        \r\n    ],\r\n    exports: [\r\n        AdvertisingComponent,\r\n        ApertureComponent,\r\n        ButtonCardComponent,\r\n        CalendarscrollComponent,\r\n        CardCourseComponent,\r\n        CentriComponent,\r\n        CircularComponent,\r\n        FootbookedComponent,\r\n        HorTimelineComponent,\r\n        ImpegniComponent,\r\n        ItemCalendarioComponent,\r\n        NewsEventiComponent,\r\n        PaymentChooseComponent,\r\n        PaymentModeComponent,\r\n        PlayerNumberComponent,\r\n        SlottimeComponent,\r\n        SportScrollComponent,\r\n        AlertInputPrezzoComponent,\r\n        UploadComponent,\r\n        CampiScrollComponent,\r\n        HideHeaderDirective,\r\n        SettimanaBlockComponent,\r\n        LevelSetterComponent\r\n    ]\r\n})\r\nexport class SharedComponentsModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-hor-timeline',\r\n  templateUrl: './hor-timeline.component.html',\r\n  styleUrls: ['./hor-timeline.component.scss'],\r\n})\r\nexport class HorTimelineComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  \r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","<p>\r\n  hor-timeline works!\r\n</p>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { NewsEvento } from 'src/app/models/newsevento.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-news-eventi',\r\n  templateUrl: './news-eventi.component.html',\r\n  styleUrls: ['./news-eventi.component.scss'],\r\n})\r\nexport class NewsEventiComponent implements OnInit {\r\n\r\n  @Input() myNews = new NewsEvento();\r\n  @Output() clickNews = new EventEmitter<NewsEvento>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n\r\n  /**\r\n   * Emetto l'evento di click\r\n   */\r\n  onClickNews() {\r\n    this.clickNews.emit(this.myNews);\r\n  }\r\n}\r\n","<ion-card>\r\n  <ion-item [button]=\"!myNews.do_inserted\" (click)=\"onClickNews()\" lines=\"none\">\r\n\r\n    <ion-thumbnail slot=\"start\" *ngIf=\"myNews.LINKIMAGE\">\r\n      <ion-img [src]=\"myNews.LINKIMAGE\"></ion-img>\r\n    </ion-thumbnail>\r\n\r\n    <ion-icon \r\n      *ngIf = \"!myNews.LINKIMAGE\"\r\n      slot=\"start\" [name]=\"myNews._NAMEICON\" [color]=\"myNews._COLOR\"></ion-icon>\r\n    \r\n    <ion-label>\r\n      <h3 class=\"ion-text-wrap\">\r\n        {{ myNews.TITLE }}\r\n      </h3>\r\n\r\n      <p class=\"ion-text-wrap\" *ngIf=\"myNews.SUBTITLE\">\r\n        {{ myNews.SUBTITLE }}\r\n      </p>\r\n      <p *ngIf=\"myNews.PUBBLICATADAL\" color=\"medium\" class=\"ion-text-right ion-padding-horizontal\">\r\n        <em>{{ myNews.PUBBLICATADAL | date : 'dd/MM/yyyy' }}</em>\r\n      </p>\r\n    </ion-label>\r\n  </ion-item>\r\n</ion-card>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { SorgenteFile, TipoDocumentazione } from 'src/app/models/tipodocumentazione.model';\r\nimport { Chooser, ChooserResult } from '@ionic-native/chooser/ngx';\r\nimport { ToastController, PickerController, ModalController } from '@ionic/angular';\r\nimport { PickerColumnOption } from '@ionic/core';\r\nimport { InvioDocumentazione } from 'src/app/models/documentazione.model';\r\nimport {Plugins, CameraResultType, CameraPhoto, CameraSource } from '@capacitor/core';\r\n\r\nconst {Camera } = Plugins;\r\n\r\n\r\n@Component({\r\n  selector: 'app-upload',\r\n  templateUrl: './upload.component.html',\r\n  styleUrls: ['./upload.component.scss'],\r\n})\r\nexport class UploadComponent implements OnInit {\r\n\r\n  @Input() isDesktop : boolean;\r\n  @Input() docTypeList : TipoDocumentazione[];\r\n\r\n  //file caricati (sono tipi diversi a seconda se caricati da mobile o desktop)\r\n  loadedMobileFile : ChooserResult;\r\n  loadedDesktopFile : File;\r\n  loadedMobilePhoto: CameraPhoto;\r\n\r\n  //File caricato\r\n  fileLoaded: boolean = false;\r\n  //Nome File da mostrare\r\n  fileNameShow: string = '';\r\n\r\n  //Tipo di documento che si desidera caricare\r\n  selectedDocType: TipoDocumentazione;\r\n\r\n  //Sorgente da cui caricare il file\r\n  sorgenteFile: SorgenteFile = SorgenteFile.photoGallery;\r\n\r\n  //Descrizione opzionale del documento\r\n  docDescription = '';\r\n\r\n \r\n\r\n  constructor(\r\n    private chooser : Chooser,\r\n    private toastController : ToastController,\r\n    private pickerController : PickerController,\r\n    private modalController : ModalController\r\n    \r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  //#region EVENTI DI SEARCH FILE\r\n\r\n  /**\r\n   * Evento Click per la scelta di un file in versione Mobile\r\n   */\r\n  onMobileSearch(){\r\n\r\n    //Sorgente FileSystem uso il Chooser\r\n    if (this.sorgenteFile == SorgenteFile.filesystem) {\r\n\r\n      //Caricamento con il metodo File\r\n      this.chooser.getFile()\r\n      .then(file => {\r\n\r\n        //Questo è il file caricato\r\n        this.loadedMobileFile = file;\r\n        this.fileLoaded = true;\r\n        this.fileNameShow = this.loadedMobileFile.name;\r\n\r\n      })\r\n      .catch((error: any) => {\r\n\r\n        this.loadedMobileFile = null;\r\n        this.fileLoaded = false;\r\n        this.fileNameShow = '';\r\n        \r\n\r\n        console.error(error)\r\n      });\r\n\r\n    }\r\n    else if (this.sorgenteFile == SorgenteFile.photoGallery) {\r\n\r\n      //Utilizzo la Gallery/Fotocamera\r\n      //Devo aprire la fotocamera sulla gallery\r\n      Camera.getPhoto({\r\n        resultType: CameraResultType.DataUrl,\r\n        source: CameraSource.Prompt,\r\n        quality: 100\r\n      })\r\n      .then((data:CameraPhoto) => {\r\n\r\n         //Questo è il file caricato\r\n        this.loadedMobilePhoto = data;\r\n        this.fileLoaded = true;\r\n        this.fileNameShow = 'Immagine ' + this.loadedMobilePhoto.format;\r\n      })\r\n      .catch(error => {\r\n          //Questo è il file caricato\r\n          this.loadedMobilePhoto = null;\r\n          this.fileLoaded = false;\r\n          this.fileNameShow = '';\r\n          this.showMessage('Errore apertura Photo Gallery');\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Evento Click dell'Item riferito alla ricerca File Desktop\r\n   */\r\n  onDesktopSearch(){\r\n\r\n    let myInput = document.getElementById('myInput');\r\n\r\n    myInput.click();\r\n    \r\n  }\r\n\r\n\r\n  /**\r\n   * Evento generato dal TAG INPUT al cambio di File\r\n   * @param event \r\n   */\r\n  onChangedDesktopFile(event : any) {\r\n    let myFile : File;\r\n\r\n    if (event.target.files && event.target.files.length != 0) {\r\n      myFile = event.target.files[0];\r\n\r\n      this.loadedDesktopFile=myFile;\r\n      this.fileLoaded = true;\r\n      this.fileNameShow = this.loadedDesktopFile.name;\r\n    }\r\n    else {\r\n      this.loadedDesktopFile=null;\r\n      this.fileLoaded = false;\r\n      this.fileNameShow = '';\r\n    }\r\n    \r\n  } \r\n  \r\n  //#endregion\r\n\r\n  //#region VISUALIZZAZIONE MESSAGGI / PICKER\r\n\r\n  /**\r\n   * Mostra un Message Toast\r\n   * @param message Messaggio\r\n   */\r\n  showMessage(message : string){\r\n    this.toastController.create({\r\n      message: message,\r\n      duration: 3000\r\n    })\r\n    .then(elToast => {\r\n      elToast.present();\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Mostra il Picker per la scelta della tipologia documento\r\n   */\r\n  showPicker(){\r\n    \r\n    let pickerOptions : PickerColumnOption[]=[];\r\n\r\n    this.docTypeList.forEach(docType => {\r\n      let option : PickerColumnOption = {\r\n        text: docType.DENOMINAZIONE,\r\n        value: docType\r\n      }\r\n\r\n      pickerOptions.push(option);\r\n    });\r\n\r\n\r\n\r\n    this.pickerController.create({\r\n      columns : [\r\n        {\r\n          name : 'tipo',\r\n          options : pickerOptions\r\n\r\n        }\r\n      ],\r\n      buttons: [\r\n        {\r\n          text: 'Annulla',\r\n          role: 'cancel',\r\n        },\r\n        {\r\n          text: 'Conferma',\r\n          handler: (data)=>{\r\n            this.selectedDocType= data.tipo.value;\r\n          }\r\n        }\r\n      ]\r\n    })\r\n    .then(elPicker => {\r\n      elPicker.present();\r\n    })\r\n  }\r\n\r\n  //#endregion\r\n\r\n\r\n  \r\n\r\n  /**\r\n   * Converte un Blob in un dataUrl string\r\n   * @param blob Blob da convertire\r\n   * @returns \r\n   */\r\n  convertBlobToDataUrl(blob: Blob):Promise<string> {\r\n\r\n   return new Promise<string>((resolve, reject) => {\r\n\r\n      const reader = new FileReader;\r\n      reader.onerror = reject;\r\n      reader.onload = () => {\r\n          resolve(reader.result.toString());\r\n      };\r\n      reader.readAsDataURL(blob);\r\n    });\r\n\r\n\r\n    //ALTRO ESEMPIO CHE FORSE USAVO PRIMA  \r\n    //@ts-ignore \r\n      // this.loadedDesktopFile.arrayBuffer().then(blob => {\r\n      //   console.log(blob);\r\n\r\n      //   //IMPORTANTE! QUESTO CONVERTE UN ARRAYBUFFER (BLOB) IN BASE64\r\n\r\n      //   //TEST 1\r\n      //   //let base64 = btoa(String.fromCharCode(...new Uint8Array(blob)));\r\n      //   //FINE TEST 1\r\n\r\n      //   //TEST 2\r\n      //   //const uint8Array = new Uint8Array(blob);\r\n      //   //const base64 = uint8Array.reduce((acc, i) => acc += String.fromCharCode.apply(null, [i]), '');\r\n      //   //console.log(base64);\r\n      //   // FINE TEST 2\r\n        \r\n\r\n        \r\n      // })    \r\n  }  \r\n\r\n\r\n  //#region EVENTI DI INVIO\r\n  \r\n  /**\r\n   * Evento Click di Interfaccia per il caricamento\r\n   */\r\n  onClickCarica(){\r\n\r\n    //File non caricato\r\n    if (!this.fileLoaded) {\r\n      this.showMessage('Prima scegli il documento');\r\n    }\r\n    else if (!this.selectedDocType) {\r\n        //Tipologia non selezionata\r\n        this.showMessage('Scegli una tipologia di documento');\r\n    }\r\n    else {\r\n      //Possiamo procedere al caricamento\r\n      this.SendFileDocumentToParent()\r\n    }\r\n        \r\n  }\r\n\r\n  /**\r\n   * Crea e ritorna il DataUrl da inviare al server\r\n   */\r\n  prepareDataUrl():Promise<string> {\r\n    let myDataUrl: string;\r\n\r\n    return new Promise<string>((resolve, reject) => {\r\n\r\n      //File Desktop\r\n      if (this.loadedDesktopFile) {\r\n\r\n        //Effettuo la conversione \r\n        this.convertBlobToDataUrl(this.loadedDesktopFile)\r\n              .then(strDataUrl => {\r\n  \r\n                myDataUrl = strDataUrl as string;\r\n                resolve(myDataUrl);\r\n\r\n              })\r\n              .catch(error => {\r\n                reject(error);\r\n              });\r\n      }\r\n      else if (this.loadedMobilePhoto) {\r\n        myDataUrl = this.loadedMobilePhoto.dataUrl;\r\n\r\n        if (myDataUrl.length != 0) {\r\n          resolve(myDataUrl);\r\n        }\r\n        else {\r\n          reject('No base 64 founded');\r\n        }\r\n      }\r\n      else if (this.loadedMobileFile) {\r\n\r\n        resolve(this.loadedMobileFile.dataURI);\r\n\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n\r\n  /**\r\n   * Prepara un documento InvioDocumentazione e \r\n   * lo ritorna alla pagina chiamante\r\n   */\r\n  SendFileDocumentToParent() {\r\n    \r\n    this.prepareDataUrl()\r\n        .then(dataUrl => {\r\n          \r\n          //abbiamo tutto, posso creare l'oggetto da ritornare, e chiudere\r\n          let myDocument = new InvioDocumentazione;\r\n          myDocument.FILE = dataUrl;\r\n          myDocument.IDTIPODOCUMENTAZIONE = this.selectedDocType.ID;\r\n          myDocument.DESCRIZIONE = this.docDescription;\r\n\r\n          this.modalController.dismiss(myDocument);\r\n\r\n        })\r\n        .catch(error => {\r\n          this.showMessage('Si sono verificati errori');\r\n        } )\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Chiusura modale senza parametri\r\n   */\r\n  close(){\r\n    this.modalController.dismiss();\r\n  }\r\n}\r\n\r\n  \r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-title>Carica</ion-title>\r\n    <ion-buttons slot=\"end\">\r\n      <ion-button (click)=\"close()\">\r\n        <ion-icon name=\"close-outline\"></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <div class=\"icon-container\">\r\n    <ion-icon name=\"cloud-upload-outline\"></ion-icon>  \r\n  </div>\r\n  \r\n  <ion-list>\r\n\r\n    <!-- SE SONO SU MOBILE -->\r\n    <ion-item-group *ngIf=\"!isDesktop\">\r\n      <ion-item-divider color=\"light\">\r\n        <ion-label>\r\n          <h2>Carica da</h2>\r\n        </ion-label>\r\n        </ion-item-divider>\r\n\r\n        <ion-radio-group [(ngModel)]=\"sorgenteFile\">\r\n\r\n          <ion-item>\r\n            <ion-icon slot=\"start\" name=\"document-text-outline\"></ion-icon>\r\n            <ion-label>Cartella Documenti</ion-label>\r\n            <ion-radio slot=\"end\" value=\"file\"></ion-radio>\r\n          </ion-item>\r\n\r\n          <ion-item>\r\n            <ion-icon slot=\"start\" name=\"camera-outline\"></ion-icon>\r\n            <ion-label>Photo Gallery</ion-label>\r\n            <ion-radio slot=\"end\" value=\"photo\"></ion-radio>\r\n          </ion-item>\r\n\r\n        </ion-radio-group>\r\n    </ion-item-group>\r\n\r\n    <ion-item-group class=\"ion-margin-vertical\">\r\n      <ion-item-divider color=\"light\">\r\n        <ion-label>\r\n          <h2>Cosa stai caricando</h2>\r\n        </ion-label>\r\n        </ion-item-divider> \r\n\r\n        <ion-item button (click)=\"showPicker()\">\r\n          <ion-icon slot=\"start\" name=\"document-outline\"></ion-icon>\r\n            <ion-label \r\n              *ngIf=\"!selectedDocType\" \r\n              class=\"myPlaceholder\">Scegli una tipologia</ion-label>\r\n            <p>{{selectedDocType? selectedDocType.DENOMINAZIONE : null}}</p>\r\n        </ion-item>\r\n\r\n        <ion-item>\r\n          <ion-icon slot=\"start\" name=\"information-circle-outline\"></ion-icon>\r\n          <ion-textarea placeholder=\"Inserisci una descrizione\"  [(ngModel)]=\"docDescription\" maxlength=\"50\"></ion-textarea>      \r\n        </ion-item>\r\n\r\n    </ion-item-group>\r\n\r\n\r\n    <ion-item-group class=\"ion-margin-vertical\">\r\n      <ion-item-divider color=\"light\">\r\n        <ion-label>\r\n          <h2>Scegli il documento</h2>\r\n        </ion-label>\r\n        </ion-item-divider> \r\n\r\n        <!-- SE  SIAMO SU DESKTOP -->\r\n        <ion-item  *ngIf=\"isDesktop\" button (click)=\"onDesktopSearch()\">\r\n            <input accept=\".pdf, image/*\" hidden id=\"myInput\" type=\"file\" (change)=\"onChangedDesktopFile($event)\">\r\n            <ion-icon slot=\"start\" name=\"folder-open-outline\"></ion-icon>\r\n            <ion-label *ngIf=\"!loadedDesktopFile\" class=\"myPlaceholder\">Fai clic e scegli il file</ion-label>\r\n            <p>{{fileNameShow}}</p>\r\n        </ion-item>\r\n    \r\n        <!-- SE  SIAMO SU MOBILE -->\r\n        <ion-item *ngIf=\"!isDesktop\" button (click)=\"onMobileSearch()\">\r\n          <ion-icon slot=\"start\" name=\"folder-open-outline\"></ion-icon>\r\n          <ion-label *ngIf=\"!fileLoaded\" class=\"myPlaceholder\">Scegli il file</ion-label>\r\n          {{fileNameShow}}\r\n        </ion-item>\r\n\r\n\r\n    </ion-item-group>    \r\n\r\n\r\n  </ion-list>\r\n</ion-content>\r\n\r\n<ion-footer>\r\n  <ion-button  expand = \"block\" (click)=\"onClickCarica()\">\r\n    <ion-icon slot=\"start\" name=\"cloud-upload-outline\"></ion-icon>\r\n      Carica\r\n  </ion-button>\r\n</ion-footer>","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { AreaPaymentSetting } from 'src/app/models/areapaymentsetting.model';\r\nimport { PaymentChannel, PaymentMode, ValueList } from 'src/app/models/valuelist.model';\r\nimport { Platform, ActionSheetController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-payment-mode',\r\n  templateUrl: './payment-mode.component.html',\r\n  styleUrls: ['./payment-mode.component.scss'],\r\n})\r\nexport class PaymentModeComponent implements OnInit {\r\n\r\n  @Input() arPayment: AreaPaymentSetting[] = [];\r\n  @Output() onPaymentModeChoosed = new EventEmitter<PaymentMode>();\r\n  selectedPaymentMode: ValueList;\r\n  \r\n  arPaymentModeList: ValueList[] = []; //Il contenuto dell'array è al max 3 record (Paga struttura, adesso, bonifico)\r\n  \r\n  constructor(private actionSheetController: ActionSheetController) { }\r\n\r\n  ngOnInit() {\r\n    //Creo una lista con le possibilità\r\n    this.arPaymentModeList = AreaPaymentSetting.prepareArPaymentMode(this.arPayment);\r\n\r\n    this.chooseStartPayment();\r\n\r\n  }\r\n\r\n  /**\r\n   * Scegli un pagamento da proporre\r\n   * Se presente il metodo elettronico sceglie quello, altrimenti onSite o in ultimo il Bonifico\r\n   */\r\n  chooseStartPayment() {\r\n    \r\n    if (this.arPaymentModeList) {\r\n      console.log(this.arPaymentModeList);\r\n      \r\n      if (this.arPaymentModeList.length != 0) {\r\n        //Metto in ordine decrescente\r\n        this.arPaymentModeList.sort((a,b) => b.value - a.value);\r\n\r\n        //Se non ho un paga Adesso giro nuovamente in ordine crescente\r\n        if (this.arPaymentModeList[0].value != PaymentMode.pagaAdesso) {\r\n         \r\n          this.arPaymentModeList.sort((a,b) => a.value - b.value);\r\n        }\r\n        //In prima posizione ho il pagamenti che cercavo\r\n        this.arPaymentModeList[0].selected = true;\r\n        //Emetto un evento di modifica e imposto il pagamento selezionato\r\n        this.onChangePaymentSelection(this.arPaymentModeList[0]);\r\n        \r\n      }\r\n    }\r\n  }\r\n\r\n  get itemIcon() {\r\n    let nameIcon = 'cart-outline';\r\n\r\n    if (this.selectedPaymentMode) {\r\n      nameIcon = this.selectedPaymentMode.itemIcon;\r\n    }\r\n\r\n    return nameIcon;\r\n  }\r\n\r\n\r\n  /**\r\n   * Apertura delle voci di scelta\r\n   * Mobile: ActionSheet\r\n   * Desktop: \r\n   */\r\n   onOpenChoose() {\r\n    let buttonsArray: any[]=[];\r\n    let singleButton: any;\r\n\r\n    if (this.arPaymentModeList) {\r\n      if (this.arPaymentModeList.length !== 0) {\r\n\r\n        //Popolo i Bottoni\r\n        for (const iterator of this.arPaymentModeList) {\r\n          singleButton = {\r\n            text: iterator.description,\r\n            icon: iterator.itemIcon,\r\n            handler: ()=>{\r\n              //Cambio metodo pagamento\r\n              this.onChangePaymentSelection(iterator);\r\n            }\r\n          }\r\n    \r\n          buttonsArray.push(singleButton);\r\n        }\r\n    \r\n        //Pulsante Annulla\r\n        singleButton = {\r\n          text:'Annulla',\r\n          icon:'arrow-undo-sharp',\r\n          role: 'cancel'\r\n        }\r\n        buttonsArray.push(singleButton);\r\n    \r\n        this.actionSheetController.create({\r\n          header: 'Come desideri pagare ?',\r\n          buttons: buttonsArray\r\n        })\r\n        .then(elAction => {\r\n          elAction.present();\r\n        });\r\n\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n\r\n   \r\n\r\n\r\n  /**\r\n   * Cambio di selezione nel pagamento\r\n   * @param value Nuova selezione\r\n   */\r\n  onChangePaymentSelection(mySelection: ValueList) {\r\n    //Memorizzo il pagamento\r\n    this.selectedPaymentMode = mySelection;\r\n\r\n    //Invio l'informazione al padre\r\n    this.onPaymentModeChoosed.emit(mySelection.value);\r\n  }\r\n\r\n}\r\n","<!-- NELLA PAGINA DOVE VIENE INNESTATO IL COMPONENTE CIRCONDARLO DENTRO A ION-LIST-->\r\n<ion-item *ngIf=\"!arPaymentModeList.length\" lines=\"none\">\r\n  <ion-label>Pagamento non supportato</ion-label>\r\n</ion-item>\r\n\r\n<ion-item button *ngIf=\"arPaymentModeList.length\" lines=\"full\" [detail]=\"true\" (click)=\"onOpenChoose()\">\r\n  <ion-icon slot=\"start\" [name]=\"itemIcon\"></ion-icon>\r\n  <ion-label *ngIf=\"selectedPaymentMode\">\r\n    <h6>{{selectedPaymentMode?.description}}</h6>\r\n    <p *ngIf=\"arPaymentModeList.length > 1\">\r\n        Clicca per altri metodi di pagamento\r\n    </p>\r\n  </ion-label>\r\n  <ion-label *ngIf=\"!selectedPaymentMode\">Scegli metodo di pagamento</ion-label>\r\n</ion-item>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { SlotTime } from 'src/app/models/imdb/slottime.model';\r\nimport { StatoSlot } from 'src/app/models/valuelist.model';\r\nimport { LogApp } from 'src/app/models/log.model';\r\n\r\n@Component({\r\n  selector: 'app-slottime',\r\n  templateUrl: './slottime.component.html',\r\n  styleUrls: ['./slottime.component.scss'],\r\n})\r\nexport class SlottimeComponent implements OnInit {\r\n\r\n  @Input() mySlot: SlotTime;\r\n  @Output() clickSlot = new EventEmitter<SlotTime>();\r\n  @Input() captionBtn = ''; //Caption da visualizzare nel bottone\r\n  @Input() readOnly = false; //Gli slot sono ReadOnly\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n  getClassButton() {\r\n    let myClass = '';\r\n    if (this.readOnly) {\r\n      myClass = \"slot-read-only\";\r\n    }\r\n    else {\r\n      if (this.mySlot.STATO == StatoSlot.occupato) {\r\n        myClass = 'slot-busy';\r\n      }\r\n      else if (this.mySlot.STATO == StatoSlot.chiuso) {\r\n        myClass = \"slot-read-only\";\r\n      }\r\n      else if (this.mySlot.STATO == StatoSlot.contattare) {\r\n        myClass = \"slot-free-contact\";\r\n      }      \r\n      else {\r\n        // Button utilizzabile\r\n        if (this.mySlot.selected) {\r\n          myClass = 'slot-selected';\r\n        }\r\n        else {\r\n          myClass = 'slot-free';\r\n        }\r\n      }\r\n    }\r\n\r\n    \r\n\r\n    return myClass;\r\n  }\r\n\r\n  getDisableButton() {\r\n\r\n    let disable = false;\r\n\r\n    if (this.mySlot.STATO == StatoSlot.occupato || this.mySlot.STATO == StatoSlot.chiuso || this.readOnly) {\r\n      disable = true;\r\n    }\r\n\r\n    return disable;\r\n  }\r\n\r\n  getCaptionButton() {\r\n    let caption = '';\r\n    if (!this.readOnly) {\r\n      if (this.mySlot.selected) {\r\n        caption = this.captionBtn;\r\n      }\r\n      else {\r\n        switch (this.mySlot.STATO) {\r\n          case StatoSlot.occupato:\r\n            caption = 'occupato'\r\n            break;\r\n            case StatoSlot.contattare:\r\n              caption = 'contattare';\r\n              break;            \r\n          case StatoSlot.chiuso:\r\n            caption = ''\r\n            break;\r\n        \r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return caption;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @returns Nome Icona da visualizzare\r\n   */\r\n  getIconButton() {\r\n    let nameIcon = '';\r\n\r\n    if (!this.readOnly) {\r\n      if (this.mySlot.selected) {\r\n        nameIcon = 'checkmark';\r\n      }\r\n      else {\r\n        switch (this.mySlot.STATO) {\r\n          case StatoSlot.occupato:\r\n            nameIcon = 'thumbs-down';\r\n            break;\r\n            case StatoSlot.contattare:\r\n              nameIcon = 'call';\r\n              break;            \r\n          case StatoSlot.chiuso:\r\n            nameIcon = ''\r\n            break;\r\n        \r\n          default:\r\n            nameIcon = '';\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return nameIcon;\r\n  }  \r\n\r\n  showIconButton() {\r\n    let showIcon = false;\r\n\r\n    if (!this.readOnly) {\r\n\r\n      if (this.mySlot.selected) {\r\n        showIcon = true;\r\n      }\r\n      else {\r\n        switch (this.mySlot.STATO) {\r\n          case StatoSlot.occupato:\r\n            showIcon = true;\r\n            break;\r\n            case StatoSlot.contattare:\r\n              showIcon = true;\r\n              break;            \r\n          case StatoSlot.chiuso:\r\n            showIcon = false;\r\n            break;\r\n        \r\n          default:\r\n            showIcon = false;\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return showIcon;\r\n  }    \r\n\r\n  /**\r\n   * Emetto un evento di scelta slot\r\n   */\r\n  chooseSlot() {\r\n\r\n    this.clickSlot.emit(this.mySlot);\r\n    \r\n  }\r\n\r\n}\r\n","<ion-card>\r\n  \r\n    <ion-row class=\"ion-align-items-center\">\r\n      <ion-col size=\"2\" size-xs = \"3\" id=\"col-orari\" class=\"ion-no-padding\">\r\n        <ion-grid class=\"ion-no-margin\">\r\n          \r\n          <ion-row >\r\n            <ion-col>\r\n              <div class=\"ion-text-center\">\r\n                <span class=\"orario-black\">\r\n                {{ mySlot.START | date : \"HH:mm\" }}\r\n                </span>\r\n              </div>\r\n            </ion-col>\r\n          </ion-row>\r\n\r\n          <ion-row>\r\n            <ion-col>\r\n              <div class=\"ion-text-center\">\r\n                <span class=\"orario-light\">\r\n                  {{ mySlot.END | date : \"HH:mm\" }}\r\n                </span>\r\n              </div>\r\n            </ion-col>\r\n          </ion-row>\r\n        </ion-grid>\r\n      </ion-col>\r\n      <ion-col\r\n          size-xs = \"9\" \r\n          size = \"10\"\r\n          id=\"col-slot\"\r\n          class=\"ion-padding-horizontal\">\r\n        <ion-button \r\n            expand=\"block\" \r\n            [ngClass] = \"getClassButton()\"\r\n            [disabled]=\"getDisableButton()\"\r\n            (click)=\"chooseSlot()\">\r\n            <ion-icon [name]=\"getIconButton()\" slot=\"start\" *ngIf=\"showIconButton()\"></ion-icon>\r\n            {{ getCaptionButton() }}\r\n        </ion-button>\r\n      </ion-col>\r\n    </ion-row>\r\n  \r\n</ion-card>\r\n"],"sourceRoot":"webpack:///"}