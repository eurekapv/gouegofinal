{"version":3,"sources":["webpack:///src/app/shared/components/sport-scroll/sport-scroll.component.ts","webpack:///src/app/shared/components/sport-scroll/sport-scroll.component.html","webpack:///src/app/shared/directives/hide-header.directive.ts","webpack:///src/app/models/buttoncard.model.ts","webpack:///src/app/shared/components/aperture/aperture.component.ts","webpack:///src/app/shared/components/aperture/aperture.component.html","webpack:///src/app/shared/components/level-setter/level-setter.component.ts","webpack:///src/app/shared/components/level-setter/level-setter.component.html","webpack:///src/app/shared/components/item-calendario/item-calendario.component.ts","webpack:///src/app/shared/components/item-calendario/item-calendario.component.html","webpack:///src/app/shared/components/alert-input-prezzo/alert-input-prezzo.component.ts","webpack:///src/app/shared/components/alert-input-prezzo/alert-input-prezzo.component.html","webpack:///src/app/shared/components/calendarscroll/calendarscroll.component.html","webpack:///src/app/shared/components/calendarscroll/calendarscroll.component.ts","webpack:///src/app/shared/components/payment-choose/payment-choose.component.ts","webpack:///src/app/shared/components/payment-choose/payment-choose.component.html","webpack:///src/app/shared/components/settimana-block/settimana-block.component.ts","webpack:///src/app/shared/components/settimana-block/settimana-block.component.html","webpack:///src/app/shared/components/button-card/button-card.component.ts","webpack:///src/app/shared/components/button-card/button-card.component.html","webpack:///src/app/models/itemCalendario.model.ts","webpack:///src/app/shared/components/player-number/player-number.component.ts","webpack:///src/app/shared/components/player-number/player-number.component.html","webpack:///src/app/shared/components/circular/circular.component.ts","webpack:///src/app/shared/components/circular/circular.component.html","webpack:///src/app/shared/components/advertising/advertising.component.ts","webpack:///src/app/shared/components/advertising/advertising.component.html","webpack:///src/app/shared/components/centri/centri.component.ts","webpack:///src/app/shared/components/centri/centri.component.html","webpack:///src/app/shared/components/campi-scroll/campi-scroll.component.ts","webpack:///src/app/shared/components/campi-scroll/campi-scroll.component.html","webpack:///node_modules/@ionic-native/chooser/__ivy_ngcc__/ngx/index.js","webpack:///src/app/shared/components/card-course/card-course.component.ts","webpack:///src/app/shared/components/card-course/card-course.component.html","webpack:///src/app/shared/components/footbooked/footbooked.component.ts","webpack:///src/app/shared/components/footbooked/footbooked.component.html","webpack:///src/app/shared/components/impegni/impegni.component.ts","webpack:///src/app/shared/components/impegni/impegni.component.html","webpack:///src/app/shared/components/shared-components.module.ts","webpack:///src/app/shared/components/hor-timeline/hor-timeline.component.ts","webpack:///src/app/shared/components/hor-timeline/hor-timeline.component.html","webpack:///src/app/shared/components/news-eventi/news-eventi.component.ts","webpack:///src/app/shared/components/news-eventi/news-eventi.component.html","webpack:///src/app/shared/components/upload/upload.component.ts","webpack:///src/app/shared/components/upload/upload.component.html","webpack:///src/app/shared/components/payment-mode/payment-mode.component.ts","webpack:///src/app/shared/components/payment-mode/payment-mode.component.html","webpack:///src/app/shared/components/slottime/slottime.component.ts","webpack:///src/app/shared/components/slottime/slottime.component.html"],"names":["SportScrollComponent","startService","sportChanged","sliderOpts1","slidesPerView","spaceBetween","initialSlide","sliderOpts2","sliderOpts3","sliderOpts4","indexSlideZeroBased","sliderSport","slideTo","newSport","indexSport","getIndexSport","goToSlide","emit","slidOpt","sportList","length","mySport","myColor","selectedSport","ID","myPos","findIndex","el","HideHeaderDirective","renderer","domCtrl","platform","lastY","heightForScroll","header","write","setStyle","myEl","isNaN","nativeElement","domDivCont","firstElementChild","clientHeight","height","scrollThreshold","$event","getHeightForScrollContent","detail","scrollTop","console","warn","ButtonHomeParams","ButtonCard","settore","id","idRefer","disabled","canBooking","tipoSocieta","arButton","newBtn","undefined","title","subtitle","formazione","sportiva","nameicon","sloticon","color","iconLink","functionCod","push","params","numImpegni","registrationInApp","userLogged","listImpegni","utenteLoggato","registrazioneInApp","forEach","element","SETTORE","settoreCorso","DENOMINAZIONE","getLabel","DATAORAINIZIO","getDay","formatDate","formatTime","IDREFER","settorePrenotazione","collOccupazioni","IDREF","TIPO","pianificazioneElem","buttonElem","datePipe","strSubtitle","transform","DATAORAFINE","ApertureComponent","myApertura","colorChip","icon","isOpen","LevelSetterComponent","readOnly","listLivelli","onChoose","collapsed","flagComplete","value","myValutazione","IDLIVELLOFINALE","idSelectedLevel","IDLIVELLOENTRATA","setFlagComplete","idLevel","label","myLevel","find","ItemCalendarioComponent","showDate","click","TipoBadge","tipo","badgeText","badgeIcon","iconAndText","onlyText","onlyIcon","noBadge","myCssClass","tipoBadge","elItem","dataitem","today","Date","formatDateISO","oraInizio","getOnlyDate","AlertInputPrezzoComponent","onDismiss","onClickBackdrop","onClickBtn","CalendarscrollComponent","pickController","activeDay","onChangeActiveDay","listDay","listMesi","sliderOpts","breakpoints","setStartSlide","getArray","startSlide","getDate","sliderDays","setListDay","endDay","endWrapper","getFullYear","getMonth","add","subtract","date","index","day","fill","anno","mese","giorno","meseZeroBased","optionColMesi","isDisabled","pickColMese","text","description","optionColAnni","startAnno","pickColAnno","optColMesi","indexActiveMese","optColAnni","indexActiveAnno","pickColumns","name","options","selectedIndex","_this","myMese","pickButtons","handler","data","m","a","setNewActiveDateFromPicker","role","initColumnMesi","initColumnAnni","initColumnsPicker","pickOptions","columns","buttons","keyboardClose","create","then","elPicker","addEventListener","event","myAnno","colSelectedIndex","colOptions","chooseAnno","present","meseOneBasedNew","annoNew","activeM","activeA","activeG","message","oggi","meseZeroBase","newDate","toDate","showPickerDate","PaymentChooseComponent","actionSheetController","arPayment","onPaymentChoosed","isMobile","is","nameIcon","selectedPayment","buttonsArray","singleButton","iterator","onChangePaymentSelection","elAction","SettimanaBlockComponent","listDays","colorSelected","colorNotSelected","clickable","isDesktop","clickElement","myDay","selected","myLabel","toUpperCase","xsLabel","ButtonCardComponent","myButtonCard","smallVersion","objButtonCard","onClickElement","ItemCalendario","now","oraFine","paramsItem","riga1Text","riga2Text","riga3Text","getDocPropertyInRepository","badgeColor","occupazioneElem","DATAINIZIO","PlayerNumberComponent","pickerController","maxPlayerIcon","maxPlayers","changeNumPlayer","icone","initIcone","nPlayer","pickerButtons","nPlayers","column","pickerValues","i","pickerValue","String","pickerColumns","pickerOptions","picker","onClickPlusPlayer","typeIcon","CircularComponent","open","switchMenu","AdvertisingComponent","stopPropagation","CentriComponent","location","clickPrenota","clickLocation","myStartConfig","FAVORITE","testo","setStandard","INDIRIZZO","gruppo","TIPOGRUPPO","urlImage","getUrlImage","onClickLocation","CampiScrollComponent","campoChanged","styleInfoMessage","campiList","sliderCampi","newCampo","indexCampo","getIndexCampo","myCampo","selectedCampo","myFill","isSel","Chooser","_super","apply","arguments","prototype","getFile","accept","getFileMetadata","pluginName","plugin","pluginRef","repo","platforms","ɵfac","Chooser_Factory","t","ɵChooser_BaseFactory","ɵprov","token","factory","ngDevMode","type","CardCourseComponent","myCorso","useIscrizioniColor","clickDetail","clickIscrizione","iconColor","show","flagIscrizioniAperte","myClass","prova","toDecode","maschileFemminile","TARGETSESSO","decode","corso","getSportIcon","IDSPORT","goToDetail","FootbookedComponent","myPrenotaPianifica","onClickPrenota","ImpegniComponent","impegno","iconName","settoreTorneo","SharedComponentsModule","HorTimelineComponent","NewsEventiComponent","myNews","clickNews","onClickNews","Camera","UploadComponent","chooser","toastController","modalController","fileLoaded","fileNameShow","sorgenteFile","photoGallery","docDescription","filesystem","file","loadedMobileFile","error","getPhoto","resultType","DataUrl","source","Prompt","quality","loadedMobilePhoto","format","showMessage","myInput","document","getElementById","myFile","target","files","loadedDesktopFile","duration","elToast","docTypeList","docType","option","selectedDocType","blob","Promise","resolve","reject","reader","FileReader","onerror","onload","result","toString","readAsDataURL","SendFileDocumentToParent","myDataUrl","convertBlobToDataUrl","strDataUrl","dataUrl","dataURI","prepareDataUrl","myDocument","FILE","IDTIPODOCUMENTAZIONE","DESCRIZIONE","dismiss","close","showPicker","onClickCarica","PaymentModeComponent","onPaymentModeChoosed","arPaymentModeList","prepareArPaymentMode","chooseStartPayment","log","sort","b","pagaAdesso","selectedPaymentMode","itemIcon","mySelection","SlottimeComponent","clickSlot","captionBtn","mySlot","STATO","occupato","chiuso","contattare","disable","caption","showIcon","chooseSlot"],"mappings":"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","file":"default~documents-documents-module~pages-agenda-agenda-module~pages-agenda-custode-agenda-custode-mo~ba213e12-es5.js","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { IonSlides } from '@ionic/angular';\r\nimport { Sport } from 'src/app/models/sport.model';\r\nimport { StartService } from 'src/app/services/start.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-sport-scroll',\r\n  templateUrl: './sport-scroll.component.html',\r\n  styleUrls: ['./sport-scroll.component.scss'],\r\n})\r\nexport class SportScrollComponent implements OnInit {\r\n\r\n  @Input() selectedSport: Sport;\r\n  @Output() sportChanged= new EventEmitter<Sport>();\r\n  @Input() sportList:Sport[];\r\n  @ViewChild('sliderSport')sliderSport: IonSlides;\r\n\r\n  \r\n  sliderOpts1={\r\n    slidesPerView: 1,\r\n    spaceBetween: 0,\r\n    initialSlide: 0,\r\n  }\r\n\r\n  sliderOpts2={\r\n    slidesPerView: 2,\r\n    spaceBetween: 0,\r\n    initialSlide: 0,\r\n  }\r\n  \r\n  sliderOpts3={\r\n    slidesPerView: 2.5,\r\n    spaceBetween: 0,\r\n    initialSlide: 0, //Dovrei farla variabile\r\n    // Responsive breakpoints   \r\n  //  breakpoints: {  \r\n   \r\n  //     // when window width is <= 320px     \r\n  //     320: {       \r\n  //        slidesPerView: 2.5,\r\n  //        spaceBetween: 1     \r\n  //     },     \r\n  //     // when window width is <= 480px     \r\n  //     480: {       \r\n  //        slidesPerView: 2.5,       \r\n  //        spaceBetween: 6     \r\n  //     },   \r\n  \r\n  //     // when window width is <= 640px     \r\n  //     640: {       \r\n  //        slidesPerView: 2.5,       \r\n  //        spaceBetween: 1     \r\n  //     },\r\n\r\n  //     1024: {\r\n  //       slidesPerView: 2.5,       \r\n  //       spaceBetween: 1  \r\n  //     }\r\n\r\n\r\n  \r\n  //  } \r\n  }\r\n\r\n  sliderOpts4={\r\n    slidesPerView: 3.5,\r\n    spaceBetween: 0,\r\n    initialSlide: 0\r\n  }\r\n  \r\n  constructor(private startService: StartService) {\r\n  }\r\n  \r\n  ngOnInit() {\r\n    \r\n    \r\n    \r\n  }\r\n  \r\n  ngOnChanges() {   \r\n    \r\n    \r\n  }\r\n  \r\n  ionViewDidEnter()\r\n  {\r\n    \r\n\r\n  }\r\n\r\n/**\r\n * Si posiziona sulla Slide richiesta\r\n * @param indexSlideZeroBased Indice della Slide\r\n */\r\n  goToSlide(indexSlideZeroBased: number) {\r\n    if (this.sliderSport) {\r\n      this.sliderSport.slideTo(indexSlideZeroBased);\r\n    }\r\n  }\r\n  /**\r\n   * Scelta di un nuovo sport\r\n   * @param newSport Nuovo Sport da applicare\r\n   */\r\n  onChangeSport(newSport: Sport)\r\n  {\r\n    let indexSport = this.getIndexSport(newSport);\r\n    \r\n    //Posizionamento della Slide sul bottone premuto\r\n    if (indexSport != -1) {\r\n      \r\n      this.goToSlide(indexSport);\r\n    }\r\n\r\n    //Emissione evento di cambio campo\r\n    this.sportChanged.emit(newSport);\r\n  }\r\n \r\n\r\n    /**\r\n   * A seconda del numero di sport presenti, ritorna le opzioni da impostare\r\n   * @returns \r\n   */\r\n     getSliderOptions():any {\r\n      let slidOpt: any;\r\n      if (this.sportList.length == 1) {\r\n        slidOpt = this.sliderOpts1;\r\n      }\r\n      else if (this.sportList.length == 2) {\r\n        slidOpt = this.sliderOpts2;\r\n      }\r\n      else if (this.sportList.length == 3) {\r\n        slidOpt = this.sliderOpts3;\r\n      }\r\n      else {\r\n        slidOpt = this.sliderOpts3;\r\n      }\r\n  \r\n      return slidOpt;\r\n    }\r\n\r\n  /**\r\n   * Ritorna il colore da applicare a seconda dello sport selezionato\r\n   * @param mySport Sport da analizzare\r\n   * @returns Colore da applicare al bottone/card\r\n   */\r\n  getColor(mySport: Sport) {\r\n    let myColor = 'light';\r\n    \r\n    if (this.selectedSport && mySport) {\r\n      if (this.selectedSport.ID == mySport.ID) {\r\n        \r\n        myColor = 'secondary';\r\n      }\r\n    }\r\n\r\n    return myColor;\r\n  }\r\n\r\n    /**\r\n   * Ricerca un campo nell'Array e ne torna l'indice\r\n   * @param mySport Campo da cercare\r\n   */\r\n     getIndexSport(mySport: Sport):number {\r\n      let myPos = -1;\r\n  \r\n      if (mySport) {\r\n        myPos = this.sportList.findIndex(el => {\r\n          return el.ID == mySport.ID\r\n        });\r\n      }\r\n  \r\n      return myPos;\r\n    }\r\n\r\n}\r\n","\r\n<div >\r\n  <ion-slides \r\n        *ngIf=\"sportList.length!=0\" \r\n        [options]=\"getSliderOptions()\" \r\n        class=\"ion-text-center\"\r\n        #sliderSport>\r\n\r\n    <ion-slide \r\n          *ngFor=\"let sport of sportList\" >\r\n      <ion-card \r\n          mode=\"md\"\r\n          class=\"card-sport\" \r\n          [color]=\"getColor(sport)\" \r\n          button (click)=\"onChangeSport(sport)\">\r\n        <ion-grid>\r\n          <ion-row class=\"ion-align-items-center\">\r\n            <ion-col size=\"4\">\r\n              <i class=\"icon-sport\"><span [innerHTML]=\"sport.htmlIconHex\"></span></i>\r\n            </ion-col>\r\n            <ion-col>\r\n              <ion-label><h3 class=\"text-sport\">{{sport.DENOMINAZIONE}}</h3></ion-label>\r\n            </ion-col>\r\n          </ion-row>\r\n        </ion-grid>\r\n      </ion-card>\r\n    </ion-slide>\r\n  </ion-slides>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Directive, HostListener, Input, OnInit, Renderer2, ElementRef } from '@angular/core';\r\nimport { DomController } from '@ionic/angular';\r\nimport { Platform } from '@ionic/angular';\r\n\r\n/**\r\n * Moves away the header when scrolling down.\r\n */\r\n@Directive({\r\n    selector: '[appHideHeader]',\r\n})\r\nexport class HideHeaderDirective implements OnInit {\r\n    @Input('header') header: any;\r\n    \r\n    /**\r\n     * Minimum scroll offset from top in pixels until the animation kicks in.\r\n     */\r\n    @Input('scrollThreshold') scrollThreshold: number;\r\n\r\n    private lastY = 0;\r\n    private heightForScroll = -1;\r\n\r\n    constructor(private renderer: Renderer2, \r\n                private domCtrl: DomController,\r\n                private el: ElementRef,\r\n                private platform: Platform) {\r\n        // Doing nothing.\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.header = this.header.el;\r\n        this.domCtrl.write(() => {\r\n            this.renderer.setStyle(this.header, 'transition', 'margin-top 500ms');\r\n        });\r\n    }\r\n\r\n    getHeightForScrollContent(myEl: ElementRef) {\r\n        \r\n        if (this.heightForScroll == -1 || isNaN(this.heightForScroll)) {\r\n\r\n            if (myEl && myEl.nativeElement) {\r\n                let domDivCont = myEl.nativeElement.firstElementChild;\r\n                if (domDivCont) {\r\n                    this.heightForScroll = domDivCont.clientHeight - this.platform.height() - this.scrollThreshold;\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    @HostListener('ionScroll', ['$event']) onContentScroll($event: any) {\r\n\r\n            //Faccio calcolare l'altezza utile al calcolo\r\n            //L'altezza è l'intera altezza del contenuto dello Scroll - Altezza del Canvas della pagina\r\n            this.getHeightForScrollContent(this.el);\r\n\r\n            if (this.heightForScroll != -1 ) {\r\n                \r\n                if (\r\n                    $event.detail.scrollTop > (this.scrollThreshold || 0) &&\r\n                    $event.detail.scrollTop > this.lastY\r\n                ) {\r\n                    this.domCtrl.write(() => {\r\n                        this.renderer.setStyle(this.header, 'margin-top', `-${this.header.clientHeight}px`);\r\n                        \r\n                    });\r\n                } else if ($event.detail.scrollTop < this.heightForScroll){\r\n                    this.domCtrl.write(() => {\r\n                        this.renderer.setStyle(this.header, 'margin-top', '0');\r\n                        \r\n                    });\r\n                }\r\n        \r\n                this.lastY = $event.detail.scrollTop;\r\n            }\r\n            else {\r\n                console.warn('Directive Scroll: heightForScroll not valid');\r\n            }\r\n    }\r\n}\r\n","import { Impegno } from './impegno.model';\r\nimport { SettoreAttivita, TipoSocieta } from './valuelist.model';\r\nimport { Settimana } from './settimana.model';\r\nimport { MyDateTime } from '../library/models/mydatetime.model';\r\nimport { OccupazioneCampi } from './occupazionecampi.model';\r\nimport { PianificazioneCorso } from './pianificazionecorso.model';\r\nimport { pipe } from 'rxjs';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nexport class ButtonHomeParams {\r\n    utenteLoggato?: boolean; //Utente loggato\r\n    registrazioneInApp?: boolean; //Indica se è possibile effettuare la registrazione nell'App\r\n    listImpegni?: Impegno[]; //Lista degli impegni utente\r\n}\r\n\r\nexport class ButtonCard {\r\n    title: string;\r\n    subtitle: string;\r\n    nameicon: string;\r\n    sloticon: string;\r\n    color: string;\r\n    iconLink: boolean;\r\n    functionCod: string;\r\n    settore: SettoreAttivita;\r\n    id: string;\r\n    idRefer: string;\r\n    disabled: boolean;\r\n\r\n    constructor() {\r\n        this.settore = 0;\r\n        this.id = '';\r\n        this.idRefer = '';\r\n        this.disabled = false;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Ritorna i Botton Action per la location\r\n     * @param canBooking E' possibile prenotare ?\r\n     */\r\n    static getButtonActionLocation(canBooking?:boolean, tipoSocieta?:TipoSocieta): ButtonCard[] {\r\n        let arButton: ButtonCard[] = [];\r\n        let newBtn: ButtonCard;\r\n\r\n        if (canBooking) {\r\n            newBtn = new ButtonCard();\r\n\r\n            if (tipoSocieta == undefined) {\r\n                newBtn.title = 'Prenota';\r\n                newBtn.subtitle = 'organizza un evento in questa location';\r\n            }\r\n            else if (tipoSocieta == TipoSocieta.formazione) {\r\n                newBtn.title = 'Prenota un\\'aula';\r\n                newBtn.subtitle = 'organizza un corso per il tuo team';\r\n            }\r\n            else if (tipoSocieta == TipoSocieta.sportiva) {\r\n                newBtn.title = 'Prenota un campo';\r\n                newBtn.subtitle = 'organizza un incontro con i tuoi amici';\r\n            }\r\n            \r\n            newBtn.nameicon = 'calendar';\r\n            newBtn.sloticon = \"start\";\r\n            newBtn.color = \"primary\";\r\n            newBtn.iconLink = true;\r\n            newBtn.functionCod = 'book';\r\n    \r\n            arButton.push(newBtn);\r\n        }\r\n\r\n        newBtn = new ButtonCard();\r\n        newBtn.title = 'Impara con noi';\r\n        newBtn.subtitle = 'guarda i corsi che abbiamo preparato per te';\r\n        newBtn.nameicon = 'library-outline';\r\n        newBtn.sloticon = \"start\";\r\n        newBtn.color = \"primary\";\r\n        newBtn.iconLink = true;\r\n        newBtn.functionCod = 'course';\r\n\r\n        arButton.push(newBtn);\r\n\r\n        return arButton;\r\n    }\r\n\r\n    /**\r\n     * Ritorna i Buttoni da mostrare nella Home \r\n     * nella parte dedicata agli Eventi in programma, \r\n     * quando non sono presenti eventi\r\n     * @param params Informazioni per la creazione dei Bottoni\r\n     */\r\n    static getButtonHomeImpegni(params?:ButtonHomeParams): ButtonCard[] {\r\n        let arButton: ButtonCard[] = [];\r\n        let newBtn: ButtonCard;\r\n        let numImpegni = 0;\r\n\r\n        let registrationInApp: boolean = false; \r\n        let userLogged: boolean = false;\r\n        let listImpegni:Impegno[] = [];\r\n\r\n        //Recupero dei parametri\r\n        if (params) {\r\n            userLogged = params.utenteLoggato;\r\n            listImpegni = params.listImpegni;\r\n            registrationInApp = params.registrazioneInApp;\r\n        }\r\n\r\n        /** UTENTE LOGGATO */\r\n        if (userLogged) {\r\n            //Determino il numero degli impegni\r\n            if (listImpegni && listImpegni.length !== 0) {\r\n                numImpegni = listImpegni.length;\r\n            }\r\n\r\n            //Non ci sono impegni \r\n            if (numImpegni == 0) {\r\n\r\n                newBtn = new ButtonCard();\r\n                newBtn.title = 'Nessun appuntamento previsto';\r\n                newBtn.subtitle = 'Organizza un incontro con i tuoi amici';\r\n                newBtn.nameicon = 'calendar-outline';\r\n                newBtn.sloticon = \"start\";\r\n                newBtn.color = \"primary\";\r\n                newBtn.iconLink = false;\r\n                newBtn.functionCod = 'noevents';\r\n        \r\n                arButton.push(newBtn);\r\n\r\n            }\r\n            else {\r\n                //Ci sono impegni e creo le varie card\r\n                listImpegni.forEach(element => {\r\n\r\n                    newBtn = new ButtonCard();\r\n                    if (element.SETTORE == SettoreAttivita.settoreCorso) {\r\n\r\n                        newBtn.title = element.DENOMINAZIONE;\r\n                        newBtn.subtitle = Settimana.getLabel(element.DATAORAINIZIO.getDay()) + ' ' + MyDateTime.formatDate(element.DATAORAINIZIO,'DD/MM') + ' alle ' + MyDateTime.formatTime(element.DATAORAINIZIO);\r\n\r\n                        newBtn.nameicon = 'school-outline';\r\n                        newBtn.sloticon = \"start\";\r\n                        newBtn.color = \"primary\";\r\n                        newBtn.iconLink = true;\r\n                        newBtn.functionCod =  \"show\";\r\n                        newBtn.id = element.IDREFER;\r\n                        newBtn.settore = SettoreAttivita.settoreCorso;\r\n                        \r\n                        arButton.push(newBtn);\r\n                    }\r\n                    else if (element.SETTORE == SettoreAttivita.settorePrenotazione){\r\n\r\n                        \r\n                        newBtn.title = element['_DENOMINAZIONE_Location'];\r\n                        newBtn.subtitle = Settimana.getLabel(element.DATAORAINIZIO.getDay()) + ' ' + MyDateTime.formatDate(element.DATAORAINIZIO,'DD/MM') + ' alle ' + MyDateTime.formatTime(element.DATAORAINIZIO);\r\n\r\n                        newBtn.nameicon = 'calendar-outline';\r\n                        newBtn.sloticon = \"start\";\r\n                        newBtn.color = \"primary\";\r\n                        newBtn.iconLink = true;\r\n\r\n                        newBtn.functionCod =  \"show\";\r\n                        newBtn.id =  element.IDREFER + '-' + element.ID;\r\n                        newBtn.settore = SettoreAttivita.settorePrenotazione;\r\n\r\n                        \r\n                \r\n                        arButton.push(newBtn);                        \r\n                    }\r\n\r\n                })\r\n            }\r\n\r\n\r\n        }\r\n        else {\r\n            //Non loggato\r\n            newBtn = new ButtonCard();\r\n            if (registrationInApp) {\r\n\r\n                newBtn.title = 'Registrati o accedi';\r\n                newBtn.subtitle = 'crea il tuo account o accedi';\r\n                newBtn.nameicon = 'person-add-outline';\r\n                newBtn.sloticon = \"start\";\r\n                newBtn.color = \"primary\";\r\n                newBtn.iconLink = true;\r\n                newBtn.functionCod = 'register';\r\n        \r\n                arButton.push(newBtn);\r\n            }\r\n            else {\r\n                newBtn.title = 'Inizia ed accedi';\r\n                newBtn.subtitle = 'accedi al tuo account';\r\n                newBtn.nameicon = 'person-add-outline';\r\n                newBtn.sloticon = \"start\";\r\n                newBtn.color = \"primary\";\r\n                newBtn.iconLink = true;\r\n                newBtn.functionCod = 'login';\r\n        \r\n                arButton.push(newBtn);\r\n            }\r\n        }\r\n\r\n        return arButton;\r\n    }\r\n\r\n    /**\r\n     * Ritorna i Buttoni da mostrare nella Home \r\n     * nella parte dedicata agli Eventi in programma, \r\n     * quando non sono presenti eventi\r\n     * @param params Informazioni per la creazione dei Bottoni\r\n     */\r\n    static getButtonAgendaFromOccupazioni(collOccupazioni: OccupazioneCampi[]): ButtonCard[] {\r\n        let arButton: ButtonCard[] = [];\r\n        let newBtn: ButtonCard;\r\n        \r\n\r\n        if (collOccupazioni) {\r\n            // Occupazioni presenti\r\n            if (collOccupazioni.length != 0) {\r\n                collOccupazioni.forEach(element => {\r\n\r\n                    newBtn = new ButtonCard();\r\n                    newBtn.title = element['_DENOMINAZIONE_Location'];\r\n                    newBtn.subtitle = Settimana.getLabel(element.DATAORAINIZIO.getDay()) + ' ' + MyDateTime.formatDate(element.DATAORAINIZIO,'DD/MM') + ' alle ' + MyDateTime.formatTime(element.DATAORAINIZIO);\r\n\r\n                    newBtn.nameicon = 'calendar-outline';\r\n                    newBtn.sloticon = \"start\";\r\n                    newBtn.color = \"primary\";\r\n                    newBtn.iconLink = true;\r\n\r\n                    newBtn.functionCod =  \"show\";\r\n                    newBtn.id =  element.ID;\r\n                    newBtn.idRefer = element.IDREF;\r\n                    newBtn.settore = element.TIPO;\r\n                    if (newBtn.settore == SettoreAttivita.settoreCorso) {\r\n                        newBtn.nameicon = 'calendar-outline';\r\n                    }\r\n                    else {\r\n                        newBtn.nameicon = 'school-outline';\r\n                    }\r\n                    arButton.push(newBtn);\r\n\r\n                });\r\n            }\r\n        }\r\n\r\n        if (arButton.length == 0) {\r\n\r\n            newBtn = new ButtonCard();\r\n            newBtn.title = 'Nessuna programmazione per la giornata';\r\n            newBtn.subtitle = 'nessun corso o prenotazione';\r\n            newBtn.nameicon = 'calendar-outline';\r\n            newBtn.sloticon = \"start\";\r\n            newBtn.color = \"primary\";\r\n            newBtn.iconLink = false;\r\n            newBtn.functionCod = 'noevents';\r\n    \r\n            arButton.push(newBtn);\r\n        }\r\n\r\n        return arButton;\r\n    }\r\n\r\n    static getButtonAgendaFromPianificazioneCorso(pianificazioneElem: PianificazioneCorso): ButtonCard{\r\n        let buttonElem: ButtonCard = new ButtonCard();\r\n        let datePipe = new DatePipe('it');\r\n\r\n        let strSubtitle = datePipe.transform(pianificazioneElem.DATAORAINIZIO, 'HH:mm') + ' - ' + datePipe.transform(pianificazioneElem.DATAORAFINE, 'HH:mm')\r\n\r\n        buttonElem.title = pianificazioneElem['_DENOMINAZIONE_Corso'];\r\n        buttonElem.subtitle = strSubtitle;\r\n        buttonElem.nameicon = 'school-outline';\r\n        buttonElem.sloticon = 'start';\r\n        buttonElem.iconLink = true;\r\n        buttonElem.color = 'primary'\r\n\r\n\r\n        return buttonElem;\r\n    }\r\n    \r\n}","import { Component, OnInit, Input } from '@angular/core';\r\nimport { AperturaLocation } from '../../../models/aperturalocation.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-aperture',\r\n  templateUrl: './aperture.component.html',\r\n  styleUrls: ['./aperture.component.scss'],\r\n})\r\nexport class ApertureComponent implements OnInit {\r\n\r\n  @Input() myApertura: AperturaLocation = new AperturaLocation();\r\n  colorChip = 'primary';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n  getIcon() {\r\n    let icon = 'close';\r\n    if (this.myApertura.isOpen()) {\r\n      icon = 'flag';\r\n    }\r\n\r\n    return icon;\r\n  }\r\n\r\n}\r\n","<ion-row class=\"ion-padding-start ion-align-items-center row-border\">\r\n  <ion-col size=\"6\">\r\n    {{ myApertura.getLabel() | titlecase}}\r\n  </ion-col>\r\n\r\n  <ion-col size=\"6\" class=\"ion-no-padding\">\r\n    \r\n      <ion-row *ngIf=\"myApertura.DALLE1\" class=\"ion-no-padding\">\r\n        <ion-col class=\"ion-text-center ion-no-padding\">\r\n\r\n          <ion-chip [color]=\"colorChip\">\r\n            <ion-icon \r\n                name=\"time\"></ion-icon>\r\n            <ion-label>{{ myApertura.DALLE1 | date:'HH:mm'}} - {{ myApertura.ALLE1 | date:'HH:mm'}}</ion-label>\r\n          </ion-chip>\r\n        </ion-col>\r\n\r\n      </ion-row>\r\n  \r\n      <ion-row *ngIf=\"myApertura.DALLE2\" class=\"ion-no-padding\">\r\n        <ion-col class=\"ion-text-center ion-no-padding\">\r\n\r\n          <ion-chip [color]=\"colorChip\">\r\n            <ion-icon \r\n                name=\"time\"></ion-icon>\r\n            <ion-label>{{ myApertura.DALLE2 | date:'HH:mm'}} - {{ myApertura.ALLE2 | date:'HH:mm'}}</ion-label>\r\n          </ion-chip>\r\n\r\n        </ion-col>\r\n      </ion-row>\r\n\r\n      <ion-row *ngIf=\" myApertura.isAlwaysOpen\" class=\"ion-no-padding\">\r\n        <ion-col class=\"ion-text-center ion-no-padding\">\r\n\r\n          <ion-chip [color]=\"colorChip\">\r\n            <ion-label>\r\n              SEMPRE APERTO\r\n            </ion-label>\r\n          </ion-chip>\r\n\r\n        </ion-col>\r\n      </ion-row>\r\n  \r\n      <ion-row *ngIf=\"!myApertura.isOpen()\" class=\"ion-no-padding\">\r\n        <ion-col class=\"ion-text-center ion-no-padding\">\r\n          <ion-chip color=\"danger\">\r\n            <ion-label>\r\n              CHIUSO\r\n            </ion-label>\r\n          </ion-chip>\r\n        </ion-col>\r\n      </ion-row>\r\n    \r\n\r\n  </ion-col>\r\n\r\n</ion-row>\r\n\r\n\r\n\r\n\r\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { CorsoValutazioneLivello } from 'src/app/models/corsovalutazionelivello.model';\nimport { Livello } from 'src/app/models/livello.model';\n\n@Component({\n  selector: 'app-level-setter',\n  templateUrl: './level-setter.component.html',\n  styleUrls: ['./level-setter.component.scss'],\n})\nexport class LevelSetterComponent implements OnInit {\n\n  @Input() readOnly: boolean = false;\n  @Input() listLivelli: Livello[] = [];\n  @Input() set valutazione(value: CorsoValutazioneLivello) {\n\n      this.myValutazione = value;\n\n      if (this.myValutazione) {\n        if (this.myValutazione.IDLIVELLOFINALE) {\n          this.idSelectedLevel = this.myValutazione.IDLIVELLOFINALE;\n        }\n        else {\n          this.idSelectedLevel = this.myValutazione.IDLIVELLOENTRATA;\n        }\n      }\n\n      //Controllo la situazione Livello Finale\n      this.setFlagComplete();\n\n  };\n  \n  \n  @Output() onChoose = new EventEmitter<CorsoValutazioneLivello>();\n\n  \n  //ID Livello Selezionato\n  idSelectedLevel: string;\n\n  //Elemento collassato\n  collapsed: boolean = true;\n\n  //Record della Valutazione\n  myValutazione: CorsoValutazioneLivello;\n\n  //Indica se è stato impostato un livello Finale\n  flagComplete: boolean = false;\n\n  /**\n   * Costruisce un elemento stile Accordion per la scelta del Livello\n   * \n   */\n  constructor() { }\n\n  /**\n   * Apre o Chiude la lista dei Livelli\n   */\n  onChangeCollapse() {\n    //Se non sono in Sola lettura\n    if (!this.readOnly) {\n\n      if (this.collapsed) {\n        this.collapsed = false;\n      }\n      else {\n        this.collapsed = true;\n      }\n\n    }\n  }\n\n  ngOnInit() {}\n\n\n  /**\n   * Imposta il flag che indica che è stato completato con \n   * il livello finale l'elemento\n   */\n  setFlagComplete() {\n    let value: boolean = false;\n    if (this.myValutazione && this.myValutazione.IDLIVELLOFINALE && this.myValutazione.IDLIVELLOFINALE.length != 0) {\n      value = true;\n    }\n\n    this.flagComplete = value;\n  }\n\n  /**\n   * Ritorna una stringa che rappresenta idSelectedLevel\n   */\n  getLabelLevel(idLevel: string): string {\n    let label: string = 'non definito';\n    let myLevel: Livello;\n    if (idLevel) {\n\n      myLevel = this.listLivelli.find(element => {\n        return element.ID == idLevel\n      });\n      if (myLevel) {\n        label = myLevel.DENOMINAZIONE;\n      }\n    }\n\n    return label;\n  }\n\n  /**\n   * Modificato il valore nel Radio Group\n   * @param value Valore Cambiato\n   */\n  onChangeRadioGroup() {\n    this.setFlagComplete();\n\n    //Segnalo la modifica del valore\n    this.onChoose.emit(this.myValutazione);\n  }\n\n}\n","<ion-list *ngIf=\"myValutazione\" class=\"ion-no-margin\">\n\n  <ion-item-group color=\"light\">\n\n    <ion-item \n      lines=\"none\"\n      \n      color=\"light\" \n      (click)=\"onChangeCollapse()\">\n\n      <ion-icon \n          slot=\"start\" \n          [color]=\"flagComplete ? 'success':'warning'\" \n          [name]=\"flagComplete ? 'checkmark-done-circle-outline':'alert-circle-outline'\"></ion-icon>\n          \n\n      <ion-label>\n        <h2>{{myValutazione.NOMINATIVO}}</h2>\n        <p>\n          <ion-text color=\"medium\" style=\"font-style: italic;\">Attuale:&nbsp;{{getLabelLevel(myValutazione.IDLIVELLOENTRATA)}}</ion-text>\n        </p>\n        <p>\n          <ion-text color=\"medium\" style=\"font-style: italic;\">Conseguito:&nbsp;</ion-text>\n          <ion-text color=\"medium\" style=\"font-style: italic;font-weight: bold;\">{{getLabelLevel(myValutazione.IDLIVELLOFINALE)}}</ion-text>\n        </p>\n      </ion-label>\n\n      <ion-icon \n          *ngIf=\"!readOnly\"\n          slot=\"end\" \n          [name]=\"collapsed ? 'chevron-down-outline':'chevron-up-outline'\">\n      </ion-icon>\n      \n    </ion-item>\n  </ion-item-group>\n\n  <ion-radio-group \n    (ionChange)=\"onChangeRadioGroup()\"\n    [(ngModel)]=\"myValutazione.IDLIVELLOFINALE\" *ngIf=\"!collapsed\">\n\n    <ion-item *ngFor=\"let level of listLivelli\">\n      <ion-label>{{level.DENOMINAZIONE}}</ion-label>\n      <ion-radio \n          [disabled]=\"readOnly\"\n          [value]=\"level.ID\" \n          slot=\"start\" \n          color=\"success\"></ion-radio>\n    </ion-item>\n  </ion-radio-group>\n\n</ion-list>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { stringify } from 'querystring';\r\nimport { MyDateTime } from 'src/app/library/models/mydatetime.model';\r\nimport { ItemCalendario } from 'src/app/models/itemCalendario.model';\r\nimport { PianificazioneCorso } from 'src/app/models/pianificazionecorso.model';\r\n\r\n@Component({\r\n  selector: 'app-item-calendario',\r\n  templateUrl: './item-calendario.component.html',\r\n  styleUrls: ['./item-calendario.component.scss'],\r\n})\r\nexport class ItemCalendarioComponent implements OnInit {\r\n\r\n  @Input() params : ItemCalendario = new ItemCalendario();\r\n  @Input() showDate: boolean = false;\r\n  @Output() click: EventEmitter<any> = new EventEmitter<any>()\r\n\r\n  TipoBadge: typeof TipoBadge = TipoBadge\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n  onClick(){\r\n    this.click.emit();\r\n  }\r\n\r\n\r\n  get tipoBadge():TipoBadge{\r\n    let tipo: TipoBadge;\r\n\r\n    if (this.params.badgeText && this.params.badgeText.length > 0){\r\n      if(this.params.badgeIcon && this.params.badgeIcon.length > 0){\r\n        //abbiamo entrambi \r\n        tipo = TipoBadge.iconAndText;\r\n      }\r\n      else{\r\n        // abbiamo solo il testo\r\n        tipo = TipoBadge.onlyText;\r\n      }\r\n    }\r\n    else if(this.params.badgeIcon && this.params.badgeIcon.length > 0){\r\n      //abbiamo solo l'icona\r\n      tipo = TipoBadge.onlyIcon;\r\n    }\r\n\r\n    else{\r\n      //non abbiamo nulla\r\n      tipo = TipoBadge.noBadge;\r\n    }\r\n\r\n\r\n    return tipo\r\n  }\r\n\r\n  get badgeClass():string{\r\n    let myCssClass: string = '';\r\n\r\n    if(this.tipoBadge == TipoBadge.onlyIcon){\r\n      myCssClass = 'badge-icon-only';\r\n    }\r\n    else if(this.tipoBadge == TipoBadge.iconAndText){\r\n      myCssClass = 'badge-icon-text';\r\n    }\r\n\r\n    return myCssClass;\r\n  }\r\n\r\n    /**\r\n   * Ritorna il colore da applicare alla riga verticale che separa \r\n   * la colonna Sinistra dalla destra\r\n   * @param elItem \r\n   */\r\n  getClassColorColumn(elItem: ItemCalendario):string {\r\n      let color = 'undef';\r\n      let dataitem: Date;\r\n\r\n      let today: Date = new Date(MyDateTime.formatDateISO(new Date));\r\n\r\n      if (elItem && elItem.oraInizio) {\r\n\r\n          dataitem = MyDateTime.getOnlyDate(elItem.oraInizio);\r\n\r\n        if (dataitem < today) {\r\n          //Passata\r\n          color='past';\r\n        }\r\n        else if (dataitem > today) {\r\n          color = 'future'\r\n        }\r\n        else {\r\n          color = 'today';\r\n        }\r\n      }\r\n  \r\n      return color;\r\n    }\r\n\r\n\r\n}\r\n\r\nenum TipoBadge{\r\n  onlyIcon = 0,\r\n  onlyText = 1,\r\n  iconAndText = 2,\r\n  noBadge = 3\r\n}\r\n","  <div class=\"custom-element\">\r\n    <ion-grid class=\"ion-no-padding\">\r\n      <ion-row class=\"ion-align-items-center\">\r\n        <ion-col class=\"ion-no-padding col-left\" size=\"auto\">\r\n          <ion-label class=\"left-label\">\r\n            <h4>{{params.oraInizio | date: 'HH.mm'}}</h4>\r\n            <h4>{{params.oraFine | date: 'HH.mm'}}</h4>\r\n          </ion-label>\r\n        </ion-col>\r\n        <ion-col \r\n            class=\"ion-no-padding col-center\" \r\n            [ngClass]=\"getClassColorColumn(params)\">\r\n          <ion-label>\r\n            <p>{{params.oraInizio | date: 'EEE dd/MM/yyyy'}}</p>\r\n            <h2 *ngIf=\"params.riga1Text\">{{params.riga1Text}}</h2>\r\n            <h3 *ngIf=\"params.riga2Text\">{{params.riga2Text}}</h3>\r\n            <h3 *ngIf=\"params.riga3Text\">{{params.riga3Text}}</h3>\r\n          </ion-label>\r\n        </ion-col>\r\n        <ion-col \r\n              class=\"ion-no-padding col-right\">\r\n          <ion-badge \r\n            *ngIf=\"tipoBadge != TipoBadge.noBadge\"\r\n            [color]=\"params.badgeColor\"\r\n            [class]=\"badgeClass\"\r\n          >\r\n            <ion-icon *ngIf=\"tipoBadge == TipoBadge.iconAndText || tipoBadge == TipoBadge.onlyIcon\" [name]=\"params.badgeIcon\"></ion-icon>\r\n            <span *ngIf=\"tipoBadge == TipoBadge.iconAndText || tipoBadge == TipoBadge.onlyText\">\r\n              {{params.badgeText}}\r\n            </span>\r\n          </ion-badge>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </div>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-alert-input-prezzo',\r\n  templateUrl: './alert-input-prezzo.component.html',\r\n  styleUrls: ['./alert-input-prezzo.component.scss'],\r\n})\r\nexport class AlertInputPrezzoComponent implements OnInit {\r\n\r\n  @Input() placeholder: string;\r\n  @Input() description: string;\r\n  @Input() btnText: string;\r\n\r\n  @Output() onDismiss = new EventEmitter<number>();\r\n\r\n  value: number;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n\r\n  onClickBtn(){\r\n    this.onDismiss.emit(this.value);\r\n  }\r\n\r\n  onClickBackdrop(){\r\n    this.onDismiss.emit(undefined);\r\n  }\r\n\r\n}\r\n","<div class=\"input-prezzo\">\r\n  <ion-backdrop [tappable]=\"true\" [visible]=\"true\" [stopPropagation]=\"true\" (ionBackdropTap)=\"onClickBackdrop()\"></ion-backdrop>\r\n  <ion-card>\r\n    <ion-card-content>\r\n      <p *ngIf=\"description\">\r\n        <ion-icon name=\"information-circle-outline\" color=\"primary\"></ion-icon>\r\n        <span>{{description}}</span>\r\n      </p>\r\n      <ion-input clearInput=\"true\" inputmode=\"numeric\"  [placeholder]=\"placeholder | currency:'EUR'\" [(ngModel)]=\"value\"></ion-input>\r\n      <ion-button expand=\"block\" color=\"primary\" fill=\"clear\" (click)=\"onClickBtn()\">\r\n        {{btnText? btnText : 'Conferma'}}\r\n      </ion-button>\r\n    </ion-card-content>\r\n  </ion-card>\r\n</div>","<ion-grid class=\"ion-no-padding ion-no-margin\">\r\n  <ion-row class=\" date-row\">\r\n    <ion-col (click)=\"showPickerDate()\" size=\"\"  class=\"ion-text-center\">\r\n      <div class=\"custom-div\">\r\n      <h5 class=\"ion-no-margin custom-h5 ion-text-center\">\r\n        <span> {{ activeDay | date: \"MMMM yyyy\" | titlecase}}</span>\r\n        <ion-icon name=\"chevron-down\" color=\"primary\" class=\"\"></ion-icon>\r\n      </h5>\r\n    </div>\r\n    </ion-col>\r\n    <!-- <ion-col (click)=\"showPickerDate()\" size=\"5\" class=\"ion-no-padding ion-no-margin ion-text-left\">\r\n    </ion-col> -->\r\n  </ion-row>\r\n\r\n  <ion-row class=\"ion-no-margin ion-padding-horizontal\">\r\n  <ion-slides [options]=\"sliderOpts\" #sliderDays>\r\n    <ion-slide *ngFor=\"let day of listDay\">\r\n\r\n\r\n        <ion-button \r\n            class=\"ion-no-padding ion-no-margin\"\r\n            shape=\"round\" \r\n            size = \"large\"\r\n            [fill]=\"getFillButton(day)\" \r\n            color=\"secondary\"\r\n            (click)=\"onClickButton(day)\">\r\n          {{ day }}\r\n        </ion-button>\r\n\r\n        \r\n    </ion-slide>\r\n  </ion-slides>\r\n  </ion-row>\r\n</ion-grid>\r\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport * as moment from \"moment\";\r\nimport { IonSlides, PickerController } from '@ionic/angular';\r\nimport { PickerOptions, PickerButton, PickerColumn, PickerColumnOption } from '@ionic/core';\r\nimport { ValueList, Mesi } from 'src/app/models/valuelist.model';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-calendarscroll',\r\n  templateUrl: './calendarscroll.component.html',\r\n  styleUrls: ['./calendarscroll.component.scss'],\r\n})\r\nexport class CalendarscrollComponent implements OnInit {\r\n\r\n\r\n  @Input() activeDay = new Date();\r\n  @Output() onChangeActiveDay = new EventEmitter<Date>();\r\n  @ViewChild('sliderDays')sliderDays: IonSlides;\r\n\r\n  listDay: number[] = [];\r\n  listMesi: ValueList[] = []; //Elenco dei mesi da visualizzare nel Picker\r\n\r\n  sliderOpts = {\r\n    slidesPerView: 15,\r\n    spaceBetween: 3,\r\n    initialSlide: 1, //Dovrei farla variabile\r\n    // Responsive breakpoints   \r\n   breakpoints: {  \r\n   \r\n      // when window width is <= 320px     \r\n      320: {       \r\n         slidesPerView: 5,\r\n         spaceBetween: 1     \r\n      },     \r\n      // when window width is <= 480px     \r\n      480: {       \r\n         slidesPerView: 7,       \r\n         spaceBetween: 3     \r\n      },   \r\n  \r\n      // when window width is <= 640px     \r\n      640: {       \r\n         slidesPerView: 10,       \r\n         spaceBetween: 1     \r\n      },\r\n      1000: {       \r\n        slidesPerView: 15,       \r\n        spaceBetween: 1     \r\n     } \r\n  \r\n   } \r\n  }\r\n\r\n  constructor(private pickController:PickerController) { \r\n    \r\n    this.setStartSlide();\r\n    \r\n    //Creo l'Array dei Mesi che utilizzero nel Picker Date\r\n    this.listMesi = ValueList.getArray(Mesi);\r\n  }\r\n\r\n  /**\r\n   * Imposta la Slide del giorno da mostrare a seconda del ActiveDay\r\n   */\r\n  setStartSlide() {\r\n      //Prendo il giorno attivo -1\r\n      let startSlide = this.activeDay.getDate() - 1;\r\n      //Sottraggo 2 per dare più respiro\r\n      startSlide -= 2;\r\n      if (startSlide < 0) {\r\n        startSlide = 0\r\n      }\r\n\r\n      this.sliderOpts.initialSlide = startSlide;\r\n      \r\n  }\r\n\r\n  /**\r\n   * Si posiziona sulla Slide richiesta\r\n   * @param indexSlideZeroBased Indice della Slide\r\n   */\r\n  goToSlide(indexSlideZeroBased: number) {\r\n    if (this.sliderDays) {\r\n      this.sliderDays.slideTo(indexSlideZeroBased);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setListDay();\r\n  }\r\n\r\n\r\n  /* Ricava tutti i giorni del mese presente in activeDay */\r\n  setListDay() {\r\n    let endDay = 30;\r\n    let endWrapper = moment(new Date(this.activeDay.getFullYear(), this.activeDay.getMonth(), 1)).add(1, 'M');\r\n    endWrapper.subtract(1,'day');\r\n    endDay = endWrapper.date();\r\n\r\n    this.listDay = [];\r\n    endDay += 1; //Incremento EndDay per usare la condizione <\r\n    for (let index = 1; index < endDay; index++) {\r\n      this.listDay.push(index);\r\n    }\r\n  }\r\n\r\n  // Ritorna il colore del Button\r\n  getFillButton(day) {\r\n    let fill = 'outline';\r\n    if (this.activeDay.getDate() == day) {\r\n      fill = 'solid';\r\n    }\r\n\r\n    return fill;\r\n  }\r\n\r\n  //Bottone del giorno premuto\r\n  onClickButton(day) {\r\n    let anno = this.activeDay.getFullYear();\r\n    let mese = this.activeDay.getMonth();\r\n    let giorno = day;\r\n    this.activeDay = new Date(anno, mese, giorno);\r\n\r\n    //Lancio evento di cambio giorno\r\n    this.onChangeActiveDay.emit(this.activeDay);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Usato per creare la colonna del mese del ion picker\r\n   * @param meseZeroBased è il numero del Mese Zero Base (0 = Gennaio)\r\n   */\r\n  initColumnMesi(meseZeroBased: number): PickerColumnOption[] {\r\n    let optionColMesi: PickerColumnOption[] = [];\r\n    for (let index = 0; index < this.listMesi.length; index++) {\r\n      const element = this.listMesi[index];\r\n      let isDisabled = (index >= meseZeroBased ? false:true);\r\n\r\n      let pickColMese: PickerColumnOption = {\r\n        text: element.description,\r\n        value: element.value,\r\n        disabled: isDisabled\r\n        \r\n      }\r\n      optionColMesi.push(pickColMese);\r\n    }    \r\n\r\n    return optionColMesi;\r\n  }\r\n\r\n  /**\r\n   * Crea la colonna degli anni\r\n   */\r\n  initColumnAnni(): PickerColumnOption[] {\r\n    //Creo l'elenco sulla colonna dell'Anno\r\n    let optionColAnni: PickerColumnOption[] = [];\r\n    let startAnno = (new Date()).getFullYear();\r\n    for (let index = startAnno; index < startAnno + 5 ; index++) {\r\n\r\n\r\n      let pickColAnno: PickerColumnOption = {\r\n        text: index + '',\r\n        value: index\r\n      }\r\n\r\n      optionColAnni.push(pickColAnno);\r\n      \r\n      \r\n    }\r\n\r\n    return optionColAnni;\r\n  }\r\n\r\n  /**\r\n   * Crea l'insieme delle colonne da passare al Picker\r\n   * @param optColMesi       Colonna del Mese\r\n   * @param indexActiveMese  Index Selezionato Mese\r\n   * @param optColAnni       Colonna degli Anni\r\n   * @param indexActiveAnno  Index Selezionato Anno\r\n   */\r\n  initColumnsPicker(optColMesi: PickerColumnOption[], indexActiveMese: number, optColAnni: PickerColumnOption[], indexActiveAnno:number): PickerColumn[] {\r\n        // Colonne del Picker\r\n        let pickColumns: PickerColumn[] = [\r\n          {\r\n            name: 'mese',\r\n            options: optColMesi,\r\n            selectedIndex: indexActiveMese\r\n          },\r\n          {\r\n            name: 'anno',\r\n            options: optColAnni,\r\n            selectedIndex: indexActiveAnno\r\n          }];\r\n\r\n      return pickColumns;\r\n  }\r\n  \r\n  /**\r\n   * Visualizza il Picker Date\r\n   */\r\n  showPickerDate(): void {\r\n    let _this = this;\r\n    // Indici delle voci selezionate\r\n    let indexActiveMese = 0;\r\n    let indexActiveAnno = (_this.activeDay.getFullYear() - (new Date()).getFullYear());\r\n    const myMese = (new Date()).getMonth();\r\n\r\n    let pickButtons: PickerButton[] = [{\r\n      text: 'Conferma',\r\n      handler: (data: any) => {\r\n        //Recupero Mese e Anno\r\n        let m = data.mese.value;\r\n        let a = data.anno.value;\r\n\r\n        //Imposto la nuova Data attiva\r\n        _this.setNewActiveDateFromPicker(m, a);\r\n        \r\n      }\r\n      },\r\n      {\r\n        role: 'cancel',\r\n        text: 'Annulla'\r\n      }];\r\n\r\n    //Creo l'elenco sulla colonna del Mese\r\n    let optionColMesi: PickerColumnOption[] = this.initColumnMesi(myMese);\r\n    \r\n    //Creo l'elenco sulla colonna dell'Anno\r\n    let optionColAnni: PickerColumnOption[] = [];\r\n    optionColAnni = this.initColumnAnni();\r\n\r\n    \r\n    // Colonne del Picker\r\n    let pickColumns = this.initColumnsPicker(optionColMesi, indexActiveMese, optionColAnni, indexActiveAnno);\r\n\r\n\r\n    //Opzioni del Picker\r\n    let pickOptions: PickerOptions = {\r\n      columns: pickColumns,\r\n      buttons: pickButtons,\r\n      keyboardClose: true\r\n    }\r\n\r\n    //Mostro il Picker\r\n    this.pickController\r\n          .create(pickOptions)\r\n          .then(elPicker => {\r\n            elPicker.addEventListener('ionPickerColChange', async (event:any) => {\r\n              const data = event.detail;\r\n              \r\n              //Cambiare la colonna dei Mesi a seconda dell'anno\r\n              if (data.name == 'anno') {\r\n                    const myAnno = (new Date()).getFullYear();\r\n                    const myMese = (new Date()).getMonth();\r\n                    let optionColMesi: PickerColumnOption[] = [];\r\n                    let optionColAnni: PickerColumnOption[] = [];\r\n                    let pickColumns: PickerColumn[] = [];\r\n\r\n                    //Indice di posizione dell'array\r\n                    const colSelectedIndex = data.selectedIndex;\r\n                    //Tutto il contenuto della colonna \r\n                    const colOptions = data.options;\r\n                    //Vediamo quale anno ha scelto\r\n                    const chooseAnno = colOptions[colSelectedIndex].value;\r\n\r\n                    //Creo la Colonna dell'Anno\r\n                    optionColAnni = this.initColumnAnni();\r\n\r\n                    //Stesso Anno attuale devo filtrare i mesi\r\n                    if (chooseAnno == myAnno) {\r\n                      //Devo filtrare i mesi visualizzando solo i mancanti\r\n                      optionColMesi = this.initColumnMesi(myMese);\r\n                    }\r\n                    else {\r\n                      //Tutti i mesi\r\n                      optionColMesi = this.initColumnMesi(0);\r\n                    }\r\n\r\n                    //Unisco le colonne\r\n                    pickColumns = this.initColumnsPicker(optionColMesi, 0, optionColAnni, colSelectedIndex);\r\n                    \r\n\r\n                    //Applico le nuove colonne\r\n                    elPicker.columns = pickColumns;\r\n\r\n                    //Il metodo ForceUpdate non esiste più\r\n                    //elPicker.forceUpdate();\r\n\r\n              }\r\n\r\n            });\r\n            elPicker.present();\r\n          });\r\n  }\r\n\r\n  /**\r\n   * Imposta activeDay sulla base della scelta fatta nel picker\r\n   * @param meseOneBasedNew Numero del Mese (da 1 a 12)\r\n   * @param annoNew Anno scelto\r\n   */\r\n  setNewActiveDateFromPicker(meseOneBasedNew: number, annoNew: number ) {\r\n    let activeM = this.activeDay.getMonth();\r\n    let activeA = this.activeDay.getFullYear();\r\n    let activeG = this.activeDay.getDate();\r\n    let message = '';\r\n    let oggi = new Date();\r\n\r\n\r\n    // message = `Nuovo (M-A): ${meseOneBasedNew} - ${annoNew} / Attuali (M-A): ${activeM} - ${activeA}`;\r\n    // console.log(message);\r\n\r\n    // Cambiato il mese o l'anno\r\n    if ((meseOneBasedNew - 1) !== activeM || annoNew !== activeA) {\r\n      \r\n      //Ci siamo spostati sul mese/anno di oggi\r\n      if ((meseOneBasedNew - 1) == oggi.getMonth() && annoNew == oggi.getFullYear()) {\r\n        \r\n        //Allora spostiamo il giorno scelto a oggi\r\n        activeG = oggi.getDate();\r\n\r\n      }\r\n      else {\r\n        //Lo portiamo al primo del mese\r\n        activeG = 1;\r\n\r\n        // //Qual'e' il giorno piu' alto nel nuovo mese scelto\r\n        // let maxDay = this.getMaxDayInMont((meseOneBasedNew - 1), annoNew);\r\n        // if (activeG > maxDay) {\r\n        //   activeG = maxDay;\r\n        // }\r\n\r\n      }\r\n\r\n\r\n\r\n      //Cambio il Giorno attivo\r\n      this.activeDay = new Date(annoNew, (meseOneBasedNew - 1), activeG);\r\n\r\n      //Ripreparo la lista dei giorni\r\n      this.setListDay();\r\n\r\n      //Si posiziona sulla Slide\r\n      this.goToSlide(this.activeDay.getDate() -1);\r\n\r\n      //Lancio evento di cambio giorno\r\n      this.onChangeActiveDay.emit(this.activeDay);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Ritorna il numero del giorno piu' alto del mese\r\n   * @param meseZeroBase Numero del Mese (o Based)\r\n   * @param anno Anno\r\n   */\r\n  getMaxDayInMont(meseZeroBase: number, anno: number) {\r\n    let newDate = moment(new Date(anno, meseZeroBase, 1));\r\n    newDate.add(1,'month');\r\n    newDate.subtract(1,'day');\r\n\r\n    return newDate.toDate().getDate();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Platform, ActionSheetController } from '@ionic/angular';\r\nimport { AreaPaymentSetting } from 'src/app/models/areapaymentsetting.model';\r\n\r\n@Component({\r\n  selector: 'app-payment-choose',\r\n  templateUrl: './payment-choose.component.html',\r\n  styleUrls: ['./payment-choose.component.scss'],\r\n})\r\nexport class PaymentChooseComponent implements OnInit {\r\n\r\n  //Elenco dei pagamenti accettati\r\n  @Input() arPayment: AreaPaymentSetting[] = [];\r\n  @Output() onPaymentChoosed = new EventEmitter<AreaPaymentSetting>();\r\n  @Input() selectedPayment: AreaPaymentSetting;\r\n\r\n  isMobile = false;\r\n\r\n  constructor(private platform: Platform,\r\n              private actionSheetController: ActionSheetController) { \r\n\r\n    if (platform.is('hybrid')) {\r\n      this.isMobile = true;\r\n    }\r\n    else {\r\n      this.isMobile = false;\r\n    }\r\n  }\r\n\r\n  get itemIcon() {\r\n    let nameIcon = 'cart-outline';\r\n\r\n    if (this.selectedPayment) {\r\n      nameIcon = this.selectedPayment.icon;\r\n    }\r\n\r\n    return nameIcon;\r\n  }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  /**\r\n   * Apertura delle voci di scelta\r\n   * Mobile: ActionSheet\r\n   * Desktop: \r\n   */\r\n  onOpenChoose() {\r\n    let buttonsArray: any[]=[];\r\n    let singleButton: any;\r\n\r\n    if (this.arPayment) {\r\n      if (this.arPayment.length !== 0) {\r\n\r\n        //Popolo i Bottoni\r\n        for (const iterator of this.arPayment) {\r\n          singleButton = {\r\n            text: iterator.label,\r\n            icon: iterator.icon,\r\n            handler: ()=>{\r\n              //Cambio metodo pagamento\r\n              this.onChangePaymentSelection(iterator);\r\n            }\r\n          }\r\n    \r\n          buttonsArray.push(singleButton);\r\n        }\r\n    \r\n        //Pulsante Annulla\r\n        singleButton = {\r\n          text:'Annulla',\r\n          icon:'arrow-undo-sharp',\r\n          role: 'cancel'\r\n        }\r\n        buttonsArray.push(singleButton);\r\n    \r\n        this.actionSheetController.create({\r\n          header: 'Come desideri pagare ?',\r\n          buttons: buttonsArray\r\n        })\r\n        .then(elAction => {\r\n          elAction.present();\r\n        });\r\n\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n\r\n   \r\n\r\n\r\n  /**\r\n   * Cambio di selezione nel pagamento\r\n   * @param value Nuova selezione\r\n   */\r\n  onChangePaymentSelection(value:AreaPaymentSetting) {\r\n    //Memorizzo il pagamento\r\n    this.selectedPayment = value;\r\n\r\n    //Invio l'informazione al padre\r\n    this.onPaymentChoosed.emit(value);\r\n  }\r\n\r\n}\r\n","<!-- NELLA PAGINA DOVE VIENE INNESTATO IL COMPONENTE CIRCONDARLO DENTRO A ION-LIST-->\r\n  <ion-item *ngIf=\"!arPayment.length\" lines=\"none\">\r\n    <ion-label>Pagamento non supportato</ion-label>\r\n  </ion-item>\r\n\r\n  <ion-item \r\n          button\r\n          *ngIf=\"arPayment.length\" \r\n          lines=\"none\" \r\n          [detail]=\"true\"\r\n          (click)=\"onOpenChoose()\">\r\n      <ion-icon slot=\"start\" [name]=\"itemIcon\"></ion-icon>\r\n      <ion-label *ngIf=\"selectedPayment\">{{selectedPayment?.label}}</ion-label>\r\n      <ion-label *ngIf=\"!selectedPayment\">Scegli metodo di pagamento</ion-label>\r\n  </ion-item>\r\n\r\n\r\n\r\n\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Settimana } from 'src/app/models/settimana.model';\n\n@Component({\n  selector: 'app-settimana-block',\n  templateUrl: './settimana-block.component.html',\n  styleUrls: ['./settimana-block.component.scss'],\n})\nexport class SettimanaBlockComponent implements OnInit {\n\n  constructor() { \n\n    \n  }\n\n  @Input() listDays: Settimana[] = [];\n  @Input() colorSelected: string = 'primary';\n  @Input() colorNotSelected: string = 'secondary';\n  @Input() clickable: boolean = false;\n  @Input() isDesktop: boolean = false;\n  @Output() clickElement: EventEmitter<Settimana> = new EventEmitter();\n\n\n  ngOnInit() {}\n\n  /**\n   * Ritorna il colore da applicare\n   * @param myDay Giornata\n   */\n  getColorDay(myDay: Settimana): string {\n    let myColor = this.colorNotSelected;\n\n    if (myDay && myDay.selected)  {\n      myColor = this.colorSelected;\n    }\n\n    return myColor;\n  }\n\n  /**\n   * Ritorna il Fill da applicare\n   * @param myDay Giornata\n   */\n  getFillDay(myDay: Settimana): string {\n    let myColor = 'outline';\n\n    if (myDay && myDay.selected)  {\n      myColor = 'solid';\n    }\n\n    return myColor;\n  }  \n\n  /**\n   * Ritorna la Label da applicare\n   * @param myDay Giornata\n   */\n   getLabelDay(myDay: Settimana): string {\n\n    let myLabel = '';\n\n    if (this.isDesktop)  {\n      myLabel = myDay.label.toUpperCase();\n    }\n    else {\n      myLabel = myDay.xsLabel.toUpperCase();\n    }\n\n    return myLabel;\n  }   \n\n\n  /**\n   * Evento di click sul button\n   * @param giorno Giorno cliccato\n   */\n  onClickDay(giorno:Settimana) {\n    if (this.clickable) {\n      //Emetto l'evento con il giorno\n      this.clickElement.emit(giorno);\n    }\n  }\n  \n\n}\n","<table \n  class=\"ion-margin-vertical\"\n  style=\"width: 100%\">\n  <tr>\n    <td class=\"ion-text-center\" *ngFor=\"let giorno of listDays\">\n      <ion-button\n        (onClick)=\"onClickDay(giorno)\"\n        [color]=\"getColorDay(giorno)\"\n        size=\"small\"\n        [fill]=\"getFillDay(giorno)\">\n        <span>\n          {{ getLabelDay(giorno) }}\n        </span>\n\n      </ion-button>\n    </td>\n  </tr>\n</table>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ButtonCard } from 'src/app/models/buttoncard.model';\r\n\r\n@Component({\r\n  selector: 'app-button-card',\r\n  templateUrl: './button-card.component.html',\r\n  styleUrls: ['./button-card.component.scss'],\r\n})\r\nexport class ButtonCardComponent implements OnInit {\r\n\r\n  @Input() myButtonCard: ButtonCard = new ButtonCard();\r\n  @Input() smallVersion = false; //Small Version usa H2 e P invece di H1 e H3\r\n  @Input() homeCustodeVersion;\r\n  @Input() disabled = false;\r\n  @Output() clickElement = new EventEmitter<ButtonCard>();\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n  /**\r\n   * Click sull'elemento\r\n   * @param objButtonCard Card scelta\r\n   */\r\n  onClickElement(objButtonCard: ButtonCard) {\r\n    if (objButtonCard) {\r\n      this.clickElement.emit(objButtonCard);\r\n    }\r\n  }\r\n\r\n}\r\n","<ion-card [ngClass]=\"{'card-small-version': smallVersion, 'card-home-custode': homeCustodeVersion}\">\r\n  <ion-item \r\n      [button]=\"myButtonCard.iconLink\" \r\n      (click)=\"onClickElement(myButtonCard)\" \r\n      lines=\"none\"\r\n      [detail] = \"myButtonCard.iconLink\"\r\n      [disabled] = \"myButtonCard.disabled\"\r\n      >\r\n\r\n    <ion-icon \r\n        [slot]=\"myButtonCard.sloticon\" \r\n        [name]=\"myButtonCard.nameicon\" \r\n        [color]=\"myButtonCard.color\"></ion-icon>\r\n\r\n    <ion-label *ngIf=\"!smallVersion\">\r\n      <h2 class=\"ion-text-wrap\">\r\n        {{ myButtonCard.title }}\r\n      </h2>\r\n      <h3 class=\"ion-text-wrap\">\r\n        {{ myButtonCard.subtitle }}\r\n      </h3>\r\n    </ion-label>\r\n\r\n    <ion-label *ngIf=\"smallVersion\">\r\n      <h3 class=\"ion-text-wrap\">\r\n        {{ myButtonCard.title }}\r\n      </h3>\r\n      <p class=\"ion-text-wrap\">\r\n        {{ myButtonCard.subtitle }}\r\n      </p>\r\n    </ion-label>\r\n\r\n  </ion-item>\r\n</ion-card>","import { MyDateTime } from '../library/models/mydatetime.model';\r\nimport { OccupazioneCampi } from './occupazionecampi.model';\r\nimport { PianificazioneCorso } from './pianificazionecorso.model';\r\nimport { SettoreAttivita } from './valuelist.model';\r\n\r\nexport class ItemCalendario{\r\n    oraInizio: Date;\r\n    oraFine: Date;\r\n    riga1Text: string;\r\n    riga2Text: string;\r\n    riga3Text: string;\r\n    badgeText: string;\r\n    badgeColor: string;\r\n\r\n    badgeIcon: string;\r\n\r\n    static getParamsPianificazioneCorso(pianificazioneElem: PianificazioneCorso): ItemCalendario{\r\n\r\n        let paramsItem: ItemCalendario;\r\n\r\n\r\n        paramsItem = new ItemCalendario();\r\n        paramsItem.oraInizio = pianificazioneElem.DATAORAINIZIO;\r\n        paramsItem.oraFine = pianificazioneElem.DATAORAFINE;\r\n        paramsItem.riga1Text = pianificazioneElem['_DENOMINAZIONE_Corso'];\r\n        paramsItem.riga2Text = pianificazioneElem['_DENOMINAZIONE_Location'];\r\n        paramsItem.riga3Text = pianificazioneElem['_DENOMINAZIONE_Campo'];\r\n\r\n        \r\n        paramsItem.badgeText = pianificazioneElem.getDocPropertyInRepository(['IDCORSO','IDLIVELLOENTRATA'],'DENOMINAZIONE');\r\n        \r\n        \r\n        paramsItem.badgeColor = \"primary\";\r\n        return paramsItem;\r\n    }\r\n\r\n    //mi dice se l'impegno a cui si riferisce l'item è già finito\r\n    get isPast(): boolean{\r\n        let now = new Date;\r\n        if (this.oraFine < now){\r\n        return true;\r\n        }\r\n        else{\r\n        return false\r\n        }\r\n    }\r\n\r\n\r\n    static getParamsOccupazioneCampo(occupazioneElem: OccupazioneCampi): ItemCalendario{\r\n        let paramsItem: ItemCalendario = new ItemCalendario();\r\n        paramsItem.oraInizio = occupazioneElem.DATAORAINIZIO;\r\n        paramsItem.oraFine = occupazioneElem.DATAORAFINE;\r\n        if(occupazioneElem.TIPO == SettoreAttivita.settoreCorso){\r\n            paramsItem.riga1Text = occupazioneElem.getDocPropertyInRepository(['IDREF'], 'DENOMINAZIONE');\r\n            paramsItem.badgeIcon = \"school-outline\";\r\n        }\r\n        else if(occupazioneElem.TIPO == SettoreAttivita.settorePrenotazione){\r\n            paramsItem.riga1Text = occupazioneElem.getDocPropertyInRepository(['IDREF'], 'NOMINATIVO');\r\n            paramsItem.badgeIcon = \"calendar-outline\"\r\n        }\r\n        paramsItem.riga2Text = `${occupazioneElem['_DENOMINAZIONE_Location']} - ${occupazioneElem['_DENOMINAZIONE_Campo']}`;\r\n        paramsItem.riga3Text = MyDateTime.formatDate(occupazioneElem.DATAINIZIO, 'DD/MM/YYYY');\r\n\r\n        paramsItem.badgeColor = \"primary\";\r\n\r\n        return paramsItem;\r\n    }\r\n\r\n    \r\n}","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { PickerController } from '@ionic/angular';\r\nimport { PickerOptions, PickerButton, PickerColumn, PickerColumnOption } from '@ionic/core';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-player-number',\r\n  templateUrl: './player-number.component.html',\r\n  styleUrls: ['./player-number.component.scss'],\r\n})\r\nexport class PlayerNumberComponent implements OnInit {\r\n  \r\n  @Input() numPlayer: number;\r\n  maxPlayerIcon: number= 6;\r\n  maxPlayers:number=30;\r\n\r\n\r\n  @Output() changeNumPlayer= new EventEmitter<Number>();\r\n   \r\n  icone : number[] = [];\r\n  \r\n  constructor(private pickerController: PickerController) {\r\n  }\r\n  \r\n  ngOnInit() {\r\n    this.initIcone();\r\n    \r\n  }\r\n  \r\n  initIcone(){\r\n    // 6 FACCE e 1 PLUS\r\n    for(let index=0; index<=5; index++)\r\n    {\r\n      this.icone[index] = index+1;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Invia alla pagina il nuovo numero player\r\n   * @param nPlayer Numero Player\r\n   */\r\n  onClickPlayer(nPlayer, event:any)\r\n  {\r\n    this.changeNumPlayer.emit(nPlayer);\r\n  }\r\n\r\n  /**\r\n   * invia alla pagina la richiesta di aggiunta giocatori\r\n   */\r\n  onClickPlusPlayer()\r\n  {\r\n    let _this=this;\r\n    //array di bottoni del picker (per ora vuoto)\r\n    let pickerButtons:PickerButton[]=[\r\n      {\r\n        text: 'Conferma',\r\n        handler: (nPlayers)=>{\r\n        _this.changeNumPlayer.emit(nPlayers.column.value);\r\n        }\r\n      },\r\n      {\r\n        text: 'Annulla',\r\n        role: 'cancel'\r\n      }\r\n    ];\r\n    \r\n    //Valori della colonna \r\n    let pickerValues: PickerColumnOption[]= [];\r\n    for (let i=(this.maxPlayerIcon+1);i<this.maxPlayers;i++)\r\n    {\r\n      let pickerValue : PickerColumnOption ={\r\n        text: String(i),\r\n        value: i\r\n      }\r\n      pickerValues.push(pickerValue);\r\n    }\r\n\r\n    //Intestazione della colonna\r\n    let pickerColumns: PickerColumn[]=[{\r\n      name: 'column',\r\n      options: pickerValues\r\n    }]\r\n\r\n    //caratteristiche del picker\r\n    let pickerOptions: PickerOptions={\r\n      columns: pickerColumns,\r\n      buttons: pickerButtons,\r\n      keyboardClose: true\r\n    }\r\n\r\n    this.pickerController\r\n            .create(pickerOptions)\r\n            .then(picker=>{\r\n              picker.present()\r\n            })\r\n\r\n\r\n\r\n  }\r\n\r\n  \r\n  \r\n}\r\n\r\nexport enum typeIcon {\r\n  player=10,\r\n  add=20\r\n} ","<ion-card>\r\n  <ion-grid>\r\n    <ion-row class=\"ion-align-items-center\">\r\n      <ion-col size=\"3\"class=\"ion-text-center ion-no-padding\">\r\n          <ion-row>\r\n            <ion-col size=\"12\"  class=\"ion-no-padding\">\r\n              <ion-icon name=\"person-circle\" color=\"secondary\" class=\"player-indicator-icon\"></ion-icon>\r\n            </ion-col>\r\n          </ion-row>\r\n          <ion-row>\r\n            <ion-col size=\"12\" class=\"ion-no-padding\">\r\n              <ion-label>{{numPlayer}} {{numPlayer>1? 'Giocatori':'Giocatore'}}</ion-label>\r\n            </ion-col>\r\n          </ion-row>\r\n      </ion-col>\r\n      <ion-col size=\"7\" class=\"left-border ion-no-padding\">\r\n              <ion-grid class=\"ion-no-padding\">\r\n                <ion-row>\r\n                  <ion-col size=\"4\" *ngFor=\"let icona of icone\" class=\"ion-no-padding\">\r\n                    <ion-button class=\"player-buttons\" [color]=\"icona<=numPlayer? 'secondary' : 'light'\" shape=\"round\" (click)=\"onClickPlayer(icona, $event)\">\r\n                      <ion-icon  class=\"player-icons\" name=\"person\" slot=\"icon-only\"></ion-icon>\r\n                    </ion-button>\r\n                    <!-- <ion-icon button=\"true\" class=\"players\" name=\"person-circle\" [color]=\"icona<=numPlayer? 'primary' : 'light'\" (click)=\"onClickPlayer(icona, $event)\"></ion-icon> -->\r\n                  </ion-col>\r\n                </ion-row>\r\n              </ion-grid>\r\n      </ion-col>\r\n      <ion-col size=\"2\" class=\"ion-no-padding\">\r\n        <ion-button class=\"add-buttons\" [color]=\"numPlayer>maxPlayerIcon? 'secondary' : 'light'\" shape=\"round\" (click)=\"onClickPlusPlayer()\">\r\n          <ion-icon  class=\"add-icons\" name=\"add\"></ion-icon>\r\n        </ion-button>\r\n        <!-- <ion-icon name=\"add-circle\" class=\"add\" button [color]=\"numPlayer>maxPlayerIcon? 'primary' : 'light'\" (click)=\"onClickPlusPlayer()\"></ion-icon> -->\r\n      </ion-col>\r\n      \r\n    </ion-row>\r\n  </ion-grid>\r\n\r\n</ion-card>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n//TODO: componente dichiarato momentaneamente nell'home.module per evitare errori, da rimuovere\r\n\r\n@Component({\r\n  selector: 'app-circular',\r\n  templateUrl: './circular.component.html',\r\n  styleUrls: ['./circular.component.scss'],\r\n})\r\n\r\nexport class CircularComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  open = false;\r\n\r\n  ngOnInit() {}\r\n\r\n  switchMenu() {\r\n    this.open = !this.open;\r\n  }\r\n}\r\n","<button \r\n  class=\"cn-button\" \r\n  id=\"cn-button\"\r\n  (click)=\"switchMenu()\">\r\n  <div style=\"display: flex; align-items: center;\">\r\n    <span>Accedi</span>\r\n  </div>\r\n</button>\r\n\r\n<!-- <div class=\"cn-wrapper\" id=\"cn-wrapper\" [ngClass]=\"{'opened-nav': open}\">\r\n   <ul>\r\n       <li>\r\n         <a href=\"#\">\r\n           <ion-icon name=\"image\"></ion-icon>\r\n         </a>\r\n        </li>\r\n\r\n        <li>\r\n          <a href=\"#\">\r\n            <ion-icon name=\"image\"></ion-icon>\r\n          </a>\r\n        </li>\r\n\r\n        <li>\r\n          <a href=\"#\">\r\n            <ion-icon name=\"image\"></ion-icon>\r\n          </a>\r\n        </li>\r\n\r\n        <li>\r\n          <a href=\"#\">\r\n            <ion-icon name=\"image\"></ion-icon>\r\n          </a>\r\n        </li>\r\n\r\n        <li>\r\n          <a href=\"#\">\r\n            <ion-icon name=\"image\"></ion-icon>\r\n          </a>\r\n        </li>\r\n   </ul>\r\n</div>\r\n<div id=\"cn-overlay\" class=\"cn-overlay\"></div> -->\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-advertising',\r\n  templateUrl: './advertising.component.html',\r\n  styleUrls: ['./advertising.component.scss'],\r\n})\r\nexport class AdvertisingComponent implements OnInit {\r\n\r\n//TODO: componente dichiarato momentaneamente nell'home.module per evitare errori, da rimuovere\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","<p>\r\n  advertising works!\r\n</p>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Location } from 'src/app/models/location.model';\r\nimport { StartConfiguration } from 'src/app/models/start-configuration.model';\r\nimport { TipoSocieta } from 'src/app/models/valuelist.model';\r\n\r\n@Component({\r\n  selector: 'app-centri',\r\n  templateUrl: './centri.component.html',\r\n  styleUrls: ['./centri.component.scss'],\r\n})\r\nexport class CentriComponent implements OnInit {\r\n\r\n  @Input() location: Location = new Location();\r\n  @Output() clickPrenota = new EventEmitter<Location>();\r\n  @Output() clickLocation = new EventEmitter<Location>();\r\n  @Input() myStartConfig: StartConfiguration = new StartConfiguration();\r\n\r\n  constructor() {\r\n    \r\n    \r\n   }\r\n\r\n  ngOnInit() {}\r\n\r\n  onClickFavorite()\r\n  {\r\n    this.location.FAVORITE=!this.location.FAVORITE;\r\n  }\r\n\r\n  // Lancio l'evento di Click di Prenotazione\r\n  onClickPrenota() {\r\n    this.clickPrenota.emit(this.location);\r\n  }\r\n\r\n  /**\r\n   * Lancio l'evento di Click per la scheda Location\r\n   */\r\n  onClickLocation(event:any) {\r\n    this.clickLocation.emit(this.location);\r\n  }\r\n\r\n  /**\r\n   * Ritorna il testo dell'indirizzo, in caso non fosse presente \r\n   * ritorna l'etichetta del tipo di società\r\n   */\r\n  getTextIndirizzo() {\r\n    let testo = 'Centro'\r\n    let setStandard = false;\r\n\r\n    //Imposto la frase standard\r\n    setStandard = true;\r\n\r\n    if (this.location && this.location.INDIRIZZO) {\r\n      if (this.location.INDIRIZZO.length !== 0) {\r\n        setStandard = false;\r\n        testo = this.location.INDIRIZZO;  \r\n      }  \r\n    }\r\n\r\n\r\n    if (setStandard) {\r\n      if (this.myStartConfig && this.myStartConfig.gruppo) {\r\n\r\n        if (this.myStartConfig.gruppo) {\r\n  \r\n          switch (this.myStartConfig.gruppo.TIPOGRUPPO) {\r\n            case TipoSocieta.sportiva:\r\n              testo = 'Centro Sportivo';\r\n              break;\r\n  \r\n            case TipoSocieta.formazione:\r\n                testo = 'Centro di Formazione';\r\n                break;\r\n          \r\n            default:\r\n              break;\r\n          }\r\n  \r\n        }\r\n      }\r\n    }\r\n\r\n    return testo;\r\n  }\r\n\r\n  getUrlCoverImage() {\r\n    let tipoSocieta: TipoSocieta;\r\n    let urlImage = '';\r\n    if (this.myStartConfig && this.myStartConfig.gruppo) {\r\n      tipoSocieta = this.myStartConfig.gruppo.TIPOGRUPPO;\r\n    }\r\n\r\n    urlImage = this.location.getUrlImage(tipoSocieta);\r\n\r\n    return urlImage;\r\n  }\r\n\r\n\r\n}\r\n","<ion-card \r\n      mode=\"ios\" \r\n      button=\"true\"\r\n      (click)=\"onClickLocation($event); $event.stopPropagation();\">\r\n\r\n  <img [src]=\"getUrlCoverImage()\">\r\n\r\n  <ion-fab \r\n    horizontal=\"start\" \r\n    vertical=\"top\"\r\n    *ngIf=\"location.ENABLEPRENOTAZIONI\">\r\n    <ion-button \r\n        color=\"danger\" \r\n        (click)=\"onClickPrenota(); $event.stopPropagation();\">\r\n      <ion-icon \r\n          slot=\"start\" \r\n          name=\"calendar-outline\">\r\n      </ion-icon>\r\n        PRENOTA\r\n    </ion-button>\r\n  </ion-fab>\r\n\r\n\r\n  <ion-card-header >\r\n    <ion-card-title>\r\n      <h2>\r\n        {{location.DENOMINAZIONE}}\r\n      </h2>\r\n    </ion-card-title>\r\n\r\n    <ion-card-subtitle>\r\n      <div>\r\n        <span>{{ getTextIndirizzo() }}</span>\r\n      </div>\r\n    </ion-card-subtitle>\r\n  </ion-card-header>\r\n</ion-card>\r\n\r\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { IonSlides } from '@ionic/angular';\r\nimport { Campo } from 'src/app/models/campo.model';\r\nimport { Location } from 'src/app/models/location.model';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-campi-scroll',\r\n  templateUrl: './campi-scroll.component.html',\r\n  styleUrls: ['./campi-scroll.component.scss'],\r\n})\r\nexport class CampiScrollComponent implements OnInit {\r\n\r\n  @Input() selectedCampo: Campo;\r\n  @Output() campoChanged= new EventEmitter<Campo>();\r\n  @Input() campiList:Campo[];\r\n  @Input() selectedLocation: Location;\r\n  @Input() canChoose: boolean; //Indica se è possibile modificare la scelta con i pulsanti\r\n  @ViewChild('sliderCampi')sliderCampi: IonSlides;\r\n\r\n  styleInfoMessage: number = 2; //Stile del messaggio visualizzato\r\n  \r\n  sliderOpts1={\r\n    slidesPerView: 1,\r\n    spaceBetween: 0,\r\n    initialSlide: 0,\r\n  }\r\n\r\n  sliderOpts2={\r\n    slidesPerView: 2,\r\n    spaceBetween: 0,\r\n    initialSlide: 0,\r\n  }\r\n  \r\n  sliderOpts3={\r\n    slidesPerView: 2.5,\r\n    spaceBetween: 0,\r\n    initialSlide: 0, //Dovrei farla variabile\r\n    // Responsive breakpoints   \r\n  //  breakpoints: {  \r\n   \r\n  //     // when window width is <= 320px     \r\n  //     320: {       \r\n  //        slidesPerView: 2.5,\r\n  //        spaceBetween: 1     \r\n  //     },     \r\n  //     // when window width is <= 480px     \r\n  //     480: {       \r\n  //        slidesPerView: 2.5,       \r\n  //        spaceBetween: 6     \r\n  //     },   \r\n  \r\n  //     // when window width is <= 640px     \r\n  //     640: {       \r\n  //        slidesPerView: 2.5,       \r\n  //        spaceBetween: 1     \r\n  //     },\r\n\r\n  //     1024: {\r\n  //       slidesPerView: 2.5,       \r\n  //       spaceBetween: 1  \r\n  //     }\r\n\r\n\r\n  \r\n  //  } \r\n  }\r\n\r\n  sliderOpts4={\r\n    slidesPerView: 3.5,\r\n    spaceBetween: 0,\r\n    initialSlide: 0\r\n  }\r\n  \r\n  constructor() {\r\n  }\r\n\r\n\r\n  /**\r\n   * A seconda del numero di campi presenti, ritorna le opzioni da impostare\r\n   * @returns \r\n   */\r\n  getSliderOptions():any {\r\n    let slidOpt: any;\r\n    if (this.campiList.length == 1) {\r\n      slidOpt = this.sliderOpts1;\r\n    }\r\n    else if (this.campiList.length == 2) {\r\n      slidOpt = this.sliderOpts2;\r\n    }\r\n    else if (this.campiList.length == 3) {\r\n      slidOpt = this.sliderOpts3;\r\n    }\r\n    else {\r\n      slidOpt = this.sliderOpts3;\r\n    }\r\n\r\n    return slidOpt;\r\n  }\r\n\r\n    /**\r\n   * Si posiziona sulla Slide richiesta\r\n   * @param indexSlideZeroBased Indice della Slide\r\n   */\r\n     goToSlide(indexSlideZeroBased: number) {\r\n      if (this.sliderCampi) {\r\n        this.sliderCampi.slideTo(indexSlideZeroBased);\r\n      }\r\n    }\r\n  \r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  /**\r\n   * Scelta di un nuovo campo inviata al chiamante\r\n   * @param newCampo \r\n   */\r\n  onChangeCampo(newCampo: Campo): void\r\n  {\r\n    let indexCampo = this.getIndexCampo(newCampo);\r\n    \r\n    //Posizionamento della Slide sul bottone premuto\r\n    if (indexCampo != -1) {\r\n      \r\n      this.goToSlide(indexCampo);\r\n    }\r\n    //Emissione evento di cambio campo\r\n    this.campoChanged.emit(newCampo);\r\n  }\r\n\r\n  /**\r\n   * Ricerca un campo nell'Array e ne torna l'indice\r\n   * @param myCampo Campo da cercare\r\n   */\r\n  getIndexCampo(myCampo: Campo):number {\r\n    let myPos = -1;\r\n\r\n    if (myCampo) {\r\n      myPos = this.campiList.findIndex(el => {\r\n        return el.ID == myCampo.ID\r\n      });\r\n    }\r\n\r\n    return myPos;\r\n  }\r\n\r\n  /**\r\n   * Ritorna il colore da applicare a seconda del campo selezionato\r\n   * @param myCampo Campo da analizzare\r\n   * @returns Colore da applicare al bottone/card\r\n   */\r\n  getColor(myCampo: Campo) {\r\n    let myColor = 'primary';\r\n    \r\n    if (this.selectedCampo && myCampo) {\r\n      if (this.selectedCampo.ID == myCampo.ID) {\r\n        //myColor = 'danger';\r\n        myColor = 'tertiary';\r\n      }\r\n    }\r\n\r\n    return myColor;\r\n  }\r\n\r\n  /**\r\n   * Ritorna il valore di Fill da applicare a seconda del campo selezionato\r\n   * @param myCampo Campo da analizzare\r\n   * @returns Fill da applicare al bottone/card\r\n   */\r\n   getFill(myCampo: Campo) {\r\n    let myFill = 'outline';\r\n    if (this.selectedCampo && myCampo) {\r\n      if (this.selectedCampo.ID == myCampo.ID) {\r\n        myFill = 'solid';\r\n      }\r\n    }\r\n\r\n    return myFill;\r\n  }\r\n\r\n\r\n  /**\r\n   * Ritorna se il campo è selezionato oppure no\r\n   * @param myCampo Campo da controllare\r\n   * @returns TRUE/FALSE\r\n   */\r\n  isSelected(myCampo: Campo) {\r\n    let isSel = false;\r\n    \r\n    if (this.selectedCampo && myCampo) {\r\n      if (this.selectedCampo.ID == myCampo.ID) {\r\n        isSel = true;\r\n      }\r\n    }\r\n\r\n    return isSel;\r\n  }\r\n\r\n\r\n  /**\r\n   * Cambia la modalità del messaggio informativo\r\n   */\r\n  onChangeInfoStyle() {\r\n    if (this.styleInfoMessage == 1) {\r\n      this.styleInfoMessage = 2;\r\n    }\r\n    else {\r\n      this.styleInfoMessage = 1;\r\n    }\r\n  }\r\n}\r\n","<div class=\"slideCampi\">\r\n  <ion-slides \r\n      *ngIf=\"campiList.length!=0\" \r\n      [options]=\"getSliderOptions()\" \r\n      class=\"ion-text-center\"\r\n      #sliderCampi>\r\n    <ion-slide *ngFor=\"let campo of campiList\" >\r\n\r\n      <ion-button \r\n        expand = \"block\"\r\n        [fill] = \"getFill(campo)\"\r\n        size = \"large\"\r\n        shape = \"round\"\r\n        mode = \"ios\"\r\n        [color]=\"getColor(campo)\" \r\n        (click)=\"onChangeCampo(campo)\"\r\n        [disabled]=\"!canChoose\">\r\n        <ion-icon \r\n              slot = \"start\"\r\n              [name] = \"isSelected(campo)?'location-outline':'locate-outline'\" \r\n              >\r\n        </ion-icon>\r\n\r\n        <ion-label class=\"ion-text-wrap\">\r\n          <p>{{campo.DENOMINAZIONE}}</p>\r\n        </ion-label>\r\n\r\n      </ion-button>\r\n\r\n    </ion-slide>\r\n  </ion-slides>\r\n</div>\r\n\r\n<div *ngIf=\"selectedCampo && selectedLocation\">\r\n  <ion-list class=\"list-nopadding\">\r\n    <ion-item \r\n      lines=\"none\"\r\n      color=\"tertiary\"\r\n      type=\"header\"\r\n      (click)=\"onChangeInfoStyle()\">\r\n      \r\n      <ion-icon slot=\"start\" name=\"information-circle-outline\" ></ion-icon>\r\n      <ion-label class=\"ion-text-wrap ion-padding-start\" *ngIf=\"styleInfoMessage==1\">\r\n        <p>\r\n          <ion-text>Stai visualizzando le disponibilità di <strong>{{selectedCampo?.DENOMINAZIONE}}</strong> presso <strong>{{selectedLocation?.DENOMINAZIONE}}.</strong></ion-text>\r\n          <br/><ion-text style=\"font-size: small;\">&nbsp;(in caso di slot occupati ricercare su altre giornate/struttura)</ion-text>\r\n        </p>\r\n      </ion-label>   \r\n\r\n\r\n      <ion-label class=\"ion-text-wrap ion-padding-start\" *ngIf=\"styleInfoMessage==2\">\r\n        <p>\r\n          <ion-text><strong>{{selectedCampo?.DENOMINAZIONE}}</strong> presso <strong>{{selectedLocation?.DENOMINAZIONE}}.</strong></ion-text>\r\n        </p>\r\n      </ion-label>         \r\n  </ion-item>\r\n\r\n\r\n  </ion-list>\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n","import { __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { IonicNativePlugin, cordova } from '@ionic-native/core';\nimport * as ɵngcc0 from '@angular/core';\nvar Chooser = /** @class */ (function (_super) {\n    __extends(Chooser, _super);\n    function Chooser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Chooser.prototype.getFile = function (accept) { return cordova(this, \"getFile\", {}, arguments); };\n    Chooser.prototype.getFileMetadata = function (accept) { return cordova(this, \"getFileMetadata\", {}, arguments); };\n    Chooser.pluginName = \"Chooser\";\n    Chooser.plugin = \"cordova-plugin-chooser\";\n    Chooser.pluginRef = \"chooser\";\n    Chooser.repo = \"https://github.com/cyph/cordova-plugin-chooser\";\n    Chooser.platforms = [\"Android\", \"iOS\"];\nChooser.ɵfac = function Chooser_Factory(t) { return ɵChooser_BaseFactory(t || Chooser); };\nChooser.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Chooser, factory: function (t) { return Chooser.ɵfac(t); } });\nvar ɵChooser_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(Chooser);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Chooser, [{\n        type: Injectable\n    }], null, null); })();\n    return Chooser;\n}(IonicNativePlugin));\nexport { Chooser };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9AaW9uaWMtbmF0aXZlL3BsdWdpbnMvY2hvb3Nlci9uZ3gvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyw4QkFBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7QUFDeEU7SUFxRDZCLDJCQUFpQjs7OztJQVE1Qyx5QkFBTyxhQUFDLE1BQWU7SUFXdkIsaUNBQWUsYUFBQyxNQUFlOzs7OzsyQ0FJME07MkNBeEIxTyxVQUFVOzs7OzswQkFDTDtrQkF2RE47RUF1RDZCLGlCQUFpQjtTQUFqQyxPQUFPIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ2hvb3NlclJlc3VsdCB7XG4gIGRhdGE/OiBVaW50OEFycmF5O1xuICBkYXRhVVJJPzogc3RyaW5nO1xuICBtZWRpYVR5cGU6IHN0cmluZztcbiAgbmFtZTogc3RyaW5nO1xuICB1cmk6IHN0cmluZztcbn1cblxuLyoqXG4gKiBAbmFtZSBDaG9vc2VyXG4gKiBAZGVzY3JpcHRpb25cbiAqIEZpbGUgY2hvb3NlciBwbHVnaW4gZm9yIENvcmRvdmEuXG4gKlxuICogVGhlIGZvbGxvd2luZyBtdXN0IGJlIGFkZGVkIHRvIGNvbmZpZy54bWwgdG8gcHJldmVudCBjcmFzaGluZyB3aGVuIHNlbGVjdGluZyBsYXJnZSBmaWxlcyBvbiBBbmRyb2lkOlxuICogYGBgeG1sXG4gKiA8cGxhdGZvcm0gbmFtZT1cImFuZHJvaWRcIj5cbiAqICA8ZWRpdC1jb25maWdcbiAqICAgIGZpbGU9XCJhcHAvc3JjL21haW4vQW5kcm9pZE1hbmlmZXN0LnhtbFwiXG4gKiAgICBtb2RlPVwibWVyZ2VcIlxuICogICAgdGFyZ2V0PVwiL21hbmlmZXN0L2FwcGxpY2F0aW9uXCI+XG4gKiAgICA8YXBwbGljYXRpb24gYW5kcm9pZDpsYXJnZUhlYXA9XCJ0cnVlXCIgLz5cbiAqICA8L2VkaXQtY29uZmlnPlxuICogPC9wbGF0Zm9ybT5cbiAqIGBgYFxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgQ2hvb3NlciB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY2hvb3Nlci9uZ3gnO1xuICpcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGNob29zZXI6IENob29zZXIpIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqXG4gKiB0aGlzLmNob29zZXIuZ2V0RmlsZSgpXG4gKiAgIC50aGVuKGZpbGUgPT4gY29uc29sZS5sb2coZmlsZSA/IGZpbGUubmFtZSA6ICdjYW5jZWxlZCcpKVxuICogICAuY2F0Y2goKGVycm9yOiBhbnkpID0+IGNvbnNvbGUuZXJyb3IoZXJyb3IpKTtcbiAqXG4gKiBgYGBcbiAqXG4gKiBAaW50ZXJmYWNlc1xuICogQ2hvb3NlclJlc3VsdFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0Nob29zZXInLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1jaG9vc2VyJyxcbiAgcGx1Z2luUmVmOiAnY2hvb3NlcicsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vY3lwaC9jb3Jkb3ZhLXBsdWdpbi1jaG9vc2VyJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ10sXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIENob29zZXIgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG4gIC8qKlxuICAgKiBEaXNwbGF5cyBuYXRpdmUgcHJvbXB0IGZvciB1c2VyIHRvIHNlbGVjdCBhIGZpbGUuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBbYWNjZXB0XSBPcHRpb25hbCBNSU1FIHR5cGUgZmlsdGVyIChlLmcuICdpbWFnZS9naWYsdmlkZW8vKicpLlxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFByb21pc2UgY29udGFpbmluZyBzZWxlY3RlZCBmaWxlJ3MgcmF3IGJpbmFyeSBkYXRhLFxuICAgKiBiYXNlNjQtZW5jb2RlZCBkYXRhOiBVUkksIE1JTUUgdHlwZSwgZGlzcGxheSBuYW1lLCBhbmQgb3JpZ2luYWwgVVJJLlxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBnZXRGaWxlKGFjY2VwdD86IHN0cmluZyk6IFByb21pc2U8Q2hvb3NlclJlc3VsdCB8IHVuZGVmaW5lZD4ge1xuICAgIHJldHVybjtcbiAgfVxuICAvKipcbiAgICogRGlzcGxheXMgbmF0aXZlIHByb21wdCBmb3IgdXNlciB0byBzZWxlY3QgYSBmaWxlLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gW2FjY2VwdF0gT3B0aW9uYWwgTUlNRSB0eXBlIGZpbHRlciAoZS5nLiAnaW1hZ2UvZ2lmLHZpZGVvLyonKS5cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gUHJvbWlzZSBjb250YWluaW5nIHNlbGVjdGVkIGZpbGUncyBNSU1FIHR5cGUsIGRpc3BsYXkgbmFtZSwgYW5kIG9yaWdpbmFsIFVSSS5cbiAgICogSWYgdXNlciBjYW5jZWxzLCBwcm9taXNlIHdpbGwgYmUgcmVzb2x2ZWQgYXMgdW5kZWZpbmVkLlxuICAgKiBJZiBlcnJvciBvY2N1cnMsIHByb21pc2Ugd2lsbCBiZSByZWplY3RlZC5cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZ2V0RmlsZU1ldGFkYXRhKGFjY2VwdD86IHN0cmluZyk6IFByb21pc2U8Q2hvb3NlclJlc3VsdCB8IHVuZGVmaW5lZD4ge1xuICAgIHJldHVybjtcbiAgfVxufVxuIl19","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Corso } from '../../../models/corso.model'\r\nimport { ValueList, TargetSesso, Sesso, TipoCorso } from 'src/app/models/valuelist.model';\r\nimport { StartService } from 'src/app/services/start.service'\r\nimport { Sport } from 'src/app/models/sport.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-card-course',\r\n  templateUrl: './card-course.component.html',\r\n  styleUrls: ['./card-course.component.scss'],\r\n})\r\nexport class CardCourseComponent implements OnInit {\r\n\r\n  constructor(private startService: StartService) { }\r\n\r\n  @Input() myCorso = new Corso();\r\n  //Se impostato a TRUE significa che nell'area sono abilitate le iscrizioni con l'app\r\n  //e quindi controllare se è possibile iscriversi con le date ed\r\n  //enfatizzare la scheda con un colore speciale\r\n  @Input() useIscrizioniColor = false;\r\n  @Output() clickDetail = new EventEmitter<Corso>();\r\n  @Output() clickIscrizione = new EventEmitter<Corso>();\r\n  \r\n  iconColor = 'primary';\r\n\r\n  \r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n  /**\r\n   * Indica se mostrare il pulsante delle Iscrizioni\r\n   */\r\n   showIscrizioniButton():boolean {\r\n    let show = false;\r\n    if (this.myCorso) {\r\n      if (this.useIscrizioniColor && this.myCorso.flagIscrizioniAperte()) {\r\n        show = true;\r\n      }\r\n    }\r\n\r\n    return show;\r\n  }  \r\n\r\n  /**\r\n  * Emetto un evento per il pulsante di Iscrizione\r\n   */\r\n  onClickIscrizione() {\r\n    //Emetto l'evento per segnalare la richiesta di Iscrizione\r\n    this.clickIscrizione.emit(this.myCorso);\r\n  }\r\n\r\n  /**\r\n   * Torna l'eventuale classe speciale da applicare\r\n   */\r\n  getClassHeader(): string {\r\n    let myClass = '';\r\n    if (this.myCorso) {\r\n\r\n      if (this.useIscrizioniColor && this.myCorso.flagIscrizioniAperte()) {\r\n        myClass = 'special';\r\n      }\r\n    }\r\n    \r\n    return myClass;\r\n  }\r\n\r\n\r\n  /**\r\n   * Indica se mostrare o no il Bollino Prova\r\n   * @returns TRUE/FALSE\r\n   */\r\n  showFabProva():boolean {\r\n    let show:boolean = false; \r\n    if (this.myCorso && this.myCorso.TIPO == TipoCorso.prova) {\r\n      show = true;\r\n    }\r\n\r\n    return show;\r\n\r\n  }\r\n\r\n  getLabelTargetSesso() {\r\n    let toDecode = TargetSesso.maschileFemminile;\r\n    let label = '';\r\n    \r\n    if (this.myCorso.TARGETSESSO) {\r\n      toDecode = this.myCorso.TARGETSESSO;\r\n    }\r\n\r\n    label = ValueList.decode(TargetSesso, toDecode);\r\n\r\n    return label;\r\n  }\r\n\r\n\r\n  goToDetail() {\r\n    //Emetto l'evento per andare al dettaglio corso\r\n    this.clickDetail.emit(this.myCorso);\r\n  }\r\n\r\n  \r\n  /**\r\n   * Dato un oggetto corso, ritorna la stringa dell'icona corrispondente\r\n   * @param corso L'oggetto corso\r\n   */\r\n  getSportIcon (corso: Corso)\r\n  {\r\n    if (corso){\r\n      return this.startService.getSportIcon(corso.IDSPORT);\r\n    }\r\n  }\r\n}\r\n","<ion-card  \r\n  class=\"ion-no-margin ion-margin-horizontal\" \r\n  button (click)=\"goToDetail()\">\r\n\r\n\r\n  \r\n  <!-- SPORT E NOME CORSO-->\r\n  <ion-card-header [ngClass]=\"getClassHeader()\">\r\n    \r\n\r\n    <!-- FAB CON LA VOCE PROVA -->\r\n   <ion-fab \r\n        *ngIf=\"showFabProva()\"\r\n        vertical=\"top\" \r\n        horizontal=\"end\">\r\n     <ion-fab-button\r\n        color=\"danger\">Prova</ion-fab-button> \r\n   </ion-fab>\r\n\r\n\r\n\r\n    <ion-grid class=\"ion-no-padding\">\r\n      <ion-row class=\"ion-no-padding ion-align-items-center\">\r\n        <ion-col size=\"2\" class=\"ion-no-padding\">\r\n          <i class=\"icon-sport\"><span [innerHTML]=\"getSportIcon(myCorso)\" ></span> </i>\r\n        </ion-col>\r\n        <ion-col size=\"10\" class=\"ion-no-padding\">\r\n          <ion-card-subtitle>{{myCorso['_DENOMINAZIONE_Sport']}}</ion-card-subtitle>\r\n          <ion-card-title>{{myCorso.DENOMINAZIONE}}</ion-card-title>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </ion-card-header>\r\n\r\n  <!-- ORA INIZIO E DURATA-->\r\n  <ion-card-content class=\"ion-no-padding\">\r\n\r\n    <ion-grid>\r\n      <ion-row>\r\n        <ion-col size=\"6\" size-sm=\"6\">\r\n          <ion-button \r\n              size=\"small\" \r\n              color=\"primary\" \r\n              expand=\"block\" \r\n              fill=\"outline\"\r\n              >\r\n\r\n            <ion-icon name=\"time\" slot=\"start\"></ion-icon>\r\n            {{myCorso.ORAINIZIO | date:'HH:mm'}}\r\n          </ion-button>\r\n        </ion-col>\r\n\r\n        <ion-col size=\"6\" size-sm=\"6\">\r\n          <ion-button \r\n            size=\"small\" \r\n            color=\"primary\" \r\n            expand=\"block\" \r\n            fill=\"outline\"\r\n            >\r\n            <ion-icon name=\"infinite\" slot=\"start\"></ion-icon>\r\n            {{myCorso.ORELEZIONE}} {{myCorso.ORELEZIONE > 1 ?'Ore':'Ora'}}\r\n          </ion-button>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  </ion-card-content>\r\n\r\n\r\n  <!-- BOX GIORNATE -->\r\n  <ion-card-content class=\"ion-no-padding\">\r\n    <div class=\"div-giornate ion-text-center\" >\r\n      <table style=\"width: 100%;\">\r\n        <tr>\r\n          <td *ngFor=\"let giorno of myCorso._SETTIMANA\">\r\n            <ion-button \r\n                color=\"secondary\"\r\n                size=\"small\" \r\n                [fill]=\"giorno.selected ?'solid':'outline'\">\r\n              {{giorno.xsLabel | uppercase}}\r\n            </ion-button>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n      <!-- NUMERO LEZIONI-->\r\n    <div \r\n        class=\"contentLezioni ion-margin-horizontal\" \r\n        \r\n        *ngIf=\"myCorso.NUMEROLEZIONI\">\r\n      <h6>\r\n        <em>{{myCorso.NUMEROLEZIONI}} {{myCorso.NUMEROLEZIONI > 1 ?'Incontri ':'Incontro '}}</em>\r\n      </h6>\r\n    </div>\r\n  </ion-card-content>\r\n\r\n  <!-- LISTA INFORMAZIONI LIVELLO, ETA, SESSO-->\r\n  <ion-item>\r\n    <ion-icon \r\n        name=\"stats-chart-outline\" \r\n        slot=\"start\" \r\n        [color]=\"iconColor\"></ion-icon>\r\n  <ion-label>{{myCorso['_DENOMINAZIONE_Livello'] ? myCorso['_DENOMINAZIONE_Livello']:'Tutti i Livelli'}}</ion-label>\r\n  </ion-item>\r\n\r\n  <ion-item>\r\n    <ion-icon \r\n        name=\"bookmark-outline\" \r\n        slot=\"start\" \r\n        [color]=\"iconColor\"></ion-icon>\r\n    <ion-label>{{myCorso.IDCATEGORIEETA?myCorso['_DESCTOOLTIP_CategoriaEta']:'Per tutte le età'}}</ion-label>\r\n  </ion-item>\r\n\r\n  <ion-item lines=\"none\">\r\n    <ion-icon \r\n      name=\"transgender-outline\" \r\n      slot=\"start\" \r\n      [color]=\"iconColor\"></ion-icon>\r\n    <ion-label>{{getLabelTargetSesso()}}</ion-label>\r\n  </ion-item>\r\n\r\n  <ion-footer>\r\n    <ion-row>\r\n      <ion-col \r\n          size=\"12\" \r\n          size-sm=\"12\">\r\n          <p class=\"footer\" *ngIf=\"myCorso.tempoCorso()=='next'\">Inizia il {{myCorso.DATAINIZIO|date:'dd/MM/yyyy'}}</p>\r\n          <p class=\"footer\" *ngIf=\"myCorso.tempoCorso()=='during'\">Termina il {{myCorso.DATAFINE|date:'dd/MM/yyyy'}}</p>\r\n          <p class=\"footer\" *ngIf=\"myCorso.tempoCorso()=='stop'\">Concluso il {{myCorso.DATAFINE|date:'dd/MM/yyyy'}}</p>\r\n      </ion-col>\r\n    </ion-row>\r\n\r\n  </ion-footer>\r\n  \r\n\r\n</ion-card>\r\n\r\n<ion-row *ngIf = \"showIscrizioniButton()\">\r\n  <ion-col\r\n    size=\"12\" \r\n    size-sm=\"12\">\r\n\r\n      <ion-button \r\n        color=\"success\" \r\n        fill=\"solid\" \r\n        expand=\"block\"\r\n        *ngIf = \"showIscrizioniButton()\"\r\n        (click)=\"onClickIscrizione()\">\r\n          Iscriviti adesso\r\n      </ion-button>\r\n\r\n  </ion-col>\r\n</ion-row>\r\n\r\n        \r\n\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { PrenotazionePianificazione } from 'src/app/models/prenotazionepianificazione.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-footbooked',\r\n  templateUrl: './footbooked.component.html',\r\n  styleUrls: ['./footbooked.component.scss'],\r\n})\r\nexport class FootbookedComponent implements OnInit {\r\n\r\n  /* Componente mostrato nella pagina di Booking per segnalare la prenotazione che l'utente sta effettuando*/\r\n\r\n\r\n  @Input() myPrenotaPianifica: PrenotazionePianificazione;\r\n  @Output() clickPrenota = new EventEmitter<PrenotazionePianificazione>();\r\n\r\n  constructor() { \r\n\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  /** Emette un evento di Click sul pulsante di prenotazione */\r\n  onClickPrenota() {\r\n    this.clickPrenota.emit(this.myPrenotaPianifica);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","\r\n  <ion-list color=\"tertiary\">\r\n    <ion-item lines=\"none\" detail=\"false\">\r\n      <ion-icon slot=\"start\" name=\"calendar\" color=\"tertiary\"></ion-icon>\r\n      <ion-label>\r\n        <h2>\r\n          {{ myPrenotaPianifica?.DATAORAINIZIO | date: \"EEE dd/MM/yyyy\" | titlecase }}\r\n        </h2>\r\n        <p>\r\n          dalle {{ myPrenotaPianifica?.DATAORAINIZIO | date : \"HH:mm\" }} alle {{ myPrenotaPianifica?.DATAORAFINE | date : \"HH:mm\" }}\r\n        </p>\r\n      </ion-label>\r\n      <ion-button \r\n        slot=\"end\" \r\n        color=\"tertiary\" \r\n        expand=\"block\"\r\n        size=\"default\"\r\n        (click)=\"onClickPrenota()\"\r\n        >Prenota</ion-button>\r\n    </ion-item>\r\n  </ion-list>\r\n\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Impegno } from 'src/app/models/impegno.model';\r\nimport { SettoreAttivita } from '../../../models/valuelist.model';\r\n\r\n@Component({\r\n  selector: 'app-impegni',\r\n  templateUrl: './impegni.component.html',\r\n  styleUrls: ['./impegni.component.scss'],\r\n})\r\nexport class ImpegniComponent implements OnInit {\r\n\r\n  @Input() impegno:Impegno=new Impegno;\r\n  iconName: string;\r\n  locationName: string;//da valorizzare\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    if (this.impegno.SETTORE===SettoreAttivita.settoreCorso)\r\n    {\r\n      this.iconName='school';\r\n    }\r\n    else if(this.impegno.SETTORE===SettoreAttivita.settorePrenotazione)\r\n    {\r\n      this.iconName='calendar';\r\n    }\r\n    else if(this.impegno.SETTORE===SettoreAttivita.settoreTorneo)\r\n    {\r\n      this.iconName='medal';\r\n    }\r\n  }\r\n}\r\n","<ion-card class=\"ActivityCard scroll-item\">\r\n  <ion-card-content class=\"ActivityLabel\">\r\n    <ion-item lines=\"none\">\r\n      <ion-button slot=\"start\" size=\"large\" color=\"primary\" fill=\"outline\">\r\n        <ion-icon [name]=\"iconName\" ></ion-icon>\r\n      </ion-button>\r\n      <ion-label>\r\n        <h2>{{ impegno.DATAORAINIZIO.getHours() }}:{{ impegno.DATAORAINIZIO.getMinutes() }}</h2>\r\n        <h3>{{ impegno.DATAORAINIZIO| date: 'EEEE'}}</h3>\r\n        <p>{{ locationName }}</p>\r\n      </ion-label>\r\n    </ion-item>\r\n  </ion-card-content>\r\n</ion-card>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\n\r\nimport { AdvertisingComponent } from './advertising/advertising.component'\r\nimport { ApertureComponent } from './aperture/aperture.component'\r\nimport { ButtonCardComponent } from './button-card/button-card.component'\r\nimport { CalendarscrollComponent } from './calendarscroll/calendarscroll.component'\r\nimport { CardCourseComponent } from './card-course/card-course.component'\r\nimport { CentriComponent } from './centri/centri.component'\r\nimport { CircularComponent } from './circular/circular.component'\r\nimport { FootbookedComponent } from './footbooked/footbooked.component'\r\nimport { HorTimelineComponent } from './hor-timeline/hor-timeline.component'\r\nimport { ImpegniComponent } from './impegni/impegni.component'\r\nimport { ItemCalendarioComponent } from './item-calendario/item-calendario.component'\r\nimport { NewsEventiComponent } from './news-eventi/news-eventi.component'\r\nimport { PaymentChooseComponent } from './payment-choose/payment-choose.component'\r\nimport { PlayerNumberComponent } from './player-number/player-number.component'\r\nimport { SlottimeComponent } from './slottime/slottime.component'\r\nimport { SportScrollComponent } from './sport-scroll/sport-scroll.component'\r\nimport { UploadComponent } from './upload/upload.component'\r\nimport { AlertInputPrezzoComponent } from './alert-input-prezzo/alert-input-prezzo.component';\r\nimport { CampiScrollComponent } from './campi-scroll/campi-scroll.component';\r\nimport { HideHeaderDirective } from '../directives/hide-header.directive';\r\nimport { PaymentModeComponent } from './payment-mode/payment-mode.component';\r\nimport { SettimanaBlockComponent } from './settimana-block/settimana-block.component';\r\nimport { LevelSetterComponent } from './level-setter/level-setter.component';\r\n\r\n/**\r\n * Questo modulo, come quello delle pipes, dichiara tutti i componenti e li esporta;\r\n * è possibile importarlo in altri moduli per utilizzare i componenti all'interno degli stessi\r\n */\r\n\r\n\r\n@NgModule({\r\n\r\n    //commonModule serve sempre per rendere visibile questo module all'esterno\r\n    imports: [\r\n        IonicModule,\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule\r\n    ],\r\n    declarations: [\r\n        AdvertisingComponent,\r\n        ApertureComponent,\r\n        ButtonCardComponent,\r\n        CalendarscrollComponent,\r\n        CardCourseComponent,\r\n        CentriComponent,\r\n        CircularComponent,\r\n        FootbookedComponent,\r\n        HorTimelineComponent,\r\n        ImpegniComponent,\r\n        ItemCalendarioComponent,\r\n        NewsEventiComponent,\r\n        PaymentChooseComponent,\r\n        PaymentModeComponent,\r\n        PlayerNumberComponent,\r\n        SlottimeComponent,\r\n        SportScrollComponent,\r\n        UploadComponent,\r\n        AlertInputPrezzoComponent,\r\n        CampiScrollComponent,\r\n        HideHeaderDirective,\r\n        SettimanaBlockComponent,\r\n        LevelSetterComponent\r\n        \r\n    ],\r\n    exports: [\r\n        AdvertisingComponent,\r\n        ApertureComponent,\r\n        ButtonCardComponent,\r\n        CalendarscrollComponent,\r\n        CardCourseComponent,\r\n        CentriComponent,\r\n        CircularComponent,\r\n        FootbookedComponent,\r\n        HorTimelineComponent,\r\n        ImpegniComponent,\r\n        ItemCalendarioComponent,\r\n        NewsEventiComponent,\r\n        PaymentChooseComponent,\r\n        PaymentModeComponent,\r\n        PlayerNumberComponent,\r\n        SlottimeComponent,\r\n        SportScrollComponent,\r\n        AlertInputPrezzoComponent,\r\n        UploadComponent,\r\n        CampiScrollComponent,\r\n        HideHeaderDirective,\r\n        SettimanaBlockComponent,\r\n        LevelSetterComponent\r\n    ]\r\n})\r\nexport class SharedComponentsModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-hor-timeline',\r\n  templateUrl: './hor-timeline.component.html',\r\n  styleUrls: ['./hor-timeline.component.scss'],\r\n})\r\nexport class HorTimelineComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  \r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","<p>\r\n  hor-timeline works!\r\n</p>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { NewsEvento } from 'src/app/models/newsevento.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-news-eventi',\r\n  templateUrl: './news-eventi.component.html',\r\n  styleUrls: ['./news-eventi.component.scss'],\r\n})\r\nexport class NewsEventiComponent implements OnInit {\r\n\r\n  @Input() myNews = new NewsEvento();\r\n  @Output() clickNews = new EventEmitter<NewsEvento>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n\r\n  /**\r\n   * Emetto l'evento di click\r\n   */\r\n  onClickNews() {\r\n    this.clickNews.emit(this.myNews);\r\n  }\r\n}\r\n","<ion-card>\r\n  <ion-item [button]=\"!myNews.do_inserted\" (click)=\"onClickNews()\" lines=\"none\">\r\n\r\n    <ion-thumbnail slot=\"start\" *ngIf=\"myNews.LINKIMAGE\">\r\n      <ion-img [src]=\"myNews.LINKIMAGE\"></ion-img>\r\n    </ion-thumbnail>\r\n\r\n    <ion-icon \r\n      *ngIf = \"!myNews.LINKIMAGE\"\r\n      slot=\"start\" [name]=\"myNews._NAMEICON\" [color]=\"myNews._COLOR\"></ion-icon>\r\n    \r\n    <ion-label>\r\n      <h3 class=\"ion-text-wrap\">\r\n        {{ myNews.TITLE }}\r\n      </h3>\r\n\r\n      <p class=\"ion-text-wrap\" *ngIf=\"myNews.SUBTITLE\">\r\n        {{ myNews.SUBTITLE }}\r\n      </p>\r\n      <p *ngIf=\"myNews.PUBBLICATADAL\" color=\"medium\" class=\"ion-text-right ion-padding-horizontal\">\r\n        <em>{{ myNews.PUBBLICATADAL | date : 'dd/MM/yyyy' }}</em>\r\n      </p>\r\n    </ion-label>\r\n  </ion-item>\r\n</ion-card>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { SorgenteFile, TipoDocumentazione } from 'src/app/models/tipodocumentazione.model';\r\nimport { Chooser, ChooserResult } from '@ionic-native/chooser/ngx';\r\nimport { ToastController, PickerController, ModalController } from '@ionic/angular';\r\nimport { PickerColumnOption } from '@ionic/core';\r\nimport { InvioDocumentazione } from 'src/app/models/documentazione.model';\r\nimport {Plugins, CameraResultType, CameraPhoto, CameraSource } from '@capacitor/core';\r\n\r\nconst {Camera } = Plugins;\r\n\r\n\r\n@Component({\r\n  selector: 'app-upload',\r\n  templateUrl: './upload.component.html',\r\n  styleUrls: ['./upload.component.scss'],\r\n})\r\nexport class UploadComponent implements OnInit {\r\n\r\n  @Input() isDesktop : boolean;\r\n  @Input() docTypeList : TipoDocumentazione[];\r\n\r\n  //file caricati (sono tipi diversi a seconda se caricati da mobile o desktop)\r\n  loadedMobileFile : ChooserResult;\r\n  loadedDesktopFile : File;\r\n  loadedMobilePhoto: CameraPhoto;\r\n\r\n  //File caricato\r\n  fileLoaded: boolean = false;\r\n  //Nome File da mostrare\r\n  fileNameShow: string = '';\r\n\r\n  //Tipo di documento che si desidera caricare\r\n  selectedDocType: TipoDocumentazione;\r\n\r\n  //Sorgente da cui caricare il file\r\n  sorgenteFile: SorgenteFile = SorgenteFile.photoGallery;\r\n\r\n  //Descrizione opzionale del documento\r\n  docDescription = '';\r\n\r\n \r\n\r\n  constructor(\r\n    private chooser : Chooser,\r\n    private toastController : ToastController,\r\n    private pickerController : PickerController,\r\n    private modalController : ModalController\r\n    \r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  //#region EVENTI DI SEARCH FILE\r\n\r\n  /**\r\n   * Evento Click per la scelta di un file in versione Mobile\r\n   */\r\n  onMobileSearch(){\r\n\r\n    //Sorgente FileSystem uso il Chooser\r\n    if (this.sorgenteFile == SorgenteFile.filesystem) {\r\n\r\n      //Caricamento con il metodo File\r\n      this.chooser.getFile()\r\n      .then(file => {\r\n\r\n        //Questo è il file caricato\r\n        this.loadedMobileFile = file;\r\n        this.fileLoaded = true;\r\n        this.fileNameShow = this.loadedMobileFile.name;\r\n\r\n      })\r\n      .catch((error: any) => {\r\n\r\n        this.loadedMobileFile = null;\r\n        this.fileLoaded = false;\r\n        this.fileNameShow = '';\r\n        \r\n\r\n        console.error(error)\r\n      });\r\n\r\n    }\r\n    else if (this.sorgenteFile == SorgenteFile.photoGallery) {\r\n\r\n      //Utilizzo la Gallery/Fotocamera\r\n      //Devo aprire la fotocamera sulla gallery\r\n      Camera.getPhoto({\r\n        resultType: CameraResultType.DataUrl,\r\n        source: CameraSource.Prompt,\r\n        quality: 100\r\n      })\r\n      .then((data:CameraPhoto) => {\r\n\r\n         //Questo è il file caricato\r\n        this.loadedMobilePhoto = data;\r\n        this.fileLoaded = true;\r\n        this.fileNameShow = 'Immagine ' + this.loadedMobilePhoto.format;\r\n      })\r\n      .catch(error => {\r\n          //Questo è il file caricato\r\n          this.loadedMobilePhoto = null;\r\n          this.fileLoaded = false;\r\n          this.fileNameShow = '';\r\n          this.showMessage('Errore apertura Photo Gallery');\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Evento Click dell'Item riferito alla ricerca File Desktop\r\n   */\r\n  onDesktopSearch(){\r\n\r\n    let myInput = document.getElementById('myInput');\r\n\r\n    myInput.click();\r\n    \r\n  }\r\n\r\n\r\n  /**\r\n   * Evento generato dal TAG INPUT al cambio di File\r\n   * @param event \r\n   */\r\n  onChangedDesktopFile(event : any) {\r\n    let myFile : File;\r\n\r\n    if (event.target.files && event.target.files.length != 0) {\r\n      myFile = event.target.files[0];\r\n\r\n      this.loadedDesktopFile=myFile;\r\n      this.fileLoaded = true;\r\n      this.fileNameShow = this.loadedDesktopFile.name;\r\n    }\r\n    else {\r\n      this.loadedDesktopFile=null;\r\n      this.fileLoaded = false;\r\n      this.fileNameShow = '';\r\n    }\r\n    \r\n  } \r\n  \r\n  //#endregion\r\n\r\n  //#region VISUALIZZAZIONE MESSAGGI / PICKER\r\n\r\n  /**\r\n   * Mostra un Message Toast\r\n   * @param message Messaggio\r\n   */\r\n  showMessage(message : string){\r\n    this.toastController.create({\r\n      message: message,\r\n      duration: 3000\r\n    })\r\n    .then(elToast => {\r\n      elToast.present();\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Mostra il Picker per la scelta della tipologia documento\r\n   */\r\n  showPicker(){\r\n    \r\n    let pickerOptions : PickerColumnOption[]=[];\r\n\r\n    this.docTypeList.forEach(docType => {\r\n      let option : PickerColumnOption = {\r\n        text: docType.DENOMINAZIONE,\r\n        value: docType\r\n      }\r\n\r\n      pickerOptions.push(option);\r\n    });\r\n\r\n\r\n\r\n    this.pickerController.create({\r\n      columns : [\r\n        {\r\n          name : 'tipo',\r\n          options : pickerOptions\r\n\r\n        }\r\n      ],\r\n      buttons: [\r\n        {\r\n          text: 'Annulla',\r\n          role: 'cancel',\r\n        },\r\n        {\r\n          text: 'Conferma',\r\n          handler: (data)=>{\r\n            this.selectedDocType= data.tipo.value;\r\n          }\r\n        }\r\n      ]\r\n    })\r\n    .then(elPicker => {\r\n      elPicker.present();\r\n    })\r\n  }\r\n\r\n  //#endregion\r\n\r\n\r\n  \r\n\r\n  /**\r\n   * Converte un Blob in un dataUrl string\r\n   * @param blob Blob da convertire\r\n   * @returns \r\n   */\r\n  convertBlobToDataUrl(blob: Blob):Promise<string> {\r\n\r\n   return new Promise<string>((resolve, reject) => {\r\n\r\n      const reader = new FileReader;\r\n      reader.onerror = reject;\r\n      reader.onload = () => {\r\n          resolve(reader.result.toString());\r\n      };\r\n      reader.readAsDataURL(blob);\r\n    });\r\n\r\n\r\n    //ALTRO ESEMPIO CHE FORSE USAVO PRIMA  \r\n    //@ts-ignore \r\n      // this.loadedDesktopFile.arrayBuffer().then(blob => {\r\n      //   console.log(blob);\r\n\r\n      //   //IMPORTANTE! QUESTO CONVERTE UN ARRAYBUFFER (BLOB) IN BASE64\r\n\r\n      //   //TEST 1\r\n      //   //let base64 = btoa(String.fromCharCode(...new Uint8Array(blob)));\r\n      //   //FINE TEST 1\r\n\r\n      //   //TEST 2\r\n      //   //const uint8Array = new Uint8Array(blob);\r\n      //   //const base64 = uint8Array.reduce((acc, i) => acc += String.fromCharCode.apply(null, [i]), '');\r\n      //   //console.log(base64);\r\n      //   // FINE TEST 2\r\n        \r\n\r\n        \r\n      // })    \r\n  }  \r\n\r\n\r\n  //#region EVENTI DI INVIO\r\n  \r\n  /**\r\n   * Evento Click di Interfaccia per il caricamento\r\n   */\r\n  onClickCarica(){\r\n\r\n    //File non caricato\r\n    if (!this.fileLoaded) {\r\n      this.showMessage('Prima scegli il documento');\r\n    }\r\n    else if (!this.selectedDocType) {\r\n        //Tipologia non selezionata\r\n        this.showMessage('Scegli una tipologia di documento');\r\n    }\r\n    else {\r\n      //Possiamo procedere al caricamento\r\n      this.SendFileDocumentToParent()\r\n    }\r\n        \r\n  }\r\n\r\n  /**\r\n   * Crea e ritorna il DataUrl da inviare al server\r\n   */\r\n  prepareDataUrl():Promise<string> {\r\n    let myDataUrl: string;\r\n\r\n    return new Promise<string>((resolve, reject) => {\r\n\r\n      //File Desktop\r\n      if (this.loadedDesktopFile) {\r\n\r\n        //Effettuo la conversione \r\n        this.convertBlobToDataUrl(this.loadedDesktopFile)\r\n              .then(strDataUrl => {\r\n  \r\n                myDataUrl = strDataUrl as string;\r\n                resolve(myDataUrl);\r\n\r\n              })\r\n              .catch(error => {\r\n                reject(error);\r\n              });\r\n      }\r\n      else if (this.loadedMobilePhoto) {\r\n        myDataUrl = this.loadedMobilePhoto.dataUrl;\r\n\r\n        if (myDataUrl.length != 0) {\r\n          resolve(myDataUrl);\r\n        }\r\n        else {\r\n          reject('No base 64 founded');\r\n        }\r\n      }\r\n      else if (this.loadedMobileFile) {\r\n\r\n        resolve(this.loadedMobileFile.dataURI);\r\n\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n\r\n  /**\r\n   * Prepara un documento InvioDocumentazione e \r\n   * lo ritorna alla pagina chiamante\r\n   */\r\n  SendFileDocumentToParent() {\r\n    \r\n    this.prepareDataUrl()\r\n        .then(dataUrl => {\r\n          \r\n          //abbiamo tutto, posso creare l'oggetto da ritornare, e chiudere\r\n          let myDocument = new InvioDocumentazione;\r\n          myDocument.FILE = dataUrl;\r\n          myDocument.IDTIPODOCUMENTAZIONE = this.selectedDocType.ID;\r\n          myDocument.DESCRIZIONE = this.docDescription;\r\n\r\n          this.modalController.dismiss(myDocument);\r\n\r\n        })\r\n        .catch(error => {\r\n          this.showMessage('Si sono verificati errori');\r\n        } )\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Chiusura modale senza parametri\r\n   */\r\n  close(){\r\n    this.modalController.dismiss();\r\n  }\r\n}\r\n\r\n  \r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-title>Carica</ion-title>\r\n    <ion-buttons slot=\"end\">\r\n      <ion-button (click)=\"close()\">\r\n        <ion-icon name=\"close-outline\"></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <div class=\"icon-container\">\r\n    <ion-icon name=\"cloud-upload-outline\"></ion-icon>  \r\n  </div>\r\n  \r\n  <ion-list>\r\n\r\n    <!-- SE SONO SU MOBILE -->\r\n    <ion-item-group *ngIf=\"!isDesktop\">\r\n      <ion-item-divider color=\"light\">\r\n        <ion-label>\r\n          <h2>Carica da</h2>\r\n        </ion-label>\r\n        </ion-item-divider>\r\n\r\n        <ion-radio-group [(ngModel)]=\"sorgenteFile\">\r\n\r\n          <ion-item>\r\n            <ion-icon slot=\"start\" name=\"document-text-outline\"></ion-icon>\r\n            <ion-label>Cartella Documenti</ion-label>\r\n            <ion-radio slot=\"end\" value=\"file\"></ion-radio>\r\n          </ion-item>\r\n\r\n          <ion-item>\r\n            <ion-icon slot=\"start\" name=\"camera-outline\"></ion-icon>\r\n            <ion-label>Photo Gallery</ion-label>\r\n            <ion-radio slot=\"end\" value=\"photo\"></ion-radio>\r\n          </ion-item>\r\n\r\n        </ion-radio-group>\r\n    </ion-item-group>\r\n\r\n    <ion-item-group class=\"ion-margin-vertical\">\r\n      <ion-item-divider color=\"light\">\r\n        <ion-label>\r\n          <h2>Cosa stai caricando</h2>\r\n        </ion-label>\r\n        </ion-item-divider> \r\n\r\n        <ion-item button (click)=\"showPicker()\">\r\n          <ion-icon slot=\"start\" name=\"document-outline\"></ion-icon>\r\n            <ion-label \r\n              *ngIf=\"!selectedDocType\" \r\n              class=\"myPlaceholder\">Scegli una tipologia</ion-label>\r\n            <p>{{selectedDocType? selectedDocType.DENOMINAZIONE : null}}</p>\r\n        </ion-item>\r\n\r\n        <ion-item>\r\n          <ion-icon slot=\"start\" name=\"information-circle-outline\"></ion-icon>\r\n          <ion-textarea placeholder=\"Inserisci una descrizione\"  [(ngModel)]=\"docDescription\" maxlength=\"50\"></ion-textarea>      \r\n        </ion-item>\r\n\r\n    </ion-item-group>\r\n\r\n\r\n    <ion-item-group class=\"ion-margin-vertical\">\r\n      <ion-item-divider color=\"light\">\r\n        <ion-label>\r\n          <h2>Scegli il documento</h2>\r\n        </ion-label>\r\n        </ion-item-divider> \r\n\r\n        <!-- SE  SIAMO SU DESKTOP -->\r\n        <ion-item  *ngIf=\"isDesktop\" button (click)=\"onDesktopSearch()\">\r\n            <input accept=\".pdf, image/*\" hidden id=\"myInput\" type=\"file\" (change)=\"onChangedDesktopFile($event)\">\r\n            <ion-icon slot=\"start\" name=\"folder-open-outline\"></ion-icon>\r\n            <ion-label *ngIf=\"!loadedDesktopFile\" class=\"myPlaceholder\">Fai clic e scegli il file</ion-label>\r\n            <p>{{fileNameShow}}</p>\r\n        </ion-item>\r\n    \r\n        <!-- SE  SIAMO SU MOBILE -->\r\n        <ion-item *ngIf=\"!isDesktop\" button (click)=\"onMobileSearch()\">\r\n          <ion-icon slot=\"start\" name=\"folder-open-outline\"></ion-icon>\r\n          <ion-label *ngIf=\"!fileLoaded\" class=\"myPlaceholder\">Scegli il file</ion-label>\r\n          {{fileNameShow}}\r\n        </ion-item>\r\n\r\n\r\n    </ion-item-group>    \r\n\r\n\r\n  </ion-list>\r\n</ion-content>\r\n\r\n<ion-footer>\r\n  <ion-button  expand = \"block\" (click)=\"onClickCarica()\">\r\n    <ion-icon slot=\"start\" name=\"cloud-upload-outline\"></ion-icon>\r\n      Carica\r\n  </ion-button>\r\n</ion-footer>","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { AreaPaymentSetting } from 'src/app/models/areapaymentsetting.model';\r\nimport { PaymentChannel, PaymentMode, ValueList } from 'src/app/models/valuelist.model';\r\nimport { Platform, ActionSheetController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-payment-mode',\r\n  templateUrl: './payment-mode.component.html',\r\n  styleUrls: ['./payment-mode.component.scss'],\r\n})\r\nexport class PaymentModeComponent implements OnInit {\r\n\r\n  @Input() arPayment: AreaPaymentSetting[] = [];\r\n  @Output() onPaymentModeChoosed = new EventEmitter<PaymentMode>();\r\n  selectedPaymentMode: ValueList;\r\n  \r\n  arPaymentModeList: ValueList[] = []; //Il contenuto dell'array è al max 3 record (Paga struttura, adesso, bonifico)\r\n  \r\n  constructor(private actionSheetController: ActionSheetController) { }\r\n\r\n  ngOnInit() {\r\n    //Creo una lista con le possibilità\r\n    this.arPaymentModeList = AreaPaymentSetting.prepareArPaymentMode(this.arPayment);\r\n\r\n    this.chooseStartPayment();\r\n\r\n  }\r\n\r\n  /**\r\n   * Scegli un pagamento da proporre\r\n   * Se presente il metodo elettronico sceglie quello, altrimenti onSite o in ultimo il Bonifico\r\n   */\r\n  chooseStartPayment() {\r\n    \r\n    if (this.arPaymentModeList) {\r\n      console.log(this.arPaymentModeList);\r\n      \r\n      if (this.arPaymentModeList.length != 0) {\r\n        //Metto in ordine decrescente\r\n        this.arPaymentModeList.sort((a,b) => b.value - a.value);\r\n\r\n        //Se non ho un paga Adesso giro nuovamente in ordine crescente\r\n        if (this.arPaymentModeList[0].value != PaymentMode.pagaAdesso) {\r\n         \r\n          this.arPaymentModeList.sort((a,b) => a.value - b.value);\r\n        }\r\n        //In prima posizione ho il pagamenti che cercavo\r\n        this.arPaymentModeList[0].selected = true;\r\n        //Emetto un evento di modifica e imposto il pagamento selezionato\r\n        this.onChangePaymentSelection(this.arPaymentModeList[0]);\r\n        \r\n      }\r\n    }\r\n  }\r\n\r\n  get itemIcon() {\r\n    let nameIcon = 'cart-outline';\r\n\r\n    if (this.selectedPaymentMode) {\r\n      nameIcon = this.selectedPaymentMode.itemIcon;\r\n    }\r\n\r\n    return nameIcon;\r\n  }\r\n\r\n\r\n  /**\r\n   * Apertura delle voci di scelta\r\n   * Mobile: ActionSheet\r\n   * Desktop: \r\n   */\r\n   onOpenChoose() {\r\n    let buttonsArray: any[]=[];\r\n    let singleButton: any;\r\n\r\n    if (this.arPaymentModeList) {\r\n      if (this.arPaymentModeList.length !== 0) {\r\n\r\n        //Popolo i Bottoni\r\n        for (const iterator of this.arPaymentModeList) {\r\n          singleButton = {\r\n            text: iterator.description,\r\n            icon: iterator.itemIcon,\r\n            handler: ()=>{\r\n              //Cambio metodo pagamento\r\n              this.onChangePaymentSelection(iterator);\r\n            }\r\n          }\r\n    \r\n          buttonsArray.push(singleButton);\r\n        }\r\n    \r\n        //Pulsante Annulla\r\n        singleButton = {\r\n          text:'Annulla',\r\n          icon:'arrow-undo-sharp',\r\n          role: 'cancel'\r\n        }\r\n        buttonsArray.push(singleButton);\r\n    \r\n        this.actionSheetController.create({\r\n          header: 'Come desideri pagare ?',\r\n          buttons: buttonsArray\r\n        })\r\n        .then(elAction => {\r\n          elAction.present();\r\n        });\r\n\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n\r\n   \r\n\r\n\r\n  /**\r\n   * Cambio di selezione nel pagamento\r\n   * @param value Nuova selezione\r\n   */\r\n  onChangePaymentSelection(mySelection: ValueList) {\r\n    //Memorizzo il pagamento\r\n    this.selectedPaymentMode = mySelection;\r\n\r\n    //Invio l'informazione al padre\r\n    this.onPaymentModeChoosed.emit(mySelection.value);\r\n  }\r\n\r\n}\r\n","<!-- NELLA PAGINA DOVE VIENE INNESTATO IL COMPONENTE CIRCONDARLO DENTRO A ION-LIST-->\r\n<ion-item *ngIf=\"!arPaymentModeList.length\" lines=\"none\">\r\n  <ion-label>Pagamento non supportato</ion-label>\r\n</ion-item>\r\n\r\n<ion-item button *ngIf=\"arPaymentModeList.length\" lines=\"full\" [detail]=\"true\" (click)=\"onOpenChoose()\">\r\n  <ion-icon slot=\"start\" [name]=\"itemIcon\"></ion-icon>\r\n  <ion-label *ngIf=\"selectedPaymentMode\">\r\n    <h6>{{selectedPaymentMode?.description}}</h6>\r\n    <p *ngIf=\"arPaymentModeList.length > 1\">\r\n        Clicca per altri metodi di pagamento\r\n    </p>\r\n  </ion-label>\r\n  <ion-label *ngIf=\"!selectedPaymentMode\">Scegli metodo di pagamento</ion-label>\r\n</ion-item>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { SlotTime } from 'src/app/models/imdb/slottime.model';\r\nimport { StatoSlot } from 'src/app/models/valuelist.model';\r\nimport { LogApp } from 'src/app/models/log.model';\r\n\r\n@Component({\r\n  selector: 'app-slottime',\r\n  templateUrl: './slottime.component.html',\r\n  styleUrls: ['./slottime.component.scss'],\r\n})\r\nexport class SlottimeComponent implements OnInit {\r\n\r\n  @Input() mySlot: SlotTime;\r\n  @Output() clickSlot = new EventEmitter<SlotTime>();\r\n  @Input() captionBtn = ''; //Caption da visualizzare nel bottone\r\n  @Input() readOnly = false; //Gli slot sono ReadOnly\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n  getClassButton() {\r\n    let myClass = '';\r\n    if (this.readOnly) {\r\n      myClass = \"slot-read-only\";\r\n    }\r\n    else {\r\n      if (this.mySlot.STATO == StatoSlot.occupato) {\r\n        myClass = 'slot-busy';\r\n      }\r\n      else if (this.mySlot.STATO == StatoSlot.chiuso) {\r\n        myClass = \"slot-read-only\";\r\n      }\r\n      else if (this.mySlot.STATO == StatoSlot.contattare) {\r\n        myClass = \"slot-free-contact\";\r\n      }      \r\n      else {\r\n        // Button utilizzabile\r\n        if (this.mySlot.selected) {\r\n          myClass = 'slot-selected';\r\n        }\r\n        else {\r\n          myClass = 'slot-free';\r\n        }\r\n      }\r\n    }\r\n\r\n    \r\n\r\n    return myClass;\r\n  }\r\n\r\n  getDisableButton() {\r\n\r\n    let disable = false;\r\n\r\n    if (this.mySlot.STATO == StatoSlot.occupato || this.mySlot.STATO == StatoSlot.chiuso || this.readOnly) {\r\n      disable = true;\r\n    }\r\n\r\n    return disable;\r\n  }\r\n\r\n  getCaptionButton() {\r\n    let caption = '';\r\n    if (!this.readOnly) {\r\n      if (this.mySlot.selected) {\r\n        caption = this.captionBtn;\r\n      }\r\n      else {\r\n        switch (this.mySlot.STATO) {\r\n          case StatoSlot.occupato:\r\n            caption = 'occupato'\r\n            break;\r\n            case StatoSlot.contattare:\r\n              caption = 'contattare';\r\n              break;            \r\n          case StatoSlot.chiuso:\r\n            caption = ''\r\n            break;\r\n        \r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return caption;\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @returns Nome Icona da visualizzare\r\n   */\r\n  getIconButton() {\r\n    let nameIcon = '';\r\n\r\n    if (!this.readOnly) {\r\n      if (this.mySlot.selected) {\r\n        nameIcon = 'checkmark';\r\n      }\r\n      else {\r\n        switch (this.mySlot.STATO) {\r\n          case StatoSlot.occupato:\r\n            nameIcon = 'thumbs-down';\r\n            break;\r\n            case StatoSlot.contattare:\r\n              nameIcon = 'call';\r\n              break;            \r\n          case StatoSlot.chiuso:\r\n            nameIcon = ''\r\n            break;\r\n        \r\n          default:\r\n            nameIcon = '';\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return nameIcon;\r\n  }  \r\n\r\n  showIconButton() {\r\n    let showIcon = false;\r\n\r\n    if (!this.readOnly) {\r\n\r\n      if (this.mySlot.selected) {\r\n        showIcon = true;\r\n      }\r\n      else {\r\n        switch (this.mySlot.STATO) {\r\n          case StatoSlot.occupato:\r\n            showIcon = true;\r\n            break;\r\n            case StatoSlot.contattare:\r\n              showIcon = true;\r\n              break;            \r\n          case StatoSlot.chiuso:\r\n            showIcon = false;\r\n            break;\r\n        \r\n          default:\r\n            showIcon = false;\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return showIcon;\r\n  }    \r\n\r\n  /**\r\n   * Emetto un evento di scelta slot\r\n   */\r\n  chooseSlot() {\r\n\r\n    this.clickSlot.emit(this.mySlot);\r\n    \r\n  }\r\n\r\n}\r\n","<ion-card>\r\n  \r\n    <ion-row class=\"ion-align-items-center\">\r\n      <ion-col size=\"2\" size-xs = \"3\" id=\"col-orari\" class=\"ion-no-padding\">\r\n        <ion-grid class=\"ion-no-margin\">\r\n          \r\n          <ion-row >\r\n            <ion-col>\r\n              <div class=\"ion-text-center\">\r\n                <span class=\"orario-black\">\r\n                {{ mySlot.START | date : \"HH:mm\" }}\r\n                </span>\r\n              </div>\r\n            </ion-col>\r\n          </ion-row>\r\n\r\n          <ion-row>\r\n            <ion-col>\r\n              <div class=\"ion-text-center\">\r\n                <span class=\"orario-light\">\r\n                  {{ mySlot.END | date : \"HH:mm\" }}\r\n                </span>\r\n              </div>\r\n            </ion-col>\r\n          </ion-row>\r\n        </ion-grid>\r\n      </ion-col>\r\n      <ion-col\r\n          size-xs = \"9\" \r\n          size = \"10\"\r\n          id=\"col-slot\"\r\n          class=\"ion-padding-horizontal\">\r\n        <ion-button \r\n            expand=\"block\" \r\n            [ngClass] = \"getClassButton()\"\r\n            [disabled]=\"getDisableButton()\"\r\n            (click)=\"chooseSlot()\">\r\n            <ion-icon [name]=\"getIconButton()\" slot=\"start\" *ngIf=\"showIconButton()\"></ion-icon>\r\n            {{ getCaptionButton() }}\r\n        </ion-button>\r\n      </ion-col>\r\n    </ion-row>\r\n  \r\n</ion-card>\r\n"]}