{"version":3,"sources":["webpack:///src/app/pages/history/historycourse/allegatilist/allegatilist.page.ts","webpack:///src/app/pages/history/historycourse/allegatilist/allegatilist.page.html","webpack:///src/app/services/file.service.ts"],"names":["AllegatilistPage","loadingController","modalController","toastController","startService","fileService","listAllegati","requestListAllegati","event","create","message","spinner","backdropDismiss","then","elLoading","present","requestListAllegatiByIdCorso","myCorso","ID","target","complete","dismiss","error","showMessage","console","messaggio","duration","elModal","elemento","FILENAMEESTENSIONE","length","requestDocumento","elBlob","log","open","Error","onClose","FileService","file","fileOpener","platform","blob","name","url","window","URL","createObjectURL","link","document","createElement","download","href","body","appendChild","click","removeChild","fileName","filePath","cacheDirectory","writeFile","replace","fileEntry","toURL","type","err","is","openMobile","openDesktop"],"mappings":"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","file":"default~pages-history-historycourse-historycourse-module~pages-home-home-module~pages-location-cours~979ea316-es5.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { LoadingController, ModalController, ToastController } from '@ionic/angular';\r\nimport { element } from 'protractor';\r\nimport { RequestDecode, RequestParams } from 'src/app/library/models/requestParams.model';\r\nimport { DocstructureService } from 'src/app/library/services/docstructure.service';\r\nimport { Corso } from 'src/app/models/corso.model';\r\nimport { CorsoAllegato } from 'src/app/models/corsoallegato.model';\r\nimport { FileService } from 'src/app/services/file.service';\r\nimport { StartService } from 'src/app/services/start.service';\r\n\r\n@Component({\r\n  selector: 'app-allegatilist',\r\n  templateUrl: './allegatilist.page.html',\r\n  styleUrls: ['./allegatilist.page.scss'],\r\n})\r\nexport class AllegatilistPage implements OnInit {\r\n  \r\n  @Input() myCorso:Corso\r\n  listAllegati: CorsoAllegato[] = [];\r\n\r\n\r\n  constructor(\r\n    private loadingController: LoadingController,\r\n    private modalController: ModalController,\r\n    private toastController: ToastController,\r\n    private startService: StartService,\r\n    private fileService: FileService\r\n    \r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.requestListAllegati();    \r\n  }\r\n\r\n\r\n  requestListAllegati(event?: any){\r\n\r\n    \r\n\r\n    this.loadingController.create({\r\n      message: 'Caricamento...',\r\n      spinner: \"circular\",\r\n      backdropDismiss: true\r\n    })\r\n    .then(elLoading => {\r\n      \r\n      //il loading Ã¨ pronto\r\n      if(!event){\r\n        elLoading.present();\r\n      }\r\n      return this.startService.requestListAllegatiByIdCorso(this.myCorso.ID);\r\n    })\r\n    .then(listAllegati => {\r\n\r\n      //i dati sono arrivati\r\n      if(event){\r\n        event.target.complete();\r\n      }\r\n      else{\r\n        this.loadingController.dismiss();\r\n      }\r\n      this.listAllegati = listAllegati;\r\n    })\r\n    .catch(error => {\r\n\r\n      //i dati non sono arrivati\r\n      if(event){\r\n        event.target.complete();\r\n      }\r\n      else{\r\n        this.loadingController.dismiss();\r\n      }\r\n      this.showMessage('Errore di connessione')\r\n      console.error(error);\r\n    })\r\n  }\r\n\r\n\r\n\r\n  onClose(){\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n\r\n\r\n\r\n  showMessage (messaggio : string){\r\n    this.toastController.create({\r\n      message: messaggio,\r\n      duration: 3000\r\n\r\n    }).then (elModal => {\r\n      elModal.present();\r\n    })\r\n  }\r\n\r\n  downloadAllegato(elemento: CorsoAllegato){\r\n    if(elemento && elemento.FILENAMEESTENSIONE && elemento.FILENAMEESTENSIONE.length > 0){\r\n      //ho il percorso per scaricare il file\r\n      \r\n      this.loadingController.create({\r\n        message: 'Caricamento',\r\n        spinner: 'circular',\r\n        backdropDismiss: true\r\n      })\r\n      .then(elLoading => {\r\n        elLoading.present();\r\n\r\n        return this.startService.requestDocumento(elemento.FILENAMEESTENSIONE);\r\n      })\r\n      .then(elBlob => {\r\n        this.loadingController.dismiss();\r\n\r\n        console.log(elBlob);\r\n        if(elBlob){\r\n          this.fileService.open(elBlob);\r\n        }\r\n        else{\r\n          throw new Error();\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        this.showMessage('Impossibile scaricare il file');\r\n      })\r\n    }\r\n\r\n\r\n  }\r\n\r\n}\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-title>Materiale Allegato</ion-title>\r\n\r\n    <ion-buttons slot=\"end\">\r\n      <ion-button fill=\"clear\" (click)=\"onClose()\">\r\n        <ion-icon name=\"close\"></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n\r\n  <ion-refresher slot=\"fixed\" (ionRefresh)=\"requestListAllegati($event)\">\r\n    <ion-refresher-content></ion-refresher-content>\r\n  </ion-refresher>\r\n\r\n  <!-- NESSUN DOCUMENTO PRESENTE -->\r\n  <div *ngIf=\"listAllegati.length === 0\" class=\"nofind-cnt\">\r\n    <ion-label>Nessun allegato</ion-label>\r\n    <ion-label>disponibile</ion-label>\r\n  </div>\r\n\r\n\r\n  <!-- DOCUMENTI PRESENTI -->\r\n  <ion-list *ngIf=\"listAllegati.length > 0\">\r\n    <ion-item *ngFor=\"let allegato of listAllegati\" button (click)=\"downloadAllegato(allegato)\">\r\n      <ion-icon slot=\"start\" class=\"\" color =\"\" [name]=\"allegato.fileTypeIconName\"></ion-icon>\r\n        <ion-label>\r\n          <h3>{{allegato.DESCRIZIONE}}</h3>\r\n        </ion-label>\r\n        <ion-icon slot=\"end\" color=\"primary\" name=\"cloud-download-outline\"></ion-icon>\r\n    </ion-item>\r\n  </ion-list>\r\n</ion-content>\r\n","import { Injectable } from '@angular/core';\r\nimport { FileOpener } from '@ionic-native/file-opener/ngx';\r\nimport { File } from '@ionic-native/file/ngx';\r\nimport { Platform } from '@ionic/angular';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FileService {\r\n\r\n  constructor(\r\n    private file: File,\r\n    private fileOpener: FileOpener,\r\n    private platform: Platform\r\n  ) { }\r\n\r\n  openDesktop(blob: Blob){\r\n\r\n\r\n    //per scaricare il file creo via javascript un link fittizio agganciando il percorso del blob, e ne scateno l'evento click\r\n    let name='File'\r\n    let url  = window.URL.createObjectURL(blob);\r\n    let link = document.createElement(\"a\");\r\n    link.download = name;\r\n    link.href = url;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n\r\n\r\n  }\r\n\r\n  openMobile(blob: Blob){\r\n    let fileName='Documento';         \r\n    let filePath= this.file.cacheDirectory;      \r\n    console.log('percorso: '+filePath);  \r\n\r\n        this.file.writeFile(filePath, fileName, blob, { replace:true }).then((fileEntry) => {\r\n\r\n          console.log(\"File created!\");          \r\n          this.fileOpener.open(fileEntry.toURL(), blob.type)\r\n            .then(() => console.log('File is opened'))\r\n            .catch(err => console.error('Error openening file: ' + err));\r\n        })\r\n          .catch((err) => {\r\n            console.error(\"Error creating file: \");\r\n            console.log(err);\r\n            throw err;  \r\n          });\r\n  }\r\n\r\n\r\n  /**\r\n   * scarica e visualizza un blob da mobile o desktop\r\n   */\r\n  open(blob: Blob){\r\n    if (blob){\r\n\r\n      if(this.platform.is(\"hybrid\")){\r\n        this.openMobile(blob);\r\n      }\r\n      else{\r\n        this.openDesktop(blob);\r\n      }\r\n    }\r\n    else{\r\n      console.log('Blob inesistente');\r\n      throw new Error();\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n"]}