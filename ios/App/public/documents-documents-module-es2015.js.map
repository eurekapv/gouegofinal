{"version":3,"sources":["./src/app/pages/account/documents/documents-routing.module.ts","./src/app/pages/account/documents/documents.module.ts","./src/app/services/file.service.ts","./src/app/pages/account/documents/documents.page.ts","./src/app/pages/account/documents/documents.page.html"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAEN;;;AAEjD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6DAAa;KACzB;CACF,CAAC;AAMK,MAAM,0BAA0B;;oGAA1B,0BAA0B;yGAA1B,0BAA0B;6GAH5B,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,0BAA0B,uFAF3B,4DAAY;;;;;;;;;;;;;ACbxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACF;AAEA;AAEO;AAGwC;AAIpB;AAEvB;;AAiB1C,MAAM,mBAAmB;;sFAAnB,mBAAmB;kGAAnB,mBAAmB;uGAHnB,CAAC,iEAAO,CAAC,YATX;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,oFAA0B;YAE1B,yGAAsB;SACvB;mIAKU,mBAAmB,mBAJf,6DAAa,aAP1B,4DAAY;QACZ,0DAAW;QACX,0DAAW;QACX,oFAA0B;QAE1B,yGAAsB;;;;;;;;;;;;;ACzB1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2D;AACb;AACJ;;;;;AAMnC,MAAM,WAAW;IAEtB,YACU,IAAU,EACV,UAAsB,EACtB,QAAkB;QAFlB,SAAI,GAAJ,IAAI,CAAM;QACV,eAAU,GAAV,UAAU,CAAY;QACtB,aAAQ,GAAR,QAAQ,CAAU;IACxB,CAAC;IAEL,WAAW,CAAC,IAAU;QAGpB,0HAA0H;QAC1H,IAAI,IAAI,GAAC,MAAM;QACf,IAAI,GAAG,GAAI,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAGlC,CAAC;IAED,UAAU,CAAC,IAAU;QACnB,IAAI,QAAQ,GAAC,WAAW,CAAC;QACzB,IAAI,QAAQ,GAAE,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,YAAY,GAAC,QAAQ,CAAC,CAAC;QAE/B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,OAAO,EAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,EAAE;YAEjF,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;YAC7B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC;iBAC/C,IAAI,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;iBACzC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,wBAAwB,GAAG,GAAG,CAAC,CAAC,CAAC;QACjE,CAAC,CAAC;aACC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;YACb,OAAO,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;YACvC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,MAAM,GAAG,CAAC;QACZ,CAAC,CAAC,CAAC;IACX,CAAC;IAGD;;OAEG;IACH,IAAI,CAAC,IAAU;QACb,IAAI,IAAI,EAAC;YAEP,IAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAC;gBAC5B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;aACvB;iBACG;gBACF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aACxB;SACF;aACG;YACF,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;YAChC,MAAM,IAAI,KAAK,EAAE,CAAC;SACnB;IACH,CAAC;;sEA7DU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;ACNpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8D;AACV;AAC2C;AACX;AACU;AAClB;AACc;AACN;AAC/B;AAEkB;AACzB;AACa;AACC;;;;;;;;;;;;ICRxD,kFAAgE;IAC9D,iFAAsC;IAA1B,oUAAyB;IACnC,0EAAgC;IAClC,6DAAa;IACf,6DAAc;;;IAahB,2EAA2D;IACzD,6EAAW;IAAA,4EAAgB;IAAA,6DAAY;IACvC,6EAAW;IAAA,uEAAW;IAAA,6DAAY;IACpC,6DAAM;;;;IAKF,+EAE4C;IAApC,wXAAmC;IACzC,2EAA2F;IAC3F,6EAAW;IACT,sEAAI;IAAA,wDAAkD;IAAA,6DAAK;IAC3D,qEAAG;IAAA,wDAAqE;;IAAA,6DAAI;IAC9E,6DAAY;IACZ,2EAA8E;IAChF,6DAAW;;;IAJH,2DAAkD;IAAlD,mHAAkD;IACnD,2DAAqE;IAArE,wMAAqE;;;IARhF,uEAAsC;IACpC,4EAAU;IACR,4HASW;IACb,6DAAW;IACb,6DAAM;;;IAV4B,2DAAgB;IAAhB,0FAAgB;;ADT7C,MAAM,aAAa;IAQxB,YAAoB,YAA0B,EAC1B,OAAgB,EAChB,eAAgC,EAChC,eAAgC,EAChC,mBAAwC,EACxC,iBAAoC,EACpC,QAAkB,EAClB,IAAU,EACV,UAAsB,EACtB,WAAwB;QATxB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,YAAO,GAAP,OAAO,CAAS;QAChB,oBAAe,GAAf,eAAe,CAAiB;QAChC,oBAAe,GAAf,eAAe,CAAiB;QAChC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,aAAQ,GAAR,QAAQ,CAAU;QAClB,SAAI,GAAJ,IAAI,CAAM;QACV,eAAU,GAAV,UAAU,CAAY;QACtB,gBAAW,GAAX,WAAW,CAAa;QAf5C,oDAAoD;QACpD,kBAAa,GAAqB,EAAE,CAAC;QACrC,gBAAW,GAAG,IAAI,CAAC;QAEnB,uBAAkB,GAA0B,EAAE,CAAC;IAY/B,CAAC;IAEjB,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;IAED;;;OAGG;IACH,qBAAqB,CAAC,KAAW;QAE/B,IAAI,SAAS,GAAG,IAAI,wFAAa,EAAE,CAAC;QACpC,SAAS,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;QAC/B,SAAS,CAAC,MAAM,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC;QAEzD,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE;YAElC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;gBAC5B,OAAO,EAAE,aAAa;gBACtB,OAAO,EAAE,UAAU;gBACnB,eAAe,EAAE,IAAI;aACtB,CAAC;iBACD,IAAI,CAAC,SAAS,CAAC,EAAE;gBAChB,IAAI,CAAC,KAAK,EAAC;oBACT,sEAAsE;oBACtE,SAAS,CAAC,OAAO,EAAE,CAAC;iBACrB;gBAED,2DAA2D;gBAC3D,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,gBAAgB,EAAE,SAAS,CAAC;qBACnG,IAAI,CAAC,SAAS,CAAC,EAAE;oBAEhB,IAAI,CAAC,KAAK,EAAC;wBACT,gFAAgF;wBAChF,SAAS,CAAC,OAAO,EAAE,CAAC;qBACrB;yBACG;wBACF,0DAA0D;wBAC1D,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;qBACzB;oBAED,iCAAiC;oBACjC,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC,gBAAgB,CAAC,CAAC;oBACjD,mCAAmC;gBACrC,CAAC,CAAC;qBACD,KAAK,CAAC,KAAK,CAAC,EAAE;oBAEb,IAAI,CAAC,KAAK,EAAC;wBACT,gFAAgF;wBAChF,SAAS,CAAC,OAAO,EAAE,CAAC;qBACrB;yBACG;wBACF,0DAA0D;wBAC1D,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;qBACzB;oBAED,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACnB,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC;oBACzC,2BAA2B;oBAC3B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;gBAC1B,CAAC,CAAC,CAAC;YACL,CAAC,CAAC;SACH;aACI;YACH,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;SACzB;IAEH,CAAC;IAED;;;OAGG;IACH,oBAAoB;QAClB,6BAA6B;QAC7B,IAAI,MAAM,GAAG,IAAI,0FAAkB,CAAC,IAAI,CAAC,CAAC;QAC1C,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QAClB,MAAM,CAAC,kBAAkB,CAAC,yFAAiB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAEhE,qBAAqB;QACrB,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,MAAM,CAAC;aAC1C,IAAI,CAAC,kBAAkB,CAAC,EAAE;YACzB,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAC/C,CAAC,CAAC,CAAC;IAEL,CAAC;IAGD;;;OAGG;IACH,aAAa;QAEX,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;YAC1B,SAAS,EAAE,iGAAe;YAC1B,cAAc,EAAE;gBACd,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS;gBACxC,aAAa,EAAE,IAAI,CAAC,kBAAkB;aACvC;SACF,CAAC;aACD,IAAI,CAAC,OAAO,CAAC,EAAE;YAEd,sCAAsC;YACtC,OAAO,CAAC,OAAO,EAAE,CAAC;YAElB,kCAAkC;YAClC,OAAO,CAAC,aAAa,EAAE;iBACtB,IAAI,CAAC,IAAI,CAAC,EAAE;gBACL,2CAA2C;gBAC7C,IAAI,uBAAuB,GAAyB,IAAI,CAAC,MAAM,CAAC,CAAC;gBAEjE,iDAAiD;gBACjD,IAAI,CAAC,qBAAqB,CAAC,uBAAuB,CAAC,CAAC;YAC1D,CAAC,CAAC,CAAC;YAEH,YAAY;QACd,CAAC,CAAC,CAAC;IACL,CAAC;IAGD;;;OAGG;IACH,qBAAqB,CAAC,uBAA6C;QAEjE,4CAA4C;QAC5C,IAAI,uBAAuB,EAAC;YAE1B,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;gBAC5B,OAAO,EAAE,aAAa;gBACtB,OAAO,EAAE,UAAU;gBACnB,eAAe,EAAE,IAAI;aACtB,CAAC;iBACD,IAAI,CAAC,SAAS,CAAC,EAAE;gBAEhB,SAAS,CAAC,OAAO,EAAE,CAAC;gBAEpB,8CAA8C;gBAC9C,IAAI,UAAU,GAAG,IAAI,kEAAM,EAAE,CAAC;gBAE9B,yBAAyB;gBACzB,uBAAuB,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,CAAC;gBAExE,mBAAmB;gBACnB,4CAA4C;gBAC5C,IAAI,WAAW,GAAG,IAAI,oFAAY,EAAE,CAAC;gBACrC,WAAW,CAAC,eAAe,GAAG,IAAI,CAAC;gBACnC,WAAW,CAAC,eAAe,GAAG,IAAI,CAAC;gBACnC,WAAW,CAAC,oBAAoB,GAAG,IAAI,CAAC;gBACxC,WAAW,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBACzC,WAAW,CAAC,eAAe,GAAG,KAAK,CAAC;gBAEpC,kBAAkB;gBAClB,IAAI,MAAM,GAAW,uBAAuB,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;gBAEvE,kCAAkC;gBAClC,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,UAAU,EAAE,sBAAsB,EAAE,MAAM,CAAC;qBACtF,IAAI,CAAC,WAAW,CAAC,EAAE;oBAElB,SAAS,CAAC,OAAO,EAAE,CAAC;oBAEpB,mBAAmB;oBACnB,IAAI,UAAU,GAAG,IAAI,oFAAY,EAAE,CAAC;oBACpC,UAAU,GAAG,WAAW,CAAC,QAAQ,CAAC;oBAElC,IAAI,UAAU,EAAC;wBACb,IAAI,UAAU,CAAC,MAAM,EAAE;4BACrB,kCAAkC;4BAClC,IAAI,CAAC,WAAW,CAAC,wBAAwB,CAAC,CAAC;4BAE3C,wCAAwC;4BACxC,IAAI,CAAC,qBAAqB,EAAE,CAAC;yBAE9B;6BACG;4BACF,qCAAqC;4BACrC,IAAI,UAAU,CAAC,OAAO,IAAI,UAAU,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;gCACzD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;6BACtC;iCACI;gCACH,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAC;6BACxC;yBACF;qBACF;yBACG;wBACF,yCAAyC;wBACzC,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,CAAC;qBAC3C;gBACH,CAAC,CAAC;qBACD,KAAK,CAAC,KAAK,CAAC,EAAE;oBAEb,SAAS,CAAC,OAAO,EAAE,CAAC;oBAEpB,oCAAoC;oBACpC,OAAO,CAAC,GAAG,CAAE,KAAK,CAAC,CAAC;oBACpB,IAAI,CAAC,WAAW,CAAC,wBAAwB,CAAC,CAAC;gBAC7C,CAAC,CAAC,CAAC;YACL,CAAC,CAAC;SACH;IACH,CAAC;IAED;;OAEG;IACH,cAAc,CAAC,QAAwB;QACrC,+BAA+B;QAC/B,IAAG,QAAQ,IAAI,QAAQ,CAAC,kBAAkB,IAAI,QAAQ,CAAC,kBAAkB,CAAC,MAAM,GAAG,CAAC,EAAC;YAEnF,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;gBAC5B,OAAO,EAAE,aAAa;gBACtB,OAAO,EAAE,UAAU;gBACnB,eAAe,EAAE,IAAI;aACtB,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;gBAEhB,SAAS,CAAC,OAAO,EAAE,CAAC;gBAEtB,4BAA4B;gBAC5B,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,QAAQ,CAAC,kBAAkB,CAAC;qBAC9D,IAAI,CAAC,IAAI,CAAC,EAAE;oBACX,kCAAkC;oBAClC,SAAS,CAAC,OAAO,EAAE,CAAC;oBAEpB,IAAG,IAAI,EAAC;wBACN,uCAAuC;wBACvC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;qBAC5B;yBACG;wBAEF,IAAI,CAAC,WAAW,CAAC,yBAAyB,CAAC,CAAC;qBAC7C;gBACH,CAAC,CAAC;qBACD,KAAK,CAAC,KAAK,CAAC,EAAE;oBAEb,SAAS,CAAC,OAAO,EAAE,CAAC;oBACpB,4BAA4B;oBAC5B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACnB,IAAI,CAAC,WAAW,CAAC,+BAA+B,CAAC,CAAC;gBACpD,CAAC,CAAC;YAEJ,CAAC,CAAC;SACH;aACG;YACF,IAAI,CAAC,WAAW,CAAC,uCAAuC,CAAC,CAAC;SAC3D;IACH,CAAC;IAGD;;OAEG;IACH,WAAW,CAAC,SAAiB;QAC3B,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;YAC1B,OAAO,EAAE,SAAS;YAClB,QAAQ,EAAE,IAAI;SACf,CAAC;aACD,IAAI,CAAC,OAAO,CAAC,EAAE;YACd,OAAO,CAAC,OAAO,EAAE,CAAC;QACpB,CAAC,CAAC;IACJ,CAAC;;0EAzRU,aAAa;8FAAb,aAAa;QCvB1B,8EAAY;QACV,kFAA6B;QAC3B,kFAA0B;QACxB,iFAA0D;QAC5D,6DAAc;QACd,6EAAW;QAAA,4EAAgB;QAAA,6DAAY;QACvC,0HAIc;QAChB,6DAAc;QAChB,6DAAa;QAIb,+EAAa;QAEX,oFAAyE;QAA7C,6JAAc,iCAA6B,IAAC;QACtE,oFAA+C;QACjD,6DAAgB;QAGhB,4GAGM;QAGN,4GAaM;QAGR,6DAAc;;QAvCe,2DAAqC;QAArC,+IAAqC;QAiB1D,2DAAgC;QAAhC,iGAAgC;QAMhC,2DAA8B;QAA9B,+FAA8B","file":"documents-documents-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { DocumentsPage } from './documents.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DocumentsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DocumentsPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { Chooser } from '@ionic-native/chooser/ngx';\r\n\r\nimport { UploadComponent } from 'src/app/shared/components/upload/upload.component';\r\nimport { SharedComponentsModule } from 'src/app/shared/components/shared-components.module';\r\n\r\n\r\n\r\nimport { DocumentsPageRoutingModule } from './documents-routing.module';\r\n\r\nimport { DocumentsPage } from './documents.page';\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    DocumentsPageRoutingModule,\r\n    \r\n    SharedComponentsModule\r\n  ],\r\n  declarations: [DocumentsPage],\r\n  providers: [Chooser],\r\n  entryComponents: [UploadComponent]\r\n})\r\nexport class DocumentsPageModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { FileOpener } from '@ionic-native/file-opener/ngx';\r\nimport { File } from '@ionic-native/file/ngx';\r\nimport { Platform } from '@ionic/angular';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FileService {\r\n\r\n  constructor(\r\n    private file: File,\r\n    private fileOpener: FileOpener,\r\n    private platform: Platform\r\n  ) { }\r\n\r\n  openDesktop(blob: Blob){\r\n\r\n\r\n    //per scaricare il file creo via javascript un link fittizio agganciando il percorso del blob, e ne scateno l'evento click\r\n    let name='File'\r\n    let url  = window.URL.createObjectURL(blob);\r\n    let link = document.createElement(\"a\");\r\n    link.download = name;\r\n    link.href = url;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n\r\n\r\n  }\r\n\r\n  openMobile(blob: Blob){\r\n    let fileName='Documento';         \r\n    let filePath= this.file.cacheDirectory;      \r\n    console.log('percorso: '+filePath);  \r\n\r\n        this.file.writeFile(filePath, fileName, blob, { replace:true }).then((fileEntry) => {\r\n\r\n          console.log(\"File created!\");          \r\n          this.fileOpener.open(fileEntry.toURL(), blob.type)\r\n            .then(() => console.log('File is opened'))\r\n            .catch(err => console.error('Error openening file: ' + err));\r\n        })\r\n          .catch((err) => {\r\n            console.error(\"Error creating file: \");\r\n            console.log(err);\r\n            throw err;  \r\n          });\r\n  }\r\n\r\n\r\n  /**\r\n   * scarica e visualizza un blob da mobile o desktop\r\n   */\r\n  open(blob: Blob){\r\n    if (blob){\r\n\r\n      if(this.platform.is(\"hybrid\")){\r\n        this.openMobile(blob);\r\n      }\r\n      else{\r\n        this.openDesktop(blob);\r\n      }\r\n    }\r\n    else{\r\n      console.log('Blob inesistente');\r\n      throw new Error();\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { StartService } from 'src/app/services/start.service';\r\nimport { Chooser } from '@ionic-native/chooser/ngx';\r\nimport { ToastController, ModalController, LoadingController, Platform } from '@ionic/angular';\r\nimport { UploadComponent } from 'src/app/shared/components/upload/upload.component';\r\nimport { TipoDocumentazione, ClasseDocumento } from 'src/app/models/tipodocumentazione.model';\r\nimport {  RequestParams } from 'src/app/library/models/requestParams.model';\r\nimport { OperatorCondition, ParamsExport } from 'src/app/library/models/iddocument.model';\r\nimport { DocstructureService } from 'src/app/library/services/docstructure.service';\r\nimport { Utente } from 'src/app/models/utente.model';\r\nimport { Documentazione, InvioDocumentazione } from 'src/app/models/documentazione.model';\r\nimport { PostResponse } from 'src/app/library/models/postResult.model';\r\nimport { File } from '@ionic-native/file/ngx';\r\nimport { FileOpener } from '@ionic-native/file-opener/ngx';\r\nimport { FileService } from 'src/app/services/file.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-documents',\r\n  templateUrl: './documents.page.html',\r\n  styleUrls: ['./documents.page.scss'],\r\n})\r\nexport class DocumentsPage implements OnInit {\r\n\r\n  /* DA IMPLEMENTARE L'OGGETTO, LA SUBSCRIPTION ETC */\r\n  listDocumenti : Documentazione[]= [];\r\n  inRichiesta = true;\r\n\r\n  listaTipiDocumento : TipoDocumentazione[] = [];\r\n\r\n  constructor(private startService: StartService,\r\n              private chooser: Chooser,\r\n              private toastController: ToastController,\r\n              private modalController: ModalController,\r\n              private docStructureService: DocstructureService,\r\n              private loadingController: LoadingController,\r\n              private platform: Platform,\r\n              private file: File,\r\n              private fileOpener: FileOpener,\r\n              private fileService: FileService\r\n              ) { }\r\n\r\n  ngOnInit() {\r\n    this.inRichiesta = false;\r\n    this.requestTipiDocumento();\r\n    this.requestListaDocumenti();\r\n  }\r\n\r\n  /**\r\n   * Richiedo la lista dei documenti relativa all'utente\r\n   * @param event usato per chiudere il refresher (se la funzione è stata chiamata da esso)\r\n   */\r\n  requestListaDocumenti(event?: any) {\r\n\r\n    let reqParams = new RequestParams();\r\n    reqParams.decode.active = true;\r\n    reqParams.decode.addForeignField('IDTIPODOCUMENTAZIONE');\r\n\r\n    if (this.startService.actualUtente) {\r\n\r\n      this.loadingController.create({\r\n        message: 'Caricamento',\r\n        spinner: 'circular',\r\n        backdropDismiss: true\r\n      })\r\n      .then(elLoading => {\r\n        if (!event){\r\n          //se la funzione non è stata chiamata dal refresher, mostro il loading\r\n          elLoading.present();\r\n        }\r\n\r\n        //Chiedo all'utente di caricare la collection dei documenti\r\n        this.docStructureService.loadCollection(this.startService.actualUtente, 'DOCUMENTAZIONI', reqParams)\r\n        .then(objUtente => {\r\n\r\n          if (!event){\r\n            //se la funzione non è stata chiamata dal refresher, chiudo il loadingcontroller\r\n            elLoading.dismiss();\r\n          }\r\n          else{\r\n            //se la funzione è stata chiamata dal refresher, lo chiudo\r\n            event.target.complete();\r\n          }\r\n\r\n          //Recupero la lista dei documenti\r\n          this.listDocumenti = objUtente['DOCUMENTAZIONI'];\r\n          // console.log(this.listDocumenti);\r\n        })\r\n        .catch(error => {\r\n\r\n          if (!event){\r\n            //se la funzione non è stata chiamata dal refresher, chiudo il loadingcontroller\r\n            elLoading.dismiss();\r\n          }\r\n          else{\r\n            //se la funzione è stata chiamata dal refresher, lo chiudo\r\n            event.target.complete();\r\n          }\r\n\r\n          console.log(error);\r\n          this.showMessage('Errore di connessione')\r\n          //Azzero la lista documenti\r\n          this.listDocumenti = [];\r\n        });\r\n      })\r\n    }\r\n    else {\r\n      this.listDocumenti = [];\r\n    }\r\n        \r\n  }\r\n\r\n  /**\r\n   * Richiedo al server quali tipi documenti \r\n   * sono previsti da caricare\r\n   */\r\n  requestTipiDocumento(){\r\n    //creo il documento di filtro\r\n    let filter = new TipoDocumentazione(true);\r\n    filter.ZORDER = 0;\r\n    filter.addFilterCondition(OperatorCondition.maggiore, 'ZORDER');\r\n\r\n    //Faccio la richiesta\r\n    this.docStructureService.requestNew(filter)\r\n    .then(listaTipiDocumento => {\r\n      this.listaTipiDocumento = listaTipiDocumento;\r\n    });\r\n\r\n  }\r\n  \r\n  \r\n  /**\r\n   * Richiesta di aggiungere un nuovo documento\r\n   * Viene aperto in modale il componente, indicando se siamo su desktop o no, e la lista dei tipi documenti accettati\r\n   */\r\n  onAddDocument(){\r\n    \r\n    this.modalController.create({\r\n      component: UploadComponent,\r\n      componentProps: {\r\n        'isDesktop': this.startService.isDesktop,\r\n        'docTypeList': this.listaTipiDocumento\r\n      }\r\n    })\r\n    .then(elModal => {\r\n\r\n      //Mostro la videata per il caricamento\r\n      elModal.present();\r\n\r\n      //#region GESTIONE CHIUSURA MODALE\r\n      elModal.onWillDismiss()\r\n      .then(data => {\r\n              //Controlliamo se l'utente ha inserito dati\r\n            let docUploadDocumentazione : InvioDocumentazione = data['data'];\r\n            \r\n            //Passo il controllo per inviare i dati al server\r\n            this.requestUploadToServer(docUploadDocumentazione);\r\n      });\r\n\r\n      //#endregion\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Invia al server il documento passato nei parametri\r\n   * Se l'invio ha esito positivo, viene eseguito un refresh dati \r\n   */\r\n  requestUploadToServer(docUploadDocumentazione : InvioDocumentazione) {\r\n\r\n    //Informazioni da inviare al server presenti\r\n    if (docUploadDocumentazione){\r\n      \r\n      this.loadingController.create({\r\n        message: 'Caricamento',\r\n        spinner: 'circular',\r\n        backdropDismiss: true\r\n      })\r\n      .then(elLoading => {\r\n\r\n        elLoading.present();\r\n        \r\n        //creo un utente fittizio da passare alla post\r\n        let fakeUtente = new Utente();\r\n  \r\n        //Imposto il token utente\r\n        docUploadDocumentazione.TOKENUTENTE = this.startService.actualUtente.ID;\r\n  \r\n        //creo il body json\r\n        //Questi sono i parametri per l'esportazione\r\n        let paramExport = new ParamsExport();\r\n        paramExport.clearDOProperty = true;\r\n        paramExport.clearPKProperty = true;\r\n        paramExport.clearPrivateProperty = true;\r\n        paramExport.onlyPropertyModified = false;\r\n        paramExport.onlyDocModified = false;\r\n        \r\n        //Qui Creo il JSON\r\n        let myJson: string = docUploadDocumentazione.exportToJSON(paramExport);\r\n        \r\n        //ora che ho tutto, faccio la post\r\n        this.docStructureService.requestForFunction(fakeUtente, 'uploadDocumentazione', myJson)\r\n        .then(rawResponse => {\r\n          \r\n          elLoading.dismiss();\r\n\r\n          //Risposta ricevuta\r\n          let myResponse = new PostResponse();\r\n          myResponse = rawResponse.response;\r\n          \r\n          if (myResponse){\r\n            if (myResponse.result) {\r\n              //sappiamo che tutto è andato bene\r\n              this.showMessage('Caricamento completato');\r\n              \r\n              //Richiedo ancora la lista dei documenti\r\n              this.requestListaDocumenti();\r\n  \r\n            }\r\n            else{\r\n              //qualcosa è andato storto sul server\r\n              if (myResponse.message && myResponse.message.length !== 0) {\r\n                this.showMessage(myResponse.message);\r\n              }\r\n              else {\r\n                this.showMessage('Errore caricamento');\r\n              }\r\n            }\r\n          }\r\n          else{\r\n            //non ho la risposta, c'è stato un errore\r\n            this.showMessage('Errore di connessione');\r\n          }\r\n        })\r\n        .catch(error => {\r\n  \r\n          elLoading.dismiss();\r\n\r\n          //errore di comunicazione col server\r\n          console.log (error);\r\n          this.showMessage('Errore di connnessione');\r\n        });\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Eseguito un click per lo scaricamento\r\n   */\r\n  onClickElement(elemento: Documentazione){\r\n    //creo il loading e lo presento\r\n    if(elemento && elemento.FILENAMEESTENSIONE && elemento.FILENAMEESTENSIONE.length > 0){\r\n\r\n      this.loadingController.create({\r\n        message: 'Caricamento',\r\n        spinner: 'circular',\r\n        backdropDismiss: true\r\n      }).then(elLoading => {\r\n\r\n          elLoading.present();\r\n  \r\n        //ora faccio la get del file\r\n        this.startService.requestDocumento(elemento.FILENAMEESTENSIONE)\r\n        .then(blob => {\r\n          //E' andato tutto bene, ho il blob\r\n          elLoading.dismiss();\r\n          \r\n          if(blob){\r\n            //Effettuo l'apertura del file ricevuto\r\n            this.fileService.open(blob)\r\n          }\r\n          else{\r\n\r\n            this.showMessage('File non visualizzabile');\r\n          }\r\n        })\r\n        .catch(error => {\r\n\r\n          elLoading.dismiss();\r\n          //qualcosa non ha funzionato\r\n          console.log(error);\r\n          this.showMessage('Impossibile scaricare il file');\r\n        })\r\n  \r\n      })\r\n    }\r\n    else{\r\n      this.showMessage('Errore, file non presente in archivio');\r\n    }\r\n  }\r\n\r\n \r\n  /**\r\n   * Visualizza un messaggio\r\n   */\r\n  showMessage(messaggio: string){\r\n    this.toastController.create({\r\n      message: messaggio,\r\n      duration: 3000\r\n    })\r\n    .then(elToast => {\r\n      elToast.present();\r\n    })\r\n  }\r\n\r\n  \r\n}\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button defaultHref=\"/account\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>I tuoi documenti</ion-title>\r\n    <ion-buttons slot=\"end\" *ngIf=\"listaTipiDocumento?.length != 0\">\r\n      <ion-button (click)=\"onAddDocument()\">\r\n        <ion-icon name=\"add\"></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n\r\n\r\n<ion-content>\r\n\r\n  <ion-refresher slot=\"fixed\" (ionRefresh)=\"requestListaDocumenti($event)\">\r\n    <ion-refresher-content></ion-refresher-content>\r\n  </ion-refresher>\r\n\r\n  <!-- NESSUN DOCUMENTO PRESENTE -->\r\n  <div *ngIf=\"listDocumenti.length === 0\" class=\"nofind-cnt\">\r\n    <ion-label>Nessun documento</ion-label>\r\n    <ion-label>disponibile</ion-label>\r\n  </div>\r\n\r\n  <!-- DOCUMENTI PRESENTI  -->\r\n  <div *ngIf=\"listDocumenti.length > 0\">\r\n    <ion-list>\r\n      <ion-item \r\n              *ngFor=\"let documento of listDocumenti\"\r\n              (click)=\"onClickElement(documento)\">\r\n        <ion-icon slot=\"start\" class=\"icon-left\" color =\"\" name=\"document-text-outline\"></ion-icon>\r\n        <ion-label>\r\n          <h3>{{documento['_DENOMINAZIONE_TipoDocumentazione']}}</h3>\r\n          <p>Ultima modifica: {{documento.DATAORAMODIFICA | date : 'dd/LL/yyyy' }}</p>\r\n        </ion-label>\r\n        <ion-icon slot=\"end\" color=\"primary\" name=\"cloud-download-outline\"></ion-icon>\r\n      </ion-item>\r\n    </ion-list>\r\n  </div>\r\n\r\n  \r\n</ion-content>\r\n"],"sourceRoot":"webpack:///"}