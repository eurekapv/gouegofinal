{"version":3,"sources":["webpack:///src/app/pages/account/edit-account/edit-account.page.ts","webpack:///src/app/pages/account/edit-account/edit-account.page.html","webpack:///src/app/pages/account/edit-account/edit-account.module.ts","webpack:///src/app/pages/account/edit-account/edit-account-routing.module.ts"],"names":["EditAccountPage","startService","navCtr","toastCtr","loadingController","modalController","utente","listSesso","docGruppo","showCapNascita","utenteListen","subscribe","data","MOBILENUMBER","createForm","getArray","today","formatDateISO","Date","actualStartConfig","gruppo","unsubscribe","patternCodice","form","nome","NOME","updateOn","validators","required","cognome","COGNOME","sesso","SESSO","nascita","NATOIL","toISOString","provNascita","NATOPROV","comNascita","NATOA","statoNascita","NATOISOSTATO","capNascita","NATOCAP","provResidenza","PROVINCIA","comResidenza","COMUNE","indResidenza","INDIRIZZO","capResidenza","CAP","statoResidenza","ISOSTATO","cf","CODICEFISCALE","pattern","needMobileVerify","mobile","addControl","needEmailVerify","email","EMAIL","valid","value","console","log","create","message","spinner","then","elLoading","present","updateUtente","result","dismiss","showMessage","closePage","error","codFiscString","undefined","length","checkCodiceFiscale","codFiscObj","comune","provincia","dataNascita","cap","get","setValue","controls","setErrors","err","navigateBack","duration","tstMsg","component","componentProps","params","tipoVerifica","verificasms","updateDocUtente","elModal","verificaemail","onSubmit","onCfChange","EditAccountPageModule","routes","path","EditAccountPageRoutingModule","forChild"],"mappings":"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","file":"edit-account-edit-account-module-es5.js","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Utente } from 'src/app/models/utente.model';\r\nimport { ValueList, Sesso } from 'src/app/models/valuelist.model';\r\nimport { StartService } from 'src/app/services/start.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { NavController, ToastController, LoadingController, ModalController } from '@ionic/angular';\r\nimport { MyDateTime } from 'src/app/library/models/mydatetime.model';\r\nimport { VerifyPage } from 'src/app/pages/auth/verify/verify.page'\r\nimport { TipoVerificaAccount } from 'src/app/models/valuelist.model'\r\nimport { Gruppo } from 'src/app/models/gruppo.model';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-edit-account',\r\n  templateUrl: './edit-account.page.html',\r\n  styleUrls: ['./edit-account.page.scss'],\r\n})\r\nexport class EditAccountPage implements OnInit, OnDestroy {\r\n\r\n  form: FormGroup; \r\n\r\n  utente:Utente = new Utente;\r\n  utenteListen: Subscription;\r\n\r\n  listSesso: ValueList[]=[];\r\n  showLoading: boolean;\r\n\r\n  docGruppo: Gruppo = new Gruppo();\r\n  today:string; //questo serve per impostare la data di nascita max ad oggi\r\n  showCapNascita = false; //Nasconde il cap di nascita\r\n\r\n  constructor(\r\n      private startService : StartService,\r\n      private navCtr: NavController,\r\n      private toastCtr: ToastController,\r\n      private loadingController: LoadingController,\r\n      private modalController: ModalController\r\n    ) {\r\n\r\n      //Chiedo al servizio i dati dell'utente\r\n      this.utenteListen = this.startService.utente.subscribe(data=>{\r\n          \r\n          //Recupero l'utente\r\n          this.utente = data;\r\n          if (this.utente.MOBILENUMBER == null)  {\r\n            this.utente.MOBILENUMBER = '';\r\n          }\r\n          this.createForm();       \r\n\r\n      });\r\n\r\n      //Preparo un Array con le decodifiche del Sesso\r\n      this.listSesso=ValueList.getArray(Sesso);\r\n\r\n\r\n   }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.today=MyDateTime.formatDateISO(new Date);\r\n\r\n    this.docGruppo = this.startService.actualStartConfig.gruppo;\r\n    \r\n    //this.createForm();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.utenteListen) {\r\n      this.utenteListen.unsubscribe();\r\n    }\r\n  }\r\n\r\n  createForm()\r\n  {\r\n    let patternCodice = '^[A-Za-z]{6}[0-9]{2}[A-Za-z]{1}[0-9]{2}[A-Za-z]{1}[0-9]{3}[A-Za-z]{1}';\r\n    this.form=new FormGroup({\r\n      nome:new FormControl(this.utente.NOME, {\r\n        updateOn:'change',\r\n        validators: [Validators.required]\r\n      }),\r\n      cognome:new FormControl(this.utente.COGNOME, {\r\n        updateOn:'change',\r\n        validators: [Validators.required]\r\n      }),\r\n      sesso:new FormControl(this.utente.SESSO, {\r\n        updateOn:'change',\r\n        validators: []\r\n      }),\r\n      nascita:new FormControl((this.utente.NATOIL ? this.utente.NATOIL.toISOString(): this.utente.NATOIL), {\r\n        updateOn:'change',\r\n        validators: []\r\n      }),\r\n      provNascita:new FormControl(this.utente.NATOPROV, {\r\n        updateOn:'change',\r\n        validators: []\r\n      }),\r\n      comNascita:new FormControl(this.utente.NATOA, {\r\n        updateOn:'change',\r\n        validators: []\r\n      }),\r\n      statoNascita:new FormControl(this.utente.NATOISOSTATO, {\r\n        updateOn:'change',\r\n        validators: []\r\n      }),\r\n      capNascita:new FormControl(this.utente.NATOCAP, {\r\n        updateOn:'change',\r\n        validators: []\r\n      }),\r\n      provResidenza:new FormControl(this.utente.PROVINCIA, {\r\n        updateOn:'change',\r\n        validators: []\r\n      }),\r\n      comResidenza:new FormControl(this.utente.COMUNE, {\r\n        updateOn:'change',\r\n        validators: []\r\n      }),\r\n      indResidenza:new FormControl(this.utente.INDIRIZZO, {\r\n        updateOn:'change',\r\n        validators: []\r\n      }),\r\n      capResidenza:new FormControl(this.utente.CAP, {\r\n        updateOn:'change',\r\n        validators: []\r\n      }),\r\n      statoResidenza:new FormControl(this.utente.ISOSTATO, {\r\n        updateOn:'change',\r\n        validators: []\r\n      }),\r\n      cf:new FormControl(this.utente.CODICEFISCALE, {\r\n        updateOn:'change',\r\n        validators: [Validators.pattern(patternCodice)]\r\n      })\r\n    })\r\n\r\n    if(!this.docGruppo.needMobileVerify){\r\n      //devo creare il campo mail\r\n      let mobile = new FormControl(this.utente.MOBILENUMBER, {\r\n        updateOn: 'change',\r\n        validators: [Validators.pattern('^[0-9]*$')]\r\n      })\r\n\r\n      this.form.addControl('mobile', mobile)\r\n    } \r\n\r\n    if(!this.docGruppo.needEmailVerify){\r\n      //devo creare il campo tel\r\n      let email = new FormControl(this.utente.EMAIL, {\r\n        updateOn: 'change',\r\n        validators: [Validators.email]\r\n      })\r\n      this.form.addControl('email', email)\r\n    }\r\n  }\r\n\r\n  onSubmit()\r\n  {\r\n    if (this.form.valid)\r\n    {\r\n\r\n      this.utente.NOME=this.form.value.nome;\r\n      this.utente.COGNOME=this.form.value.cognome;\r\n      this.utente.SESSO=this.form.value.sesso;\r\n      this.utente.CODICEFISCALE=this.form.value.cf;\r\n\r\n      this.utente.INDIRIZZO=this.form.value.indResidenza;\r\n      this.utente.COMUNE=this.form.value.comResidenza;\r\n      this.utente.CAP=this.form.value.capResidenza;\r\n      this.utente.PROVINCIA=this.form.value.provResidenza;\r\n      this.utente.ISOSTATO=this.form.value.statoResidenza;\r\n\r\n      \r\n      if (this.form.value.nascita) {\r\n        this.utente.NATOIL = new Date(this.form.value.nascita);\r\n      }\r\n\r\n      \r\n\r\n      this.utente.NATOA=this.form.value.comNascita;\r\n      this.utente.NATOCAP=this.form.value.capNascita;\r\n      this.utente.NATOPROV=this.form.value.provNascita;\r\n      this.utente.NATOISOSTATO=this.form.value.statoNascita;\r\n      \r\n      //EMAIL E NUMERO DI TELEFONO LI MODIFICO SOLO SE NON DEVONO ESSERE VERIFICATI, ALTRIMENTI VERRA' CHIAMATA LA VIDEATA APPOSITA\r\n      if(!this.docGruppo.needEmailVerify){\r\n        this.utente.EMAIL = this.form.value.email;\r\n      }\r\n      if(!this.docGruppo.needMobileVerify){\r\n        this.utente.MOBILENUMBER = this.form.value.mobile;\r\n      }\r\n      console.log('mando');\r\n      console.log(this.utente);\r\n\r\n      //USO IL LOADING CONTROLLER \r\n      this.loadingController\r\n            .create({\r\n              message: 'Aggiornamento dati...',\r\n              spinner: 'circular'\r\n            })\r\n            .then (elLoading => {\r\n              // Mostro il loading\r\n              elLoading.present();\r\n\r\n              //richiesta di aggiornamento al server\r\n              this.startService\r\n                  .updateUtente(this.utente)\r\n                  .then(result => {\r\n                      // Operazione effettuata\r\n                      elLoading.dismiss();\r\n                      //Aggiornamento corretto\r\n                      this.showMessage('Info Aggiornate');\r\n                      this.closePage();\r\n\r\n\r\n                  }, error => {\r\n                    elLoading.dismiss();\r\n                    this.showMessage('Errore  di connessione');\r\n                    console.log(error);\r\n                  });\r\n            });\r\n    }\r\n  }\r\n\r\n  onCfChange(){\r\n\r\n    //se il cf cambia, quando l'utente esce dalla casella, provo a validarlo e riempire gli altri campi\r\n    let codFiscString: string = this.form.value.cf;\r\n\r\n    if (codFiscString!=null&&codFiscString!=undefined){\r\n      \r\n      if (codFiscString.length != 0){\r\n  \r\n        //chiamo il servizio per decodificare il codice fiscale\r\n        this.startService.checkCodiceFiscale(codFiscString, true).then(codFiscObj => {\r\n          \r\n          //inserisco tutto quello che ho decodificato nel utente\r\n          this.utente.NATOISOSTATO='Italia';\r\n          this.utente.NATOA=codFiscObj.comune;\r\n          this.utente.NATOPROV=codFiscObj.provincia;\r\n          this.utente.NATOIL=codFiscObj.dataNascita;\r\n          this.utente.SESSO=codFiscObj.sesso;\r\n          this.utente.NATOCAP=codFiscObj.cap;\r\n          \r\n\r\n          //aggiorno i campi del form\r\n\r\n          this.form.get('comNascita').setValue(this.utente.NATOA);\r\n          this.form.get('provNascita').setValue(this.utente.NATOPROV);\r\n          this.form.get('nascita').setValue(this.utente.NATOIL.toISOString());\r\n          this.form.get('sesso').setValue(this.utente.SESSO);\r\n          this.form.get('statoNascita').setValue(this.utente.NATOISOSTATO);\r\n          this.form.get('capNascita').setValue(this.utente.NATOCAP);\r\n\r\n          //setto il campo cf come valido\r\n          this.form.controls['cf'].setErrors(null);\r\n\r\n  \r\n        }).catch(err => {\r\n\r\n          //qui in teoria il cf non ha passato neppure il check base, segno il campo come non valido\r\n          this.form.controls['cf'].setErrors({'incorrect':true});\r\n          console.log(err);\r\n        })\r\n      }\r\n    }\r\n  }\r\n  \r\n\r\n  /**\r\n   * Chiudo e torno alla pagina Account\r\n   */\r\n  closePage() {\r\n    this.navCtr.navigateBack(['/','account']);\r\n  }\r\n\r\n  /**\r\n   * Visualizza un messaggio come Toast\r\n   * @param message Messaggio da mostrare\r\n   */\r\n  showMessage(message: string) {\r\n\r\n    //Creo un messaggio\r\n    this.toastCtr.create({\r\n      message: message,\r\n      duration: 3000\r\n    })\r\n    .then(tstMsg => {\r\n      tstMsg.present();\r\n    });\r\n\r\n  }\r\n\r\n  validateTel(){\r\n    this.modalController.create({\r\n      component: VerifyPage,\r\n      componentProps: {\r\n        params : {\r\n          tipoVerifica : TipoVerificaAccount.verificasms,\r\n          updateDocUtente : false\r\n        }\r\n      }\r\n    })\r\n    .then(elModal => {\r\n      elModal.present();\r\n    })\r\n  }\r\n\r\n  validateEmail(){\r\n\r\n    this.modalController.create({\r\n      component: VerifyPage,\r\n      componentProps: {\r\n        params : {\r\n          tipoVerifica : TipoVerificaAccount.verificaemail,\r\n          updateDocUtente : false\r\n        }\r\n      }\r\n    })\r\n    .then(elModal => {\r\n      elModal.present();\r\n    })\r\n  }\r\n\r\n}\r\n\r\n\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button defaultHref=\"/account\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-buttons slot=\"primary\">\r\n      <ion-button fill=\"clear\" \r\n          (click)=\"onSubmit()\" \r\n          [disabled]=\"!form.valid\">\r\n        <ion-icon name=\"checkmark\"></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n    <ion-title>Qualcosa su di te</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n\r\n<ion-content>\r\n  <form [formGroup]=\"form\">\r\n    <ion-list>\r\n      <ion-item-group>\r\n        <ion-item-divider color=\"light\">\r\n          <ion-icon \r\n            name=\"person-outline\" \r\n            slot=\"start\"\r\n            color=\"primary\"></ion-icon>\r\n          <ion-label>Come ti chiami ?</ion-label>\r\n        </ion-item-divider>\r\n        <ion-item>\r\n          <ion-label position=\"floating\">Nome</ion-label>\r\n          <ion-input formControlName=\"nome\"></ion-input>\r\n        </ion-item>\r\n        <ion-item>\r\n          <ion-label position=\"floating\">Cognome</ion-label>\r\n          <ion-input formControlName=\"cognome\"></ion-input>\r\n        </ion-item>\r\n        <ion-item>\r\n          <ion-label position=\"floating\">Sesso</ion-label>\r\n          <ion-select formControlName=\"sesso\" interface=\"popover\">\r\n            <ion-select-option \r\n              *ngFor=\"let sesso of listSesso\"\r\n              [value]=\"sesso.value\">\r\n              {{ sesso.description }}\r\n            </ion-select-option>\r\n          </ion-select>\r\n        </ion-item>\r\n        <ion-item>\r\n          <ion-label position=\"floating\">Codice fiscale</ion-label>\r\n          <ion-input (ionBlur)=\"onCfChange()\" formControlName=\"cf\"></ion-input>\r\n        </ion-item >\r\n      </ion-item-group>\r\n\r\n      <ion-item-group>\r\n        <ion-item-divider color=\"light\">\r\n          <ion-icon \r\n            name=\"home-outline\" \r\n            slot=\"start\"\r\n            color=\"primary\"></ion-icon>\r\n          <ion-label>Dove vivi ?</ion-label>\r\n        </ion-item-divider>\r\n        <ion-item>\r\n          <ion-label position=\"floating\">Indirizzo</ion-label>\r\n          <ion-input formControlName=\"indResidenza\"></ion-input>\r\n        </ion-item>\r\n\r\n        <ion-item>\r\n          <ion-label position=\"floating\">Comune</ion-label>\r\n          <ion-input formControlName=\"comResidenza\"></ion-input>\r\n        </ion-item>\r\n\r\n        <ion-item>\r\n          <ion-label position=\"floating\">Cap</ion-label>\r\n          <ion-input type=\"tel\" inputmode=\"tel\" maxlength=\"5\" formControlName=\"capResidenza\"></ion-input>\r\n        </ion-item>\r\n\r\n        <ion-item>\r\n          <ion-label position=\"floating\">Provincia</ion-label>\r\n          <ion-input formControlName=\"provResidenza\"></ion-input>          \r\n        </ion-item>\r\n\r\n        <ion-item>\r\n          <ion-label position=\"floating\">Stato</ion-label>\r\n          <ion-input formControlName=\"statoResidenza\"></ion-input>\r\n        </ion-item>\r\n\r\n        <!-- VERSIONE A COLONNE NON FUNZIONANTE -->\r\n        <!-- <ion-item>\r\n          <ion-row>\r\n            <ion-col size=\"4\" class=\"ion-no-padding\" >\r\n              <ion-label position=\"floating\">Cap</ion-label>\r\n              <ion-input type=\"tel\" inputmode=\"tel\" maxlength=\"5\" formControlName=\"capResidenza\"></ion-input>\r\n            </ion-col>\r\n            <ion-col size=\"4\" class=\"ion-no-padding\"  >\r\n              <ion-label position=\"floating\">Provincia</ion-label>\r\n              <ion-input formControlName=\"provResidenza\"></ion-input>\r\n            </ion-col>\r\n            <ion-col size=\"4\" class=\"ion-no-padding\">\r\n              <ion-label position=\"floating\">Stato</ion-label>\r\n              <ion-input formControlName=\"statoResidenza\"></ion-input>\r\n            </ion-col>\r\n          </ion-row>\r\n        </ion-item> -->\r\n\r\n\r\n        \r\n      </ion-item-group>\r\n      <ion-item-group>\r\n        <ion-item-divider color=\"light\">\r\n          <ion-icon \r\n            name=\"logo-reddit\" \r\n            slot=\"start\"\r\n            color=\"primary\"></ion-icon>\r\n          <ion-label>Quando sei nato ?</ion-label>\r\n        </ion-item-divider>\r\n\r\n        <ion-item>\r\n          <ion-label position=\"floating\">Data</ion-label>\r\n          <ion-datetime formControlName=\"nascita\" \r\n                        displayFormat=\"DD-MM-YYYY\"\r\n                        [max]=\"today\"></ion-datetime>\r\n        </ion-item>\r\n\r\n        <ion-item>\r\n          <ion-label position=\"floating\">Comune</ion-label>\r\n          <ion-input formControlName=\"comNascita\"></ion-input>\r\n        </ion-item>\r\n\r\n        <!-- CAP NON VISUALIZZATA -->\r\n        <ion-item *ngIf=\"showCapNascita\">\r\n          <ion-label position=\"floating\">Cap</ion-label>\r\n           <ion-input formControlName=\"capNascita\" type=\"tel\" inputmode=\"tel\" maxlength=\"5\"></ion-input>  \r\n        </ion-item>\r\n\r\n        <ion-item>\r\n          <ion-col size=\"4\" class=\"ion-no-padding\">\r\n            <ion-label position=\"floating\">Provincia</ion-label>\r\n            <ion-input formControlName=\"provNascita\"></ion-input>\r\n          </ion-col>\r\n        </ion-item>\r\n\r\n        <ion-item>\r\n          <ion-label position=\"floating\">Stato</ion-label>\r\n          <ion-input formControlName=\"statoNascita\"></ion-input>\r\n        </ion-item> \r\n\r\n\r\n\r\n        <!-- VERSIONE SU UNA RIGA CHE NON FUNZIONA -->\r\n        <!-- <ion-item>\r\n          <ion-list>\r\n          <ion-row>\r\n            <ion-col size=\"4\" class=\"ion-no-padding\">\r\n              <ion-label position=\"floating\">Cap</ion-label>\r\n              <ion-input formControlName=\"capNascita\" type=\"tel\" inputmode=\"tel\" maxlength=\"5\"></ion-input>              \r\n            </ion-col>\r\n\r\n            <ion-col size=\"4\" class=\"ion-no-padding\">\r\n              <ion-label position=\"floating\">Provincia</ion-label>\r\n              <ion-input formControlName=\"provNascita\"></ion-input>\r\n            </ion-col>\r\n\r\n            <ion-col size=\"4\" class=\"ion-no-padding\">\r\n              <ion-label position=\"floating\">Stato</ion-label>\r\n              <ion-input formControlName=\"statoNascita\"></ion-input>\r\n            </ion-col>\r\n          </ion-row>\r\n        </ion-list>\r\n        </ion-item> -->\r\n\r\n\r\n      </ion-item-group>\r\n\r\n\r\n      <!-- CELLULARE ED EMAIL -->\r\n      <ion-item-group>\r\n        <ion-item-divider color=\"light\">\r\n          <ion-icon \r\n            name=\"call-outline\" \r\n            slot=\"start\"\r\n            color=\"primary\"></ion-icon>\r\n          <ion-label>Cellulare e Email</ion-label>\r\n        </ion-item-divider>\r\n\r\n        <!-- VERIFICA CELLULARE NECESSARIA -->\r\n        <ion-item *ngIf=\"docGruppo.needMobileVerify\" button (click)=\"validateTel()\">\r\n          <ion-label>{{utente.MOBILENUMBER ? utente.MOBILENUMBER : 'Non definito'}}</ion-label>\r\n          <ion-badge color=\"success\">{{utente.getLabelVerificaMobile()}}</ion-badge>\r\n        </ion-item>\r\n\r\n        <!-- VERIFICA MAIL NECESSARIA -->\r\n        <ion-item *ngIf=\"docGruppo.needEmailVerify\" button (click)=\"validateEmail()\">\r\n          <ion-label>{{utente.EMAIL ? utente.EMAIL:'Non definita'}}</ion-label>\r\n          <ion-badge color=\"success\">{{utente.getLabelVerificaMail()}}</ion-badge>\r\n        </ion-item>\r\n\r\n        <!-- VERIFICA CELLULARE NON NECESSARIA -->\r\n        <ion-item *ngIf=\"!docGruppo.needMobileVerify\">\r\n          <ion-label position=\"floating\">Cellulare</ion-label>\r\n          <ion-input formControlName=\"mobile\"></ion-input>\r\n        </ion-item>\r\n\r\n        <!-- VERIFICA MAIL NON NECESSARIA -->\r\n        <ion-item *ngIf=\"!docGruppo.needEmailVerify\">\r\n          <ion-label position=\"floating\">E-Mail</ion-label>\r\n          <ion-input formControlName=\"email\"></ion-input>\r\n        </ion-item>\r\n\r\n\r\n      </ion-item-group>\r\n\r\n\r\n\r\n    </ion-list>\r\n  </form>\r\n</ion-content>\r\n<ion-footer>\r\n  <ion-button \r\n      color=\"tertiary\" \r\n      expand=\"block\" \r\n      (click)=\"onSubmit()\" \r\n      [disabled]=\"!form.valid\">\r\n    Conferma\r\n  </ion-button>\r\n</ion-footer>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { VerifyPage } from 'src/app/pages/auth/verify/verify.page'\r\nimport { VerifyPageModule } from 'src/app/pages/auth/verify/verify.module'\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { EditAccountPageRoutingModule } from './edit-account-routing.module';\r\nimport { EditAccountPage } from './edit-account.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    EditAccountPageRoutingModule,\r\n    \r\n    ReactiveFormsModule,\r\n    VerifyPageModule\r\n  ],\r\n  declarations: [EditAccountPage],\r\n  entryComponents: [VerifyPage]\r\n})\r\nexport class EditAccountPageModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { EditAccountPage } from './edit-account.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EditAccountPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class EditAccountPageRoutingModule {}\r\n"]}