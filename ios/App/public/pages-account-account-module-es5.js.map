{"version":3,"sources":["webpack:///src/app/pages/account/account-routing.module.ts","webpack:///src/app/pages/account/account.module.ts","webpack:///src/app/pages/account/edit-login/edit-login-routing.module.ts","webpack:///src/app/pages/account/edit-login/edit-login.page.ts","webpack:///src/app/pages/account/edit-login/edit-login.page.html","webpack:///src/app/pages/account/account.page.ts","webpack:///src/app/pages/account/account.page.html","webpack:///src/app/pages/account/edit-login/edit-login.module.ts"],"names":["routes","path","component","loadChildren","then","m","DocumentsPageModule","SportlevelsPageModule","SettingsPageModule","EditAccountPageModule","EditLoginPageModule","AccountPageModule","EditLoginPageRoutingModule","forChild","EditLoginPage","modalController","startService","loadingController","toastCtrl","showActual","showNew","showNewRetype","createFormGroup","dismiss","action","form","oldPsw","updateOn","validators","required","newPsw1","newPsw2","pswValidator","c","get","value","invalid","message","idElement","elementDOM","type","newPsw","valid","create","elLoading","present","requestChangePassword","subscribe","elResult","myMessage","MESSAGE","duration","elToast","RESULT","pwd","onCancel","onSubmit","showHideInput","AccountPage","startSrv","alertCtrl","navCtrl","mdlController","imgSrcProfilePic","pictureExist","codeVersion","docUtenteListen","utente","element","docUtente","docConfigListen","startConfig","elConfig","docConfig","onListenUserPicture","requestPictureUtente","version","unsubscribe","listenUserPicture","userPicture","dataUrl","length","loadPictureUtente","takePictureUtente","header","subHeader","buttons","text","handler","userLogoff","navigateBack","role","elAlert","componentProps","getUrlLogo","formModal","onWillDismiss","objReceived","data","saveStorageUtente","WEBLOGIN","openChangePassword","requestLogout"],"mappings":"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","file":"pages-account-account-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AccountPage } from './account.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AccountPage\r\n  },\r\n  {\r\n    path: 'documents',\r\n    loadChildren: () => import('./documents/documents.module').then( m => m.DocumentsPageModule)\r\n  },\r\n  {\r\n    path: 'sportlevels',\r\n    loadChildren: () => import('./sportlevels/sportlevels.module').then( m => m.SportlevelsPageModule)\r\n  },\r\n  {\r\n    path: 'settings',\r\n    loadChildren: () => import('./settings/settings.module').then( m => m.SettingsPageModule)\r\n  },\r\n  {\r\n    path: 'edit-account',\r\n    loadChildren: () => import('./edit-account/edit-account.module').then( m => m.EditAccountPageModule)\r\n  },\r\n  {\r\n    path: 'edit-login',\r\n    loadChildren: () => import('./edit-login/edit-login.module').then( m => m.EditLoginPageModule)\r\n  },\r  {\n    path: 'invoices',\n    loadChildren: () => import('./invoices/invoices.module').then( m => m.InvoicesPageModule)\n  }\n\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AccountPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AccountPageRoutingModule } from './account-routing.module';\r\n\r\nimport { AccountPage } from './account.page';\r\nimport { EditLoginPage } from './edit-login/edit-login.page';\r\nimport {EditLoginPageModule} from './edit-login/edit-login.module'\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    AccountPageRoutingModule,\r\n\r\n    ReactiveFormsModule,\r\n    EditLoginPageModule\r\n   \r\n  ],\r\n  declarations: [AccountPage],\r\n  entryComponents: [EditLoginPage]\r\n  \r\n})\r\nexport class AccountPageModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { EditLoginPage } from './edit-login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EditLoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class EditLoginPageRoutingModule {}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\r\nimport { Utente } from 'src/app/models/utente.model';\r\nimport { ModalController, IonInput, LoadingController, ToastController } from '@ionic/angular';\r\nimport { StartService } from 'src/app/services/start.service';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-edit-login',\r\n  templateUrl: './edit-login.page.html',\r\n  styleUrls: ['./edit-login.page.scss'],\r\n})\r\nexport class EditLoginPage implements OnInit {\r\n\r\n  \r\n  @Input() myUser: Utente;\r\n  @Input() myUrlLogo: string; //Path Logo da utilizzare\r\n  \r\n  form: FormGroup;\r\n  showActual = false;\r\n  showNew = false;\r\n  showNewRetype = false;\r\n\r\n\r\n\r\n\r\n  constructor(private modalController: ModalController,\r\n              private startService: StartService,\r\n              private loadingController: LoadingController,\r\n              private toastCtrl: ToastController) {\r\n    \r\n  }\r\n  \r\n  ngOnInit() {\r\n    this.createFormGroup();\r\n  }\r\n\r\n  /**\r\n   * Chiusura Videata senza Conferma\r\n   */\r\n  onCancel() {\r\n\r\n    this.modalController\r\n        .dismiss({action:'none'});\r\n  }\r\n\r\n\r\n  createFormGroup()\r\n  {\r\n    this.form = new FormGroup({\r\n      oldPsw: new FormControl(null,{\r\n        updateOn: 'change',\r\n        validators:[Validators.required]\r\n      }),\r\n      newPsw1: new FormControl(null,{\r\n        updateOn: 'change',\r\n        validators:[Validators.required]\r\n      }),\r\n      newPsw2: new FormControl(null,{\r\n        updateOn: 'change',\r\n        validators:[Validators.required]\r\n      })\r\n    },\r\n    this.pswValidator);\r\n  }\r\n\r\n  pswValidator(c:AbstractControl):{invalid:boolean}\r\n  {\r\n\r\n      if ((c.get('newPsw1').value==c.get('newPsw2').value))\r\n      {\r\n        return\r\n      }\r\n      else\r\n      {\r\n        return {invalid: true};\r\n      }\r\n  }\r\n\r\n  invalidMessage() {\r\n    let message = '';\r\n    if (this.form.value.newPsw1 && this.form.value.newPsw2 ) {\r\n      if (this.form.value.newPsw1 !== this.form.value.newPsw2) {\r\n        message = 'Nuova password non coincide'\r\n      }\r\n      \r\n    }\r\n\r\n    return message;\r\n  }\r\n\r\n\r\n  showHideInput(idElement:string, elementDOM: IonInput) {\r\n    switch (idElement) {\r\n      case 'oldpsw':\r\n          this.showActual = !this.showActual;\r\n          elementDOM.type = (this.showActual ? 'text':'password');\r\n        break;\r\n      case 'newpsw1':\r\n          this.showNew = !this.showNew;\r\n          elementDOM.type = (this.showNew ? 'text':'password');\r\n        break;\r\n\r\n      case 'newpsw2':\r\n          this.showNewRetype = !this.showNewRetype;\r\n          elementDOM.type = (this.showNewRetype ? 'text':'password');\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    \r\n  }\r\n\r\n\r\n  onSubmit()\r\n  {\r\n    let newPsw = '';\r\n    let oldPsw = '';\r\n\r\n    if (this.form.valid)\r\n     {\r\n       \r\n        newPsw = this.form.value.newPsw1;\r\n        oldPsw = this.form.value.oldPsw; \r\n\r\n        this.loadingController.create ({\r\n          message: 'Aggiornamento in corso'\r\n        })\r\n        .then(elLoading => {\r\n          //Visualizzo il loading\r\n          elLoading.present();\r\n\r\n          //Ora faccio la richiesta al server\r\n          this.startService\r\n            .requestChangePassword(oldPsw, newPsw)\r\n            .subscribe(elResult => {\r\n\r\n              let myMessage = 'Errore aggiornamento';\r\n              if (elResult.MESSAGE) {\r\n                myMessage = elResult.MESSAGE;\r\n              }\r\n\r\n              //Termino il loading\r\n              elLoading.dismiss();\r\n\r\n              //Mi preparo un Toast Controller\r\n              this.toastCtrl.create({\r\n                message: myMessage,\r\n                duration: 2000\r\n              })\r\n              .then(elToast => {\r\n                elToast.present();\r\n              });\r\n\r\n              //Se è andato bene chiudo la Modal e torno di aggiornare il cookie con la nuova password\r\n              if (elResult.RESULT) {\r\n\r\n                this.modalController.dismiss(\r\n                  {action:'update', pwd: newPsw}\r\n                );\r\n              };\r\n            });\r\n\r\n        });\r\n     }\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n\r\n    <ion-buttons slot=\"start\">\r\n      <ion-button (click)=\"onCancel()\">\r\n        <ion-icon slot=\"icon-only\" name=\"arrow-back\"></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n\r\n    <ion-title>Cambio Password</ion-title>\r\n\r\n    <ion-buttons slot=\"end\">\r\n      <ion-button \r\n          fill=\"clear\" \r\n          (click)=\"onSubmit()\" \r\n          [disabled]=\"!form.valid\">\r\n\r\n        <ion-icon name=\"checkmark\"></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <div class=\"titleicon\">\r\n    <img [src]=\"myUrlLogo\"/>\r\n  </div>\r\n  \r\n  <form [formGroup]=\"form\" class=\"ion-margin-horizontal\">\r\n    <ion-list>\r\n      <!-- VECCHIA PASSWORD -->\r\n      <ion-list-header>\r\n        <ion-label>Password Attuale</ion-label>\r\n      </ion-list-header>\r\n      <ion-item> \r\n        <ion-icon \r\n          name=\"lock-open-outline\" \r\n          slot=\"start\"></ion-icon>\r\n        <ion-input \r\n            type=\"password\" \r\n            inputmode=\"password\" \r\n            formControlName=\"oldPsw\" \r\n            placeholder=\"password attuale\" \r\n            id=\"oldpsw\"\r\n            #oldpsw>\r\n        </ion-input>\r\n\r\n        <ion-button slot=\"end\" fill=\"clear\" (click)=\"showHideInput('oldpsw',oldpsw)\">\r\n          <ion-icon \r\n              [name]=\"showActual ? 'eye-off-outline':'eye-outline'\" \r\n              slot=\"icon-only\">\r\n          </ion-icon>\r\n        </ion-button>\r\n\r\n      </ion-item>\r\n\r\n      <ion-list-header>\r\n        <ion-label>Nuova Password</ion-label>\r\n      </ion-list-header>\r\n      <!-- NUOVA PASSWORD -->\r\n      <ion-item >\r\n        <ion-icon \r\n        name=\"lock-closed-outline\" \r\n        slot=\"start\"></ion-icon>\r\n        <ion-input \r\n            type=\"password\" \r\n            inputmode=\"password\" \r\n            formControlName=\"newPsw1\" \r\n            placeholder=\"nuova password\" \r\n            id=\"newpsw1\"\r\n            #newpsw1 ></ion-input>\r\n\r\n        <ion-button slot=\"end\" fill=\"clear\" (click)=\"showHideInput('newpsw1',newpsw1)\">\r\n          <ion-icon \r\n              [name]=\"showNew ? 'eye-off-outline':'eye-outline'\" \r\n              slot=\"icon-only\">\r\n          </ion-icon>\r\n        </ion-button>\r\n\r\n      </ion-item>\r\n    \r\n      <ion-item>\r\n        <ion-icon \r\n        name=\"lock-closed-outline\" \r\n        slot=\"start\"></ion-icon>\r\n\r\n        <ion-input \r\n            type=\"password\" \r\n            inputmode=\"password\" \r\n            formControlName=\"newPsw2\" \r\n            placeholder=\"conferma password\" \r\n            id=\"newpsw2\"\r\n            #newpsw2></ion-input>\r\n\r\n        <ion-button slot=\"end\" fill=\"clear\" (click)=\"showHideInput('newpsw2',newpsw2)\">\r\n          <ion-icon \r\n              [name]=\"showNewRetype ? 'eye-off-outline':'eye-outline'\" \r\n              slot=\"icon-only\">\r\n          </ion-icon>\r\n        </ion-button>\r\n\r\n\r\n        </ion-item>\r\n      \r\n      <!-- ERROR MESSAGE -->\r\n      <ion-item \r\n          lines=\"none\" \r\n          *ngIf=\"!form.valid\">\r\n          <ion-label color=\"danger\">{{ invalidMessage() }}</ion-label>\r\n      </ion-item>\r\n    </ion-list>\r\n  </form>\r\n</ion-content>\r\n<ion-footer>\r\n  <ion-button color=\"tertiary\" expand=\"block\" (click)=\"onSubmit()\" [disabled]=\"!form.valid\">Conferma</ion-button>\r\n</ion-footer>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { StartService } from 'src/app/services/start.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { AlertController, NavController, ModalController } from '@ionic/angular';\r\nimport { Utente } from 'src/app/models/utente.model';\r\nimport { EditLoginPage } from './edit-login/edit-login.page';\r\nimport { StartConfiguration } from 'src/app/models/start-configuration.model';\r\nimport { PhotoService } from 'src/app/services/photo.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-account',\r\n  templateUrl: './account.page.html',\r\n  styleUrls: ['./account.page.scss'],\r\n})\r\nexport class AccountPage implements OnInit, OnDestroy {\r\n\r\n  docUtente: Utente;\r\n  docUtenteListen: Subscription;\r\n\r\n  docConfig: StartConfiguration;\r\n  docConfigListen: Subscription;\r\n  listenUserPicture: Subscription;\r\n\r\n  \r\n\r\n  //Source da applicare come foto profilo\r\n  imgSrcProfilePic: string = '';\r\n  pictureExist: boolean = false;\r\n\r\n  //Versione applicativo\r\n  codeVersion = '';\r\n\r\n  constructor(private startSrv: StartService,\r\n              private alertCtrl: AlertController,\r\n              private navCtrl: NavController,\r\n              private mdlController: ModalController\r\n              \r\n              ) { \r\n\r\n    this.docUtenteListen = this.startSrv.utente.subscribe(element => {\r\n      this.docUtente = element;\r\n    });\r\n\r\n    //Ricavo la configurazione\r\n    this.docConfigListen = this.startSrv.startConfig.subscribe(elConfig => {\r\n      this.docConfig = elConfig;\r\n    });\r\n\r\n    //Ascolto le modifiche della foto profilo\r\n    this.onListenUserPicture();\r\n\r\n    //Richiedo la foto dell'utente\r\n    this.requestPictureUtente();\r\n\r\n    this.codeVersion = environment.version;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.docUtenteListen) {\r\n      this.docUtenteListen.unsubscribe();\r\n    }\r\n\r\n    if (this.docConfigListen) {\r\n      this.docConfigListen.unsubscribe();\r\n    }\r\n\r\n    if (this.listenUserPicture) {\r\n      this.listenUserPicture.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Ascolta i cambiamenti della foto profilo\r\n   */\r\n  onListenUserPicture() {\r\n    this.listenUserPicture = this.startSrv.userPicture.subscribe(dataUrl => {\r\n      if (dataUrl && dataUrl.length != 0) {\r\n\r\n\r\n        this.imgSrcProfilePic = dataUrl;\r\n        this.pictureExist = true;\r\n      }\r\n      else {\r\n\r\n        this.imgSrcProfilePic = '';\r\n        this.pictureExist = false;        \r\n      }\r\n    })\r\n  }\r\n\r\n  \r\n/**\r\n * Richiede la foto dell'utente \r\n *  \r\n */\r\nrequestPictureUtente() {\r\n\r\n    //Non mi interessa controllare cosa ricevo perchè ho la subscribe\r\n    this.startSrv.loadPictureUtente();\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  /**\r\n   * Effettuato il click sull'avatar\r\n   */\r\n  onClickAvatar() {\r\n    //Cattura e salva l'immagine\r\n    this.startSrv.takePictureUtente();\r\n  }\r\n\r\n\r\n  // Chiedo se vuole veramente uscire\r\n  requestLogout() {\r\n    this.alertCtrl\r\n      .create({\r\n        header: 'Vuoi disconnetterti ?',\r\n        subHeader: 'Potrai sempre rieseguire il login',\r\n        buttons: [{\r\n          text: 'Si',\r\n          handler: () => {\r\n            // Che faccio se mi disconnetto\r\n\r\n            //Segnalo che esco\r\n            this.startSrv.userLogoff();\r\n\r\n            //Chiudo la pagina e torno alla Home\r\n            this.navCtrl.navigateBack(['/']);\r\n          }\r\n        },\r\n        {\r\n          text: 'No',\r\n          role: 'cancel'\r\n        }]\r\n      })\r\n      .then(elAlert => {\r\n        elAlert.present();\r\n      })\r\n  }\r\n\r\n\r\n\r\n/**\r\n * Apertura Modale di Cambio Password\r\n */\r\nopenChangePassword() {\r\n  \r\n\r\n  this.mdlController\r\n    .create({\r\n      component: EditLoginPage,\r\n      componentProps: {\r\n        'myUser': this.docUtente,\r\n        'myUrlLogo': this.docConfig.getUrlLogo()\r\n      }\r\n    })\r\n    .then(formModal => {\r\n      formModal.present();\r\n\r\n      /* Alla chiusura aggiorno le credenziali se necessario */\r\n      formModal.onWillDismiss().then((objReceived:any) => {\r\n\r\n        if (objReceived) {\r\n          if (objReceived.data) {\r\n            if (objReceived.data.action == 'update') {\r\n    \r\n              if (objReceived.data.pwd) {\r\n                //Devo aggiornare il cookie con le credenziali\r\n                let newPsw = objReceived.data.pwd;\r\n                \r\n                // MEMORIZZO LE CREDENZIALI PER UN SUCCESSIVO RECUPERO\r\n                this.startSrv.saveStorageUtente(this.docUtente.WEBLOGIN,newPsw);\r\n              }\r\n    \r\n            }\r\n          }\r\n        }\r\n      });\r\n    })\r\n}\r\n\r\n}\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button  defaultHref=\"/\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>Profilo</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <div class=\"top\">\r\n\r\n    \r\n    <!-- PORZIONE AVATAR E NOMINATIVO -->\r\n    <ion-grid>\r\n      <ion-row class=\"picture\">\r\n        <ion-col>\r\n          <ion-button\r\n            size=\"large\"\r\n            color=\"danger\"\r\n            class=\"only-camera\"\r\n            (click)=\"onClickAvatar()\"\r\n            *ngIf=\"!pictureExist\">\r\n\r\n            <ion-icon name=\"camera\"></ion-icon>\r\n\r\n          </ion-button>\r\n\r\n            <ion-avatar \r\n                *ngIf=\"pictureExist\"\r\n                (click)=\"onClickAvatar()\">\r\n              <img [src]=\"imgSrcProfilePic\">\r\n            </ion-avatar>\r\n\r\n        </ion-col>\r\n      </ion-row>\r\n\r\n\r\n      <!-- NOMINATIVO -->\r\n      <ion-row class=\"name\">\r\n        <ion-col>\r\n\r\n          <ion-label \r\n            color=\"primary\"\r\n            class=\"ion-text-wrap ion-text-center\">\r\n            <h1>{{ docUtente?.NOMINATIVO }}</h1>\r\n            <p>{{ docUtente.EMAIL }}</p>\r\n          </ion-label>\r\n\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n\r\n  </div>\r\n\r\n\r\n  \r\n  <ion-list class=\"ion-margin-vertical\">\r\n\r\n    <ion-item button=\"true\" routerLink=\"edit-account\" routerDirection=\"forward\">\r\n      <ion-icon \r\n        slot=\"start\" \r\n        name=\"person-circle\"\r\n        color=\"primary\"></ion-icon>\r\n      <ion-label>\r\n        <h2>Qualcosa su di te</h2>\r\n        <p>Data e luogo di nascita, residenza, ecc..</p>\r\n      </ion-label>\r\n    </ion-item>\r\n\r\n    \r\n\r\n\r\n\r\n    <ion-item button=\"true\" routerLink=\"sportlevels\" routerDirection=\"forward\">\r\n      <ion-icon \r\n        slot=\"start\" \r\n        name=\"stats-chart\"\r\n        color=\"primary\"></ion-icon>\r\n      <ion-label>\r\n        <h2>Livelli Attività</h2>\r\n        <p>Visualizza i tuoi livelli</p>\r\n      </ion-label>\r\n    </ion-item>\r\n\r\n    <ion-item button=\"true\" routerLink=\"documents\" routerDirection=\"forward\">\r\n      <ion-icon \r\n        slot=\"start\" \r\n        name=\"copy\"\r\n        color=\"primary\"></ion-icon>\r\n      <ion-label>\r\n        <h2>Documenti</h2>\r\n        <p>Visualizza e scarica i tuoi documenti</p>\r\n      </ion-label>\r\n    </ion-item>\r\n\r\n    \r\n\r\n    <ion-item button=\"true\" routerLink=\"invoices\" routerDirection=\"forward\">\r\n      <ion-icon \r\n        slot=\"start\" \r\n        name=\"logo-euro\"\r\n        color=\"primary\"></ion-icon>\r\n      <ion-label>\r\n        <h2>Ricevute Acquisti</h2>\r\n        <p>Scarica le ricevute dei tuoi acquisti</p>\r\n      </ion-label>\r\n    </ion-item>\r\n\r\n    <!-- <ion-item button=\"true\" routerLink=\"settings\" routerDirection=\"forward\">\r\n      <ion-icon \r\n        slot=\"start\" \r\n        name=\"settings\"\r\n        color=\"primary\"></ion-icon>\r\n      <ion-label>\r\n        <h2>Opzioni</h2>\r\n        <p>Quello che ci sarà nelle opzioni, ecc..</p>\r\n      </ion-label>\r\n    </ion-item> -->\r\n\r\n    <ion-item button=\"true\" (click)=\"openChangePassword()\">  \r\n      <ion-icon \r\n        slot=\"start\" \r\n        name=\"key\"\r\n        color=\"primary\"></ion-icon>\r\n      <ion-label>\r\n        <h2>Security Access</h2>\r\n        <p>Cambia Password di accesso</p>\r\n      </ion-label>\r\n    </ion-item>\r\n\r\n    <ion-item button=\"true\" (click)=\"requestLogout()\">\r\n      <ion-icon \r\n        slot=\"start\" \r\n        name=\"log-out\"\r\n        color=\"primary\"></ion-icon>\r\n      <ion-label>\r\n        <h2>Esci</h2>\r\n        <p>Esegui il logout</p>\r\n      </ion-label>\r\n    </ion-item>\r\n\r\n  </ion-list>\r\n</ion-content>\r\n<ion-footer>\r\n  <ion-list class=\"ion-no-padding\">\r\n    <ion-item \r\n        lines=\"none\">\r\n      <ion-note slot=\"start\" color=\"medium\">Version: {{codeVersion}} by AlchimistiLab</ion-note>\r\n    </ion-item>\r\n  </ion-list>\r\n</ion-footer>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { EditLoginPageRoutingModule } from './edit-login-routing.module';\r\n\r\nimport { EditLoginPage } from './edit-login.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    EditLoginPageRoutingModule,\r\n    \r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [EditLoginPage],\r\n  exports:[\r\n    EditLoginPage\r\n  ]\r\n})\r\nexport class EditLoginPageModule {}\r\n"]}