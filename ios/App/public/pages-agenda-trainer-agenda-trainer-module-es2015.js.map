{"version":3,"sources":["./src/app/shared/pipes/pipes.module.ts","./src/app/shared/pipes/tipo-campo.pipe.ts","./src/app/pages/agenda-trainer/agenda-trainer.page.ts","./src/app/pages/agenda-trainer/agenda-trainer.page.html","./src/app/shared/pipes/tipo-corso.pipe.ts","./src/app/pages/agenda-trainer/agenda-trainer-routing.module.ts","./src/app/shared/pipes/struttura-campo.pipe.ts","./src/app/pages/agenda-trainer/valutazione-trainer/valutazione-trainer-routing.module.ts","./src/app/shared/pipes/label-giorno.pipe.ts","./src/app/shared/pipes/ambito-news.pipe.ts","./src/app/shared/pipes/classe-documento.pipe.ts","./src/app/shared/pipes/stato-prenotazione.pipe.ts","./src/app/pages/agenda-trainer/valutazione-trainer/valutazione-trainer.module.ts","./src/app/pages/agenda-trainer/valutazione-trainer/valutazione-trainer.page.ts","./src/app/pages/agenda-trainer/valutazione-trainer/valutazione-trainer.page.html","./src/app/shared/pipes/settore-attivita.pipe.ts","./src/app/pages/agenda-trainer/agenda-trainer.module.ts","./src/app/shared/pipes/stato-slot.pipe.ts","./src/app/shared/pipes/target-sesso.pipe.ts","./src/app/shared/pipes/giorni-previsti.pipe.ts","./src/app/shared/pipes/tipomasterdocumento.pipe.ts"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AACM;AACV;AACY;AACZ;AACI;AACJ;AACgB;AACd;AACQ;AACE;AACO;;AA6B9D,MAAM,WAAW;;sEAAX,WAAW;2FAAX,WAAW;+FAdX,EAAE;oIAcF,WAAW,mBA1BL,kEAAe;QACf,wEAAkB;QAClB,8DAAa;QACb,0EAAmB;QACnB,8DAAa;QACb,kEAAe;QACf,8DAAa;QACb,8EAAqB;QACrB,gEAAc;QACd,wEAAkB;QAClB,2EAAmB;QACnB,kFAAuB,aAE5B,kEAAe;QACf,wEAAkB;QAClB,8DAAa;QACb,0EAAmB;QACnB,8DAAa;QACb,kEAAe;QACf,8DAAa;QACb,8EAAqB;QACrB,gEAAc;QACd,wEAAkB;QAClB,2EAAmB;QACnB,kFAAuB;;;;;;;;;;;;;ACtCrC;AAAA;AAAA;AAAA;AAAsE;;AAK/D,MAAM,aAAa;IAExB,SAAS,CAAC,KAAa;QACrB,IAAI,KAAK,GAAG,EAAE,CAAC;QAEf,KAAK,GAAG,wEAAS,CAAC,MAAM,CAAC,wEAAS,EAAE,KAAK,CAAC,CAAC;QAE3C,OAAO,KAAK,CAAC;IACf,CAAC;;0EARU,aAAa;4GAAb,aAAa;;;;;;;;;;;;;ACL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqH;AAEhD;AAGA;AAGhB;AACqC;AAC5B;AAC0B;;;;;;;;;IC2ChF,+EAGgB;IACd,gFAAiC;IAC/B,qEAAI;IAAA,0IAA+E;IAAA,4DAAK;IAC1F,4DAAY;IACZ,0EAAoE;IACtE,4DAAW;;;;IAEX,+EAGa;IACX,0EAA+D;IAC/D,4EAAW;IAAA,0EAAe;IAAA,4DAAY;IAEtC,iFAM2B;IAJrB,wWAA6C;IAKjD,uFAAoD;IAAA,sEAAW;IAAA,4DAAoB;IACnF,uFAAuD;IAAA,sEAAW;IAAA,4DAAoB;IACtF,uFAAkD;IAAA,mEAAO;IAAA,4DAAoB;IAC/E,4DAAa;IACf,4DAAW;;;IARH,0DAAuC;IAAvC,qGAAuC;IAIxB,0DAAgC;IAAhC,gGAAgC;IAChC,0DAAmC;IAAnC,mGAAmC;IACnC,0DAA8B;IAA9B,8FAA8B;;;;IA6BnD,0FAI2C;IAAzC,qaAAwC;IAC1C,4DAAsB;;;;IAHpB,8HAA0D;;;IAVlE,0EAE6B;IAC3B,+EACiC;IAI7B,4JAKsB;IAG1B,4DAAW;IACb,4DAAM;;;IAR6B,0DAAuB;IAAvB,gGAAuB;;;IAW1D,0EAA0F;IACxF,4EAAW;IAAA,+EAAoB;IAAA,4DAAY;IAC7C,4DAAM;;;;IArFR,0EAAkE;IAGhE,2EAAU;IACR,iFAAiB;IACf,uFAGuD;IAAjD,8VAAgD;IAEpD,0EAAuH;IACvH,4EAAW;IACT,qEAAI;IAAA,uDAA2B;IAAA,4DAAK;IACtC,4DAAY;IACd,4DAAmB;IAEnB,+HAQW;IAEX,gIAkBW;IAEX,gFAAiC;IAC/B,2EAA0E;IAC1E,oFAKC;IAFC,mWAA6B;IAGjC,4DAAe;IACf,2EAA4E;IAC5E,4DAAW;IAGb,4DAAiB;IACnB,4DAAW;IAGX,uHAiBM;IAGN,uHAEM;IACR,4DAAM;;;IA5EyB,0DAAoF;IAApF,sJAAoF;IAErG,0DAA2B;IAA3B,+FAA2B;IAK5B,0DAAsC;IAAtC,uGAAsC;IAUxC,0DAAsC;IAAtC,uGAAsC;IAuBvC,0DAAsB;IAAtB,sFAAsB;IAcvB,0DAA8D;IAA9D,wIAA8D;IAmB5C,0DAA+D;IAA/D,yIAA+D;;;IAoBpF,+EAGgB;IACd,gFAAiC;IAC/B,qEAAI;IAAA,sRAC2H;IAAA,4DAAK;IACtI,4DAAY;IACZ,0EAAoE;IACtE,4DAAW;;;;IAoCX,+EAEqC;IAA/B,sYAA6B;IAGnC,0EAKW;IAEX,gFAAiC;IAC/B,oEAAG;IAAA,uDACD;;;IAAA,gEAAK;IACL,uDACF;;;IAAA,4DAAI;IACJ,sEAAI;IAAA,wDAAyE;IAAA,4DAAK;IAClF,sEAAI;IAAA,wDAA2D;;;IAAA,4DAAK;IAEtE,4DAAY;IAGZ,gFACuF;IACrF,wDACA;;IAAA,2EAAyC;IAC3C,4DAAW;IACX,4DAAW;;;;IAnBP,0DAAkC;IAAlC,uGAAkC;IAIjC,0DACD;IADC,qPACD;IACA,0DACF;IADE,sPACF;IACI,0DAAyE;IAAzE,yJAAyE;IACzE,0DAA2D;IAA3D,yPAA2D;IAM7D,0DAAkF;IAAlF,oKAAkF;IACpF,0DACA;IADA,2KACA;;;IA3BJ,2EAA4C;IAC1C,mJA4BW;IACb,4DAAW;;;IA5Be,0DAAc;IAAd,wFAAc;;;IAL1C,0EAA2E;IAGzE,sIA8BW;IAEb,4DAAM;;;IAhCO,0DAA+B;IAA/B,kGAA+B;;;IAoC5C,0EAAwE;IACtE,4EAAW;IAAA,+EAAoB;IAAA,4DAAY;IAC7C,4DAAM;;;;IAhGR,0EAAgE;IAE9D,2EAAU;IACR,iFAAiB;IACf,uFAG8C;IAAxC,qVAAuC;IACvC,0EAA8G;IAClH,4EAAW;IACT,qEAAI;IAAA,8EAAmB;IAAA,4DAAK;IAC9B,4DAAY;IACd,4DAAmB;IAEnB,+HASW;IAEX,+EAAiC;IAC/B,2EAA2E;IAC3E,kFAI6B;IAFzB,0VAAuC;IAIvC,wFAAqD;IACnD,sEACF;IAAA,4DAAoB;IAEpB,wFAAoD;IAClD,2EACF;IAAA,4DAAoB;IAEpB,wFAAoD;IAClD,oEACF;IAAA,4DAAoB;IAExB,4DAAa;IAEf,2EAA4E;IAC5E,4DAAW;IAGb,4DAAiB;IACnB,4DAAW;IAGX,uHAmCM;IAIN,uHAEM;IACR,4DAAM;;;IAzF6B,0DAA2E;IAA3E,6IAA2E;IAOjG,0DAA6B;IAA7B,8FAA6B;IAe9B,0DAA+B;IAA/B,6FAA+B;IAGZ,0DAAiC;IAAjC,iGAAiC;IAIjC,0DAAgC;IAAhC,gGAAgC;IAIhC,0DAAgC;IAAhC,gGAAgC;IAchC,0DAA4C;IAA5C,sHAA4C;IAuChD,0DAA6C;IAA7C,uHAA6C;;AD/M1E,IAAY,iBAGX;AAHD,WAAY,iBAAiB;IAC3B,wCAAmB;IACnB,oCAAe;AACjB,CAAC,EAHW,iBAAiB,KAAjB,iBAAiB,QAG5B;AAaM,MAAM,iBAAiB;IAyC5B,YACU,YAA0B,EAC1B,aAA4B,EAC5B,iBAAoC,EACpC,eAAgC,EAChC,eAAgC,EAChC,eAAgC;QALhC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,kBAAa,GAAb,aAAa,CAAe;QAC5B,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,oBAAe,GAAf,eAAe,CAAiB;QAChC,oBAAe,GAAf,eAAe,CAAiB;QAChC,oBAAe,GAAf,eAAe,CAAiB;QA9C1C,WAAM,GAAC,uEAAQ,CAAC,QAAQ,CAAC;QAEzB,WAAM,GAAW,IAAI,kEAAM,EAAE,CAAC;QAE9B,SAAS;QACT,yBAAoB,GAA0B,EAAE,CAAC;QACjD,iBAAY,GAAS,IAAI,IAAI,EAAE,CAAC;QAChC,oBAAe,GAAW,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAE1D,sCAAsC;QACtC,8BAAyB,GAAgB,0EAAW,CAAC,MAAM,CAAC;QAC5D,oBAAe,GAAuB,0EAAW,CAAC;QAElD,sEAAsE;QACtE,kCAA6B,GAAY,IAAI,CAAC;QAC9C,sEAAsE;QACtE,yBAAoB,GAAY,IAAI,CAAC;QAErC,cAAc;QACd,gBAAW,GAAY,EAAE,CAAC;QAG1B,eAAU,GAAY,IAAI,CAAC;QAE3B,sDAAsD;QACtD,cAAS,GAAG,CAAC,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAC;QAE1F,oBAAoB;QACpB,aAAQ,GAA8B,iBAAiB,CAAC;QACxD,iBAAY,GAAsB,iBAAiB,CAAC,OAAO,CAAC;QAE5D,uCAAuC;QACvC,oBAAe,GAA6B,gFAAiB,CAAC;QAC9D,sBAAiB,GAAqB,gFAAiB,CAAC,MAAM,CAAC;QAI/D,UAAK,GAAG,IAAI,IAAI,EAAE,CAAC;QAYjB,0CAA0C;QAC1C,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAE/B,CAAC;IAED,QAAQ;QAEN,mBAAmB;QACnB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC;QAE7C,oBAAoB;QACpB,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAC;YAE3D,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;aACG;YACF,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SAC1C;IACH,CAAC;IAGD,WAAW;QACT,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;SACnC;IACH,CAAC;IAGD;;;OAGG;IACK,2BAA2B;QACjC,IAAI,UAAgB,CAAC;QACrB,IAAI,QAAc,CAAC;QACnB,IAAI,KAAiB,CAAC;QAEtB,IAAI,IAAI,CAAC,yBAAyB,IAAI,0EAAW,CAAC,MAAM,EAAE;YACxD,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;YAC/B,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;SAC9B;aACI,IAAI,IAAI,CAAC,yBAAyB,IAAI,0EAAW,CAAC,SAAS,EAAE;YAChE,gCAAgC;YAChC,UAAU,GAAG,kFAAU,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,EAAC,MAAM,EAAC,OAAO,CAAC,CAAC;YAC1E,QAAQ,GAAG,kFAAU,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,EAAC,MAAM,EAAC,KAAK,CAAC,CAAC;SACvE;aACI,IAAI,IAAI,CAAC,yBAAyB,IAAI,0EAAW,CAAC,IAAI,EAAE;YAC3D,mBAAmB;YACnB,UAAU,GAAG,kFAAU,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,EAAC,OAAO,EAAC,OAAO,CAAC,CAAC;YAC3E,QAAQ,GAAG,kFAAU,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,EAAC,OAAO,EAAC,KAAK,CAAC,CAAC;SACxE;QAED,+BAA+B;QAC/B,KAAK,GAAG;YACN,SAAS,EAAE,UAAU;YACrB,OAAO,EAAE,QAAQ;SAClB;QAED,OAAO,KAAK,CAAC;IAEf,CAAC;IAED;;OAEG;IACK,cAAc,CAAC,KAAW;QAEhC,IAAI,SAAqB,CAAC;QAE1B,iBAAiB;QACjB,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;YAC5B,OAAO,EAAE,gBAAgB;YACzB,OAAO,EAAE,UAAU;YACnB,eAAe,EAAE,IAAI;SACtB,CAAC;aACD,IAAI,CAAC,SAAS,CAAC,EAAE;YAEhB,SAAS,CAAC,OAAO,EAAE,CAAC;YAEpB,8CAA8C;YAC9C,SAAS,GAAG,IAAI,CAAC,2BAA2B,EAAE,CAAC;YAE/C,qBAAqB;YACrB,IAAI,CAAC,6BAA6B,GAAG,IAAI,CAAC;YAE1C,mFAAmF;YACnF,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,OAAO,CAAC;iBAC5F,IAAI,CAAC,MAAM,CAAC,EAAE;gBAEb,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC;gBAEnC,SAAS,CAAC,OAAO,EAAE,CAAC;gBAEpB,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,EAAE;oBACzB,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;iBACzB;YAEH,CAAC,CAAC;iBACD,KAAK,CAAC,KAAK,CAAC,EAAE;gBAEb,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,EAAE;oBACzB,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;iBACzB;gBAED,SAAS,CAAC,OAAO,EAAE,CAAC;gBACpB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,CAAC;YAC5C,CAAC,CAAC,CAAC;QAEP,CAAC,CAAC;IACJ,CAAC;IAGD;;;OAGG;IACK,gBAAgB,CAAC,KAAW;QAE9B,iBAAiB;QACjB,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;YAC5B,OAAO,EAAE,gBAAgB;YACzB,OAAO,EAAE,UAAU;YACnB,eAAe,EAAE,IAAI;SACtB,CAAC;aACD,IAAI,CAAC,SAAS,CAAC,EAAE;YAEhB,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,EAAE;gBACzB,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;aACzB;YAED,mBAAmB;YACnB,IAAI,CAAC,iBAAiB,GAAG,SAAS,CAAC;YACnC,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;YAEjC,gDAAgD;YAChD,yDAAyD;YACzD,IAAI,CAAC,YAAY,CAAC,wBAAwB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAEnF,+DAA+D;QAEjE,CAAC,CAAC;IAER,CAAC;IAED;;;OAGG;IACF,cAAc,CAAC,SAA8B;QAC5C,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,kBAAkB,GAAG,SAAS,CAAC,EAAE,CAAC,CAAC;QACtE,qFAAqF;IAEvF,CAAC;IAED;;;;;OAKG;IACH,YAAY,CAAC,OAAc;QAEzB,IAAI,OAAO,EAAE;YAEX,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;gBAC5B,OAAO,EAAE,gBAAgB;gBACzB,OAAO,EAAE,UAAU;gBACnB,eAAe,EAAE,IAAI;aACtB,CAAC;iBACD,IAAI,CAAC,SAAS,CAAC,EAAE;gBAEhB,SAAS,CAAC,OAAO,EAAE,CAAC;gBAEpB,iCAAiC;gBACjC,IAAI,CAAC,YAAY,CAAC,6BAA6B,CAAC,OAAO,CAAC,EAAE,CAAC;qBAC1C,IAAI,CAAC,CAAC,SAA2B,EAAE,EAAE;oBAGpC,yCAAyC;oBACzC,IAAI,CAAC,YAAY,CAAC,sBAAsB,CAAC,OAAO,CAAC,OAAO,CAAC;yBACvC,IAAI,CAAC,CAAC,WAAqB,EAAE,EAAE;wBAE9B,mBAAmB;wBACnB,SAAS,CAAC,OAAO,EAAE,CAAC;wBAEpB,4CAA4C;wBAC5C,0BAA0B;wBAC1B,yBAAyB;wBACzB,qBAAqB;wBACrB,IAAI,CAAC,2BAA2B,CAAC,SAAS,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;oBAEpE,CAAC,CAAC;gBAGrB,CAAC,CAAC;qBACD,KAAK,CAAC,KAAK,CAAC,EAAE;oBAEb,SAAS,CAAC,OAAO,EAAE,CAAC;oBAEpB,qBAAqB;oBACrB,IAAI,CAAC,WAAW,CAAC,KAAK,EAAC,OAAO,CAAC,CAAC;gBAClC,CAAC,CAAC;YACpB,CAAC,CAAC;SAGH;IAEH,CAAC;IAED;;;;;OAKG;IACH,2BAA2B,CAAC,SAA2B,EAC3B,QAAe,EACf,WAAqB;QAE/C,wCAAwC;QACxC,IAAI,SAAS,IAAI,QAAQ,EAAE;YAEzB,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC1B,SAAS,EAAE,oGAAsB;gBACjC,cAAc,EAAE;oBACd,qBAAqB,EAAE,SAAS;oBAChC,UAAU,EAAE,QAAQ;oBACpB,aAAa,EAAE,WAAW;iBAC3B;aACF,CAAC;iBACD,IAAI,CAAC,OAAO,CAAC,EAAE;gBAEd,OAAO,CAAC,OAAO,EAAE,CAAC;YACpB,CAAC,CAAC;SACH;IACH,CAAC;IAGD;;OAEG;IACH,WAAW,CAAC,SAAiB,EAAE,IAAqB;QAElD,IAAI,IAAI,IAAI,OAAO,EAAE;YAEnB,IAAI,YAAY,GAAG;gBACjB,OAAO,EAAE,SAAS;gBAClB,OAAO,EAAE,CAAC,IAAI,CAAC;aAChB;YAGD,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,YAAY,CAAC;iBAClC,IAAI,CAAC,OAAO,CAAC,EAAE;gBACR,OAAO,CAAC,OAAO,EAAE,CAAC;YAC1B,CAAC,CAAC,CAAC;SAEV;aACI;YAEH,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC1B,OAAO,EAAE,SAAS;gBAClB,QAAQ,EAAE,IAAI;aACf,CAAC;iBACD,IAAI,CAAC,OAAO,CAAC,EAAE;gBACd,OAAO,CAAC,OAAO,EAAE,CAAC;YACpB,CAAC,CAAC;SAEH;IACH,CAAC;IAGD;;;OAGG;IACH,yBAAyB;QACvB,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;QACrD,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED;;;OAGG;IACH,oCAAoC;QAClC,IAAI,IAAI,CAAC,6BAA6B,EAAE;YACtC,IAAI,CAAC,6BAA6B,GAAG,KAAK,CAAC;SAC5C;aACI;YACH,IAAI,CAAC,6BAA6B,GAAG,IAAI,CAAC;SAC3C;IACH,CAAC;IAGD;;;OAGG;IACH,2BAA2B;QACzB,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAC7B,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;SACnC;aACI;YACH,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;SAClC;IACH,CAAC;IAED;;;;OAIG;IACH,uBAAuB,CAAC,KAAU;QAChC,qDAAqD;QAErD,iCAAiC;QACjC,IAAI,CAAC,cAAc,EAAE,CAAC;IAExB,CAAC;IAKD,+BAA+B,CAAC,kBAAuC;QACrE,OAAO,kFAAc,CAAC,4BAA4B,CAAC,kBAAkB,CAAC,CAAC;IACzE,CAAC;IAED;;;;OAIG;IACH,YAAY,CAAE,OAAc;QAC1B,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;IACjD,CAAC;IAED;;;OAGG;IACH,iBAAiB,CAAC,OAAc;QAC9B,IAAI,KAAK,GAAG,SAAS,CAAC;QAEtB,IAAI,KAAK,GAAS,IAAI,IAAI,CAAC,kFAAU,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;QAE/D,IAAI,OAAO,EAAE;YACX,IAAI,OAAO,CAAC,QAAQ,GAAG,KAAK,EAAE;gBAC5B,cAAc;gBACd,KAAK,GAAC,QAAQ,CAAC;aAChB;iBACI,IAAI,OAAO,CAAC,UAAU,GAAG,KAAK,EAAE;gBACnC,QAAQ;gBACR,KAAK,GAAG,SAAS;aAClB;iBACI;gBACH,SAAS;gBACT,KAAK,GAAG,SAAS,CAAC;aACnB;SACF;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAGD;;;;OAIG;IACH,qBAAqB;QACnB,IAAI,KAAa,CAAC;QAElB,QAAQ,IAAI,CAAC,yBAAyB,EAAE;YACtC,KAAK,0EAAW,CAAC,MAAM;gBACrB,KAAK,GAAG,qBAAqB,CAAC;gBAC9B,MAAM;YACR,KAAK,0EAAW,CAAC,SAAS;gBACxB,KAAK,GAAG,qBAAqB,CAAC;gBAC9B,MAAM;YACR,KAAK,0EAAW,CAAC,IAAI;gBACnB,KAAK,GAAG,iBAAiB,CAAC;gBAC1B,MAAM;YAER;gBACE,MAAM;SACT;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAGD,QAAQ,CAAC,KAAS;QAChB,IAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,GAAG,CAAC,EAAC;YAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;aACG;YACF,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAC;gBACjC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aACzB;iBACI,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,EAAC;gBACvC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;aACxB;SACF;IACH,CAAC;IAGD;;;OAGG;IACH,SAAS,CAAC,KAAU;QAElB,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;YAE9C,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;SAE5B;aACI,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;YAEjD,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;SAC9B;IAEH,CAAC;IAED;;;OAGG;IACA,eAAe,CAAC,KAAK;QAEnB,6CAA6C;QAC7C,gDAAgD;QAChD,QAAQ,IAAI,CAAC,YAAY,EAAE;YACzB,KAAK,iBAAiB,CAAC,KAAK;gBAC1B,cAAc;gBACd,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,MAAM;YACR,KAAK,iBAAiB,CAAC,OAAO;gBAC5B,uBAAuB;gBACvB,IAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,MAAM;YAER;gBACE,MAAM;SACT;IACH,CAAC;IAEF;;;MAGE;IACF,iBAAiB,CAAC,KAAwB;QAEtC,gDAAgD;QAChD,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAE5B,CAAC;IAEH;;MAEE;IACF,qBAAqB;QAEnB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB;aACzB,SAAS,CAAC,WAAW,CAAC,EAAE;YACjB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAE/B,IAAI,IAAI,CAAC,iBAAiB,EAAE;gBAC1B,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;aAClC;QACT,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,IAAI,IAAI,CAAC,iBAAiB,EAAE;gBAC1B,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;aAClC;QACH,CAAC,CAAC,CAAC;IACnC,CAAC;;kFA/gBU,iBAAiB;iGAAjB,iBAAiB;QC/B9B,6EAAY;QACV,iFAA6B;QAC3B,iFAA0B;QACxB,gFAAuD;QACzD,4DAAc;QACd,4EAAW;QAAA,yEAAc;QAAA,4DAAY;QACvC,4DAAc;QAEd,iFAAuB;QAErB,iFAG6C;QADvC,iMAA0B,oGACb,2BAAuB,IADV;QAG9B,wFACqC;QACnC,yEAA0C;QAC1C,6EAAW;QAAA,mEAAO;QAAA,4DAAY;QAChC,4DAAqB;QAErB,yFACyB;QACvB,0EAA8C;QAC9C,6EAAW;QAAA,uEAAW;QAAA,4DAAY;QACpC,4DAAqB;QAEvB,4DAAc;QAChB,4DAAc;QAEhB,4DAAa;QAEb,kFAAyD;QAA/B,6JAAa,oBAAgB,IAAC;QAEtD,oFAA6D;QAAjC,iKAAc,qBAAiB,IAAC;QAC1D,oFAA+C;QACjD,4DAAgB;QAGhB,iHAsFM;QAGN,iHAiGM;QAIR,4DAAc;;QAzNJ,0DAA0B;QAA1B,qFAA0B;QAIpB,0DAA0B;QAA1B,uFAA0B;QAMpC,0DAAwB;QAAxB,qFAAwB;QAiBA,0DAAoC;QAApC,0GAAoC;QAyFpC,0DAAkC;QAAlC,wGAAkC;;;;;;;;;;;;;;AC/HhE;AAAA;AAAA;AAAA;AAAoE;;AAM7D,MAAM,aAAa;IAExB,SAAS,CAAC,KAAa;QACrB,IAAI,KAAK,GAAG,EAAE,CAAC;QAEf,KAAK,GAAG,iEAAS,CAAC,MAAM,CAAC,iEAAS,EAAE,KAAK,CAAC,CAAC;QAC3C,OAAO,KAAK,CAAC;IACf,CAAC;;0EAPU,aAAa;4GAAb,aAAa;;;;;;;;;;;;;ACN1B;AAAA;AAAA;AAAA;AAAA;AAAuD;AAEG;;;AAE1D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sEAAiB;KAC7B;IACD;QACE,IAAI,EAAE,wBAAwB;QAC9B,YAAY,EAAE,GAAG,EAAE,CAAC,yPAA8D,CAAC,IAAI,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,6BAA6B,CAAC;KAC/H;CAEF,CAAC;AAMK,MAAM,8BAA8B;;4GAA9B,8BAA8B;6GAA9B,8BAA8B;iHAHhC,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,8BAA8B,uFAF/B,4DAAY;;;;;;;;;;;;;AClBxB;AAAA;AAAA;AAAA;AAAyE;;AAKlE,MAAM,kBAAkB;IAE7B,SAAS,CAAC,KAAa;QACrB,IAAI,KAAK,GAAG,EAAE,CAAC;QAEf,KAAK,GAAG,iEAAS,CAAC,MAAM,CAAC,sEAAc,EAAE,KAAK,CAAC,CAAC;QAChD,OAAO,KAAK,CAAC;IACf,CAAC;;oFAPU,kBAAkB;sHAAlB,kBAAkB;;;;;;;;;;;;;ACL/B;AAAA;AAAA;AAAA;AAAA;AAAuD;AAEa;;;AAEpE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gFAAsB;KAClC;CACF,CAAC;AAMK,MAAM,mCAAmC;;sHAAnC,mCAAmC;kHAAnC,mCAAmC;sHAHrC,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,mCAAmC,uFAFpC,4DAAY;;;;;;;;;;;;;;;;;ACTjB,MAAM,eAAe;IAE1B,SAAS,CAAC,KAAa;QACrB,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,QAAQ,KAAK,EAAE;YACb,KAAK,CAAC;gBACJ,KAAK,GAAG,UAAU,CAAC;gBACnB,MAAM;YACR,KAAK,CAAC;gBACJ,KAAK,GAAG,UAAU,CAAC;gBACnB,MAAM;YACR,KAAK,CAAC;gBACJ,KAAK,GAAG,WAAW,CAAC;gBACpB,MAAM;YACR,KAAK,CAAC;gBACJ,KAAK,GAAG,aAAa,CAAC;gBACtB,MAAM;YACR,KAAK,CAAC;gBACJ,KAAK,GAAG,WAAW,CAAC;gBACpB,MAAM;YACR,KAAK,CAAC;gBACJ,KAAK,GAAG,WAAW,CAAC;gBACpB,MAAM;YACR,KAAK,CAAC;gBACJ,KAAK,GAAG,QAAQ,CAAC;gBACjB,MAAM;SACT;QAGD,OAAO,KAAK,CAAC;IACf,CAAC;;8EA9BU,eAAe;gHAAf,eAAe;;;;;;;;;;;;;ACJ5B;AAAA;AAAA;AAAA;AAAqE;;AAK9D,MAAM,cAAc;IAEzB,SAAS,CAAC,KAAa;QACrB,IAAI,KAAK,GAAG,EAAE,CAAC;QAEf,KAAK,GAAG,iEAAS,CAAC,MAAM,CAAC,kEAAU,EAAE,KAAK,CAAC,CAAC;QAE5C,OAAO,KAAK,CAAC;IACf,CAAC;;4EARU,cAAc;8GAAd,cAAc;;;;;;;;;;;;;ACL3B;AAAA;AAAA;AAAA;AAAA;AAA0E;AACjB;;AAKlD,MAAM,mBAAmB;IAE9B,SAAS,CAAC,KAAa;QACrB,IAAI,KAAK,GAAG,EAAE,CAAC;QAEf,KAAK,GAAG,iEAAS,CAAC,MAAM,CAAC,uFAAe,EAAE,KAAK,CAAC,CAAC;QACjD,OAAO,KAAK,CAAC;IACf,CAAC;;sFAPU,mBAAmB;wHAAnB,mBAAmB;;;;;;;;;;;;;ACNhC;AAAA;AAAA;AAAA;AAA4E;;AAKrE,MAAM,qBAAqB;IAEhC,SAAS,CAAC,KAAa;QACrB,IAAI,KAAK,GAAG,EAAE,CAAC;QAEf,KAAK,GAAG,iEAAS,CAAC,MAAM,CAAC,yEAAiB,EAAE,KAAK,CAAC,CAAC;QAEnD,OAAO,KAAK,CAAC;IACf,CAAC;;0FARU,qBAAqB;4HAArB,qBAAqB;;;;;;;;;;;;;ACLlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACF;AAEA;AAE8C;AAEvB;AACJ;AAC4B;;AAcrF,MAAM,4BAA4B;;wGAA5B,4BAA4B;2GAA5B,4BAA4B;+GAX9B;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,uGAAmC;YACnC,6EAAW;YACX,yGAAsB;SACvB;mIAIU,4BAA4B,mBAHxB,gFAAsB,aAPnC,4DAAY;QACZ,0DAAW;QACX,0DAAW;QACX,uGAAmC;QACnC,6EAAW;QACX,yGAAsB,aAGd,gFAAsB;;;;;;;;;;;;;ACrBlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0G;AACvD;AACsB;AAGd;AACG;;;;;;;;;;ICK1D,kFAAwG;IAAjE,0WAA0B;IAE/D,yFAAgC;IAC9B,0EAAyC;IACzC,4EAAW;IAAA,sEAAW;IAAA,4DAAY;IACpC,4DAAqB;IAErB,yFAAgC;IAC9B,0EAA8C;IAC9C,4EAAW;IAAA,kEAAO;IAAA,4DAAY;IAChC,4DAAqB;IAEvB,4DAAc;;;IAZyB,wFAA0B;IAE3C,0DAAW;IAAX,oEAAW;IAKX,0DAAW;IAAX,oEAAW;;;IAiB/B,8EAAgE;IAC9D,qFAA+B;IAAA,gEAAK;IAAA,4DAAiB;IACvD,4DAAU;;;IAwCR,2EAAiC;IAC/B,0EAAsD;IACtD,4EAAW;IACT,uDACF;;IAAA,4DAAY;IACd,4DAAW;;;IAFP,0DACF;IADE,8KACF;;;IAGF,2EAAiC;IAC/B,0EAA6D;IAC7D,4EAAW;IAAA,uDACX;IAAA,4DAAY;IACd,4DAAW;;;IAFE,0DACX;IADW,kLACX;;;IAGF,2EAAiC;IAC/B,0EAA0D;IAC1D,4EAAW;IAAA,uDACX;IAAA,4DAAY;IACd,4DAAW;;;IAFE,0DACX;IADW,8LACX;;;IAGF,+EAAqE;IACnE,0EAA6D;IAC7D,4EAAW;IAAA,uDAAqC;;IAAA,4DAAY;IAC9D,4DAAW;;;IADE,0DAAqC;IAArC,4JAAqC;;;IAQxD,+EAA4C;IAC1C,4EAAW;IAAA,iGAAsC;IAAA,4DAAY;IAC/D,4DAAW;;;;IAaL,0EAAuD;IACrD,+EAAsF;IAA/D,sWAAoB,CAAC,KAAE;IAAwC,4DAAW;IACnG,4DAAU;;;IADuC,0DAAsC;IAAtC,uGAAsC;;;;IAP7F,0EAAqD;IAEnD,+EAAuB;IACrB,gFAA8B;IAAA,8EAAmB;IAAA,4DAAY;IAE7D,0EAAS;IACP,kIAEU;IACZ,4DAAU;IAEZ,4DAAW;IAIX,2EAAU;IACR,gFAA8B;IAAA,gFAAqB;IAAA,4DAAY;IAC/D,mFACoD;IAAlD,2XAAiD;IACnD,4DAAe;IACjB,4DAAW;IAEb,4DAAM;;;IAhB6B,0DAAc;IAAd,qFAAc;IAWK,0DAAuB;IAAvB,uFAAuB;;;IAW3E,0EAAoD;IAClD,4EAAW;IAAA,mFAAwB;IAAA,4DAAY;IACjD,4DAAM;;;;IAoBJ,uFAKyC;IAArC,0XAAoC;IACxC,4DAAmB;;;;IAJf,wFAAuB;;;;IAnB7B,sEAA8B;IAC5B,+EAAuB;IACrB,4EAAW;IACT,qEAAI;IAAA,uEAAY;IAAA,4DAAK;IACvB,4DAAY;IAEZ,+EAGe;IAFX,iVAA+B;IAGjC,0EAAkD;IAClD,4EAAW;IAAA,uDAA6G;IAAA,4DAAY;IACtI,4DAAW;IAEb,4DAAW;IAGX,0JAMmB;IACrB,4DAAM;;;IAbW,0DAA6G;IAA7G,uMAA6G;IAOhG,0DAAoB;IAApB,8FAAoB;;;IA1BpD,0EAAqD;IAGnD,0HAEM;IAGN,2HAwBM;IAER,4DAAM;;;IA/BqB,0DAAyB;IAAzB,4FAAyB;IAK5C,0DAAsB;IAAtB,yFAAsB;;;;IA8BhC,6EAA8B;IAC5B,iFAAkE;IAAtB,yUAAqB;IAC/D,iFACF;IAAA,4DAAa;IACf,4DAAa;;ADxKN,MAAM,sBAAsB;IAuFjC,YAAoB,SAA0B,EAC1B,YAAyB,EACzB,kBAAyC,EACzC,eAAgC,EAChC,eAAgC;QAJhC,cAAS,GAAT,SAAS,CAAiB;QAC1B,iBAAY,GAAZ,YAAY,CAAa;QACzB,uBAAkB,GAAlB,kBAAkB,CAAuB;QACzC,oBAAe,GAAf,eAAe,CAAiB;QAChC,oBAAe,GAAf,eAAe,CAAiB;QAnCpD,cAAS,GAAY,KAAK,CAAC;QAC3B,kBAAa,GAAY,IAAI,CAAC;QAK9B,kBAAa,GAAc,EAAE,CAAC;QAC9B,sBAAiB,GAA4B,EAAE,CAAC;QAEhD,uBAAuB;QACvB,iBAAY,GAAW,CAAC,CAAC;QAEzB,uEAAuE;QACvE,+CAA+C;QAC/C,sBAAiB,GAAY,IAAI,CAAC;QAElC,sDAAsD;QACtD,wBAAmB,GAAY,KAAK,CAAC;QAErC,wCAAwC;QACxC,qBAAgB,GAAY,KAAK,CAAC;QAElC,oBAAoB;QACpB,cAAS,GAAc,EAAE,CAAC;QAC1B,cAAS,GAAG,CAAC,CAAC;QAGd,wBAAwB;QACxB,mBAAc,GAAW,CAAC,CAAC;QASb,2BAA2B;QAC3B,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IACxB,CAAC;IA5Fd,IAAa,mBAAmB,CAAC,KAAuB;QAElD,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAEvB,IAAI,KAAK,EAAE;YAET,wCAAwC;YACxC,IAAI,KAAK,CAAC,SAAS,EAAE;gBACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACvB;YACD,IAAI,KAAK,CAAC,eAAe,IAAI,SAAS,EAAE;gBACtC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,eAAe,CAAC;aACxC;YAED,IAAI,KAAK,CAAC,uBAAuB,EAAE;gBACjC,IAAI,KAAK,CAAC,uBAAuB,CAAC,MAAM,IAAI,CAAC,EAAE;oBAE7C,qCAAqC;oBACrC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,uBAAuB,CAAC;iBACxD;qBACI;oBACH,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;iBAC7B;aACF;iBACI;gBACH,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;aAC7B;YAED,2CAA2C;YAC3C,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC7B;QAED,oCAAoC;QACpC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IAC1C,CAAC;IAED,IAAa,QAAQ,CAAC,KAAW;QAC/B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IAED;;OAEG;IACH,IAAa,WAAW,CAAC,KAAiB;QACxC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;YACrB,mDAAmD;YACnD,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;SAChC;IACH,CAAC;IA4CD,QAAQ;IACR,CAAC;IAGD;;OAEG;IACH,oBAAoB;QAClB,IAAI,KAAK,GAAY,KAAK,CAAC;QAC3B,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,IAAI,CAAC,EAAE;gBACpC,KAAK,GAAG,IAAI,CAAC;aAChB;SACF;QAED,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,mBAAmB,GAAG,CAAC,KAAK,CAAC;IACpC,CAAC;IAED;;;;OAIG;IACH,QAAQ,CAAC,WAAmB,EAAE,QAAgB,KAAK;QACjD,IAAI,IAAI,CAAC,SAAS,IAAI,KAAK,EAAE;YAE3B,6BAA6B;YAC7B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE;gBAC9B,qBAAqB;gBACrB,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,cAAc,EAAE,KAAK,EAAE,EAAE;oBACxD,IAAI,KAAK,GAAG,CAAC,IAAI,WAAW,EAAE;wBAC5B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBAC3B;yBACI;wBACH,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;qBAC5B;iBAEF;aACF;iBACI;gBACH,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;oBAC1D,IAAI,KAAK,GAAG,CAAC,IAAI,WAAW,EAAE;wBAC1B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAC,IAAI,CAAC;qBAC9B;yBACI;wBACD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAC,KAAK,CAAC;qBAC/B;iBAEF;aACF;YAED,sBAAsB;YACtB,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;SAE9B;IAGH,CAAC;IAGD;;OAEG;IACH,mBAAmB;QACjB,IAAI,YAAY,GAAQ,EAAE,CAAC;QAC3B,IAAI,YAAiB,CAAC;QAEtB,IAAI,IAAI,CAAC,SAAS,EAAE;YAElB,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,IAAI,CAAC,EAAE;gBAEtD,kBAAkB;gBAClB,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,aAAa,EAAE;oBACzC,YAAY,GAAG;wBACb,IAAI,EAAE,QAAQ,CAAC,aAAa;wBAC5B,OAAO,EAAE,GAAE,EAAE;4BACX,mCAAmC;4BACnC,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC;wBAC1C,CAAC;qBACF;oBAED,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBACjC;gBAED,kBAAkB;gBAClB,YAAY,GAAG;oBACb,IAAI,EAAC,SAAS;oBACd,IAAI,EAAC,kBAAkB;oBACvB,IAAI,EAAE,QAAQ;iBACf;gBACD,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAEhC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;oBAC7B,MAAM,EAAE,iDAAiD;oBACzD,OAAO,EAAE,YAAY;iBACtB,CAAC;qBACD,IAAI,CAAC,QAAQ,CAAC,EAAE;oBACf,QAAQ,CAAC,OAAO,EAAE,CAAC;gBACrB,CAAC,CAAC,CAAC;aAEN;SAEF;IACH,CAAC;IAED;;;OAGG;IACH,wBAAwB,CAAC,SAAkB;QACzC,IAAI,SAAS,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAEvC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBACvC,OAAO,CAAC,eAAe,GAAG,SAAS,CAAC,EAAE;YACxC,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAGD;;OAEG;IACH,gBAAgB;QACd,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC5B;aACI;YACH,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;IACH,CAAC;IAGD;;;OAGG;IACH,eAAe,CAAC,KAAS;QACvB,0CAA0C;QAC1C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IACvC,CAAC;IAGD;;OAEG;IACH,SAAS;QAEP,IAAI,YAAY,GAAsB,EAAE,CAAC;QACzC,IAAI,YAA+B,CAAC;QAEpC,mBAAmB;QACnB,IAAI,IAAI,CAAC,SAAS,EAAE;YAElB,eAAe;YACf,YAAY,GAAG;gBACb,IAAI,EAAE,4BAA4B;gBAClC,IAAI,EAAE,cAAc;gBACpB,OAAO,EAAE,GAAG,EAAE;oBACZ,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBAC7B,CAAC;aACF;YACD,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAEhC,oBAAoB;YACpB,YAAY,GAAG;gBACb,IAAI,EAAE,oBAAoB;gBAC1B,IAAI,EAAE,uBAAuB;gBAC7B,OAAO,EAAE,GAAG,EAAE;oBACZ,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;gBAC9B,CAAC;aACF;YACD,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAEhC,kBAAkB;YAClB,YAAY,GAAG;gBACb,IAAI,EAAC,SAAS;gBACd,IAAI,EAAC,kBAAkB;gBACvB,IAAI,EAAE,QAAQ;aACf;YACD,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAEhC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC;gBAC7B,MAAM,EAAE,6CAA6C;gBACrD,OAAO,EAAE,YAAY;aACtB,CAAC;iBACD,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACf,QAAQ,CAAC,OAAO,EAAE,CAAC;YACrB,CAAC,CAAC,CAAC;SAEJ;aACI;YACH,+BAA+B;YAC/B,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;SAC1B;IAGH,CAAC;IAED;;;OAGG;IACH,eAAe,CAAC,SAAiB;QAC/B,iCAAiC;QAEjC,IAAI,SAAS,EAAE;YACb,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,IAAI,CAAC;SAC1C;aACI;YACH,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,KAAK,CAAC;SAC3C;QAED,IAAI,CAAC,kBAAkB,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,CAAC;QACrE,IAAI,CAAC,kBAAkB,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,UAAU,CAAC;QAC/E,IAAI,CAAC,kBAAkB,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC;QAEzD,IAAI,CAAC,YAAY,CAAC,oCAAoC,CAAC,IAAI,CAAC,kBAAkB,CAAC;aAC7D,IAAI,CAAC,QAAQ,CAAC,EAAE;YAEf,IAAI,QAAQ,CAAC,MAAM,EAAE;gBAElB,IAAI,CAAC,WAAW,CAAC,8BAA8B,EAAC,OAAO,CAAC,CAAC;gBAEzD,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;aAC3B;iBACI;gBACF,+BAA+B;gBAC/B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;aACrC;QACH,CAAC,CAAC;aACD,KAAK,CAAC,KAAK,CAAC,EAAE;YACV,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC;IACrB,CAAC;IAED;;;;OAIG;IACH,eAAe,CAAC,MAAM;IAEtB,CAAC;IAED;;OAEG;IACH,UAAU;QACR,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAGD;;;OAGG;IACF,YAAY;QACX,IAAI,IAAI,GAAW,KAAK,CAAC;QACzB,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,wEAAS,CAAC,KAAK,EAAE;YACxD,IAAI,GAAG,IAAI,CAAC;SACb;QAED,OAAO,IAAI,CAAC;IAEd,CAAC;IAED;;OAEG;IACH,WAAW,CAAC,SAAiB,EAAE,IAAqB;QAElD,IAAI,IAAI,IAAI,OAAO,EAAE;YAEnB,IAAI,YAAY,GAAG;gBACjB,OAAO,EAAE,SAAS;gBAClB,OAAO,EAAE,CAAC,IAAI,CAAC;aAChB;YAGD,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,YAAY,CAAC;iBAClC,IAAI,CAAC,OAAO,CAAC,EAAE;gBACR,OAAO,CAAC,OAAO,EAAE,CAAC;YAC1B,CAAC,CAAC,CAAC;SAEV;aACI;YAEH,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC1B,OAAO,EAAE,SAAS;gBAClB,QAAQ,EAAE,IAAI;aACf,CAAC;iBACD,IAAI,CAAC,OAAO,CAAC,EAAE;gBACd,OAAO,CAAC,OAAO,EAAE,CAAC;YACpB,CAAC,CAAC;SAEH;IACH,CAAC;IAGD;;;;OAIG;IACF,OAAO,CAAC,KAAW;QAEjB,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACvD,CAAC;;4FArZS,sBAAsB;sGAAtB,sBAAsB;QCfnC,6EAAY;QACV,iFAA6B;QAC3B,iFAA0B;QACxB,gFAAgD;QAApC,kJAAS,gBAAY,IAAC;QAChC,yEAAuC;QACzC,4DAAa;QACf,4DAAc;QACd,4EAAW;QAAA,sEAAW;QAAA,4DAAY;QACpC,4DAAc;QAEd,iFAAuB;QAErB,kIAYc;QAChB,4DAAc;QAGhB,4DAAa;QAEb,8EAAa;QAGX,4EAAU;QACR,sFAAwC;QAEtC,4HAEU;QAEV,+EAAsC;QACpC,wEAAmC;QACjC,uEAA4C;QAC9C,4DAAI;QACJ,6EAAW;QACT,0EAA0B;QAAA,wDAA2B;QAAA,4DAAK;QAC1D,0EAA0B;QAAA,wDAAqC;QAAA,4DAAK;QACtE,4DAAY;QACd,4DAAW;QAEX,+EAAsC;QACpC,iFAAiD;QAC/C,qEAAG;QACD,qEAAQ;QAAA,gFAAqC;QAAA,wDAC7C;;;QAAA,4DAAW;QACX,oEAAO;QAAA,gFAAqC;QAAA,wDAC5C;;;QAAA,4DAAW;QACb,4DAAI;QACN,4DAAY;QACd,4DAAW;QAEb,4DAAkB;QAElB,oFAAkB;QAEhB,+EAAiC;QAE/B,kFAAgB;QAEd,wFAA6D;QAA7B,yJAAS,sBAAkB,IAAC;QAC1D,2EAAuG;QACvG,6EAAW;QACT,sEAAI;QAAA,8EAAkB;QAAA,4DAAK;QAC7B,4DAAY;QACd,4DAAmB;QACrB,4DAAiB;QAGjB,+HAKW;QAEX,+HAIW;QAEX,+HAIW;QAEX,+HAGW;QAEb,4DAAW;QAEb,4DAAmB;QACrB,4DAAW;QAEX,+HAEW;QAOX,sHAsBM;QAGN,qHAkCM;QAER,4DAAc;QAEd,mIAIa;;QA3KK,0DAAuB;QAAvB,uFAAuB;QAwBzB,0DAAoB;QAApB,oFAAoB;QAMpB,0DAA8B;QAA9B,6JAA8B;QAGV,0DAA2B;QAA3B,0FAA2B;QAC3B,0DAAqC;QAArC,oGAAqC;QAOhB,0DAC7C;QAD6C,yPAC7C;QAC4C,0DAC5C;QAD4C,uPAC5C;QAcuB,0DAAoE;QAApE,mIAAoE;QAQpF,0DAAoB;QAApB,oFAAoB;QAOpB,0DAAoB;QAApB,oFAAoB;QAMpB,0DAAoB;QAApB,oFAAoB;QAMP,0DAA2C;QAA3C,+GAA2C;QAU9D,0DAAgB;QAAhB,gFAAgB;QASC,0DAAuB;QAAvB,uFAAuB;QAyBvB,0DAAuB;QAAvB,uFAAuB;QAsCxC,0DAAe;QAAf,+EAAe;;;;;;;;;;;;;;AClL5B;AAAA;AAAA;AAAA;AAA0E;;AAKnE,MAAM,mBAAmB;IAE9B,SAAS,CAAC,KAAa;QACrB,IAAI,KAAK,GAAG,EAAE,CAAC;QAEf,KAAK,GAAG,iEAAS,CAAC,MAAM,CAAC,uEAAe,EAAE,KAAK,CAAC,CAAC;QAEjD,OAAO,KAAK,CAAC;IACf,CAAC;;sFARU,mBAAmB;wHAAnB,mBAAmB;;;;;;;;;;;;;ACLhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACF;AAEA;AAEoC;AAEvB;AACkC;AAC5B;AACgC;AACR;;AAgBjF,MAAM,uBAAuB;;8FAAvB,uBAAuB;sGAAvB,uBAAuB;0GAbzB;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,6FAA8B;YAC9B,yGAAsB;YACtB,6EAAW;YACX,4GAA4B;SAC7B;mIAKU,uBAAuB,mBAJnB,sEAAiB,aAR9B,4DAAY;QACZ,0DAAW;QACX,0DAAW;QACX,6FAA8B;QAC9B,yGAAsB;QACtB,6EAAW;QACX,4GAA4B,aAGpB,oGAAsB;;;;;;;;;;;;;ACxBlC;AAAA;AAAA;AAAA;AAAmE;;AAK5D,MAAM,aAAa;IAExB,SAAS,CAAC,KAAa;QACrB,IAAI,KAAK,GAAG,EAAE,CAAC;QAEf,KAAK,GAAG,iEAAS,CAAC,MAAM,CAAC,iEAAS,EAAE,KAAK,CAAC,CAAC;QAC3C,OAAO,KAAK,CAAC;IACf,CAAC;;0EAPU,aAAa;4GAAb,aAAa;;;;;;;;;;;;;ACL1B;AAAA;AAAA;AAAA;AAAsE;;AAK/D,MAAM,eAAe;IAE1B,SAAS,CAAC,KAAa;QACrB,IAAI,KAAK,GAAG,EAAE,CAAC;QAEf,KAAK,GAAG,iEAAS,CAAC,MAAM,CAAC,mEAAW,EAAE,KAAK,CAAC,CAAC;QAC7C,OAAO,KAAK,CAAC;IACf,CAAC;;8EAPU,eAAe;gHAAf,eAAe;;;;;;;;;;;;;ACJ5B;AAAA;AAAA;AAAA;AAA2D;;AAKpD,MAAM,kBAAkB;IAE7B,6EAA6E;IAC7E,qEAAqE;IACrE,2DAA2D;IAC3D,gDAAgD;IAEhD,SAAS,CAAC,KAAa,EAAE,QAAkB,EAAE,GAAG,IAAW;QACzD,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,IAAI,YAAY,GAAG,KAAK,CAAC;QACzB,IAAI,QAAQ,GAAG,CAAC,CAAC;QAEjB,IAAI,KAAK,KAAK,SAAS,EAAE;YACvB,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;gBACtB,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aAC7B;SACF;QAED,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;YAEzB,gDAAgD;YAChD,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvB,YAAY,GAAG,IAAI,CAAC;aACrB;YAED,kCAAkC;YAClC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBACzB,IAAI;oBACA,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;oBAC7B,QAAQ,EAAE,CAAC;oBAEX,IAAI,YAAY,EAAE;wBAChB,MAAM,GAAG,wEAAS,CAAC,aAAa,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;qBACtD;yBACI;wBACH,MAAM,GAAG,wEAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;qBACjD;oBAGD,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAG;wBAC7B,WAAW,IAAI,IAAI,CAAC;qBACrB;oBAED,WAAW,IAAI,MAAM,CAAC;iBAEzB;gBAAC,OAAO,KAAK,EAAE;oBACd,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;iBAC5B;YAGH,CAAC,CAAC,CAAC;SACJ;QAED,OAAO,WAAW,CAAC;IACrB,CAAC;;oFAxDU,kBAAkB;sHAAlB,kBAAkB;;;;;;;;;;;;;ACN/B;AAAA;AAAA;AAAA;AAAgF;;AAKzE,MAAM,uBAAuB;IAElC,SAAS,CAAC,KAAa;QACrB,IAAI,KAAK,GAAG,EAAE,CAAC;QAEf,KAAK,GAAG,wEAAS,CAAC,MAAM,CAAC,kFAAmB,EAAE,KAAK,CAAC,CAAC;QAErD,OAAO,KAAK,CAAC;IACf,CAAC;;8FARU,uBAAuB;gIAAvB,uBAAuB","file":"pages-agenda-trainer-agenda-trainer-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { LabelGiornoPipe } from './label-giorno.pipe';\r\nimport { StrutturaCampoPipe } from './struttura-campo.pipe';\r\nimport { TipoCampoPipe } from './tipo-campo.pipe';\r\nimport { SettoreAttivitaPipe } from './settore-attivita.pipe';\r\nimport { TipoCorsoPipe } from './tipo-corso.pipe';\r\nimport { TargetSessoPipe } from './target-sesso.pipe';\r\nimport { StatoSlotPipe } from './stato-slot.pipe';\r\nimport { StatoPrenotazionePipe } from './stato-prenotazione.pipe';\r\nimport { AmbitoNewsPipe } from './ambito-news.pipe';\r\nimport { GiorniPrevistiPipe } from './giorni-previsti.pipe';\r\nimport { ClasseDocumentoPipe } from './classe-documento.pipe';\r\nimport { TipomasterdocumentoPipe } from './tipomasterdocumento.pipe';\r\n\r\n@NgModule({\r\n    declarations: [LabelGiornoPipe, \r\n                   StrutturaCampoPipe, \r\n                   TipoCampoPipe, \r\n                   SettoreAttivitaPipe, \r\n                   TipoCorsoPipe, \r\n                   TargetSessoPipe, \r\n                   StatoSlotPipe, \r\n                   StatoPrenotazionePipe, \r\n                   AmbitoNewsPipe, \r\n                   GiorniPrevistiPipe, \r\n                   ClasseDocumentoPipe, \r\n                   TipomasterdocumentoPipe],\r\n    imports: [],\r\n    exports: [LabelGiornoPipe, \r\n              StrutturaCampoPipe, \r\n              TipoCampoPipe, \r\n              SettoreAttivitaPipe, \r\n              TipoCorsoPipe,\r\n              TargetSessoPipe,\r\n              StatoSlotPipe,\r\n              StatoPrenotazionePipe, \r\n              AmbitoNewsPipe,\r\n              GiorniPrevistiPipe,\r\n              ClasseDocumentoPipe, \r\n              TipomasterdocumentoPipe]\r\n})\r\nexport class PipesModule{}\r\n\r\n/**\r\n * Questo Modulo serve a includere tutti i Pipes definiti\r\n * Quindi per ogni nuovo pipe è necessario importarlo qui \r\n * e specificarlo in declarations ed exports\r\n * \r\n * NON INCLUDERE NESSUN MODULO IN app.module.ts\r\n * \r\n * Quando serve un pipe usare la \r\n * page.module.ts (Il file modulo della pagina dove bisogna usare il pipe)\r\n * importare il modulo Pipes.Module.ts e aggiungere in ngModel imports PipesModule\r\n * \r\n * Non serve fare riferimento diretto al pipe che si vuole usare\r\n */","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, TipoCampo } from 'src/app/models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'tipoCampo'\r\n})\r\nexport class TipoCampoPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {\r\n    let label = '';\r\n\r\n    label = ValueList.decode(TipoCampo, value);\r\n    \r\n    return label;\r\n  }\r\n\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { AlertController, LoadingController, ModalController, NavController, ToastController } from '@ionic/angular';\r\nimport { Subscription } from 'rxjs';\r\nimport { MyDateTime } from 'src/app/library/models/mydatetime.model';\r\nimport { Corso } from 'src/app/models/corso.model';\r\nimport { CorsoValutazione } from 'src/app/models/corsovalutazione.model';\r\nimport { ItemCalendario } from 'src/app/models/itemCalendario.model';\r\nimport { Livello } from 'src/app/models/livello.model';\r\nimport { PianificazioneCorso } from 'src/app/models/pianificazionecorso.model';\r\nimport { Utente } from 'src/app/models/utente.model';\r\nimport { Language, RangeSearch, TimeTrainerCourse } from 'src/app/models/valuelist.model';\r\nimport { StartService } from 'src/app/services/start.service';\r\nimport { ValutazioneTrainerPage } from './valutazione-trainer/valutazione-trainer.page';\r\n\r\n\r\nexport enum ViewTrainerCourse {\r\n  impegni = 'impegni',\r\n  corsi = 'corsi'\r\n}\r\n\r\nexport interface IRangeDate {\r\n  startDate: Date,\r\n  endDate: Date\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-agenda-trainer',\r\n  templateUrl: './agenda-trainer.page.html',\r\n  styleUrls: ['./agenda-trainer.page.scss'],\r\n})\r\nexport class AgendaTrainerPage implements OnInit,OnDestroy {\r\n  lingua=Language.italiano;  \r\n  \r\n  utente: Utente = new Utente();\r\n\r\n  //Impegni\r\n  myListPianificazioni: PianificazioneCorso[] = [];\r\n  selectedDate: Date = new Date();\r\n  selectedIsoDate: string = this.selectedDate.toISOString();\r\n\r\n  //Criteri ricerca delle pianificazioni\r\n  rangeSearchPianificazioni: RangeSearch = RangeSearch.giorno;\r\n  PageRangeSearch: typeof RangeSearch = RangeSearch;\r\n\r\n  //Il Gruppo con i Filtri degli impegni puo' essere collassato o aperto\r\n  collapsedFilterPianificazioni: boolean = true;\r\n  //Il Gruppo con i Filtri degli impegni puo' essere collassato o aperto\r\n  collapsedFilterCorsi: boolean = true;\r\n\r\n  //Elenco Corsi\r\n  myListCorsi: Corso[] = [];\r\n  subListenCorsi: Subscription;\r\n\r\n  showFilter: boolean = true;\r\n\r\n  //FIXME: C'e' gia un enum con i giorni della settimana\r\n  settimana = ['Domenica', 'Lunedì', 'Martedì', 'Mercoledì', 'Giovedì', 'Venerdì', 'Sabato']\r\n\r\n  //Viste della pagina\r\n  PageView : typeof ViewTrainerCourse = ViewTrainerCourse;\r\n  selectedView: ViewTrainerCourse = ViewTrainerCourse.impegni;\r\n\r\n  //Stati di un corso con la data odierna\r\n  TimeStateCourse: typeof TimeTrainerCourse = TimeTrainerCourse;\r\n  selectedTimeState:TimeTrainerCourse = TimeTrainerCourse.attivi;\r\n\r\n  myLoadingForCorsi: HTMLIonLoadingElement;\r\n\r\n  today = new Date();\r\n\r\n\r\n  constructor(\r\n    private startService: StartService,\r\n    private navController: NavController,\r\n    private loadingController: LoadingController,\r\n    private toastController: ToastController,\r\n    private alertController: AlertController,\r\n    private modalController: ModalController\r\n  ) { \r\n\r\n    //Ascolto i cambiamenti per la Lista Corsi\r\n    this.listenChangeListCorsi();\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    //recupero l'utente\r\n    this.utente = this.startService.actualUtente;\r\n\r\n    //se sono un trainer\r\n    if (this.utente.isTrainer || this.utente.isAssistenteTrainer){\r\n\r\n      this.requestImpegni();\r\n    }\r\n    else{\r\n      this.navController.navigateRoot('/home');\r\n    }\r\n  }\r\n\r\n\r\n  ngOnDestroy() {\r\n    if (this.subListenCorsi) {\r\n      this.subListenCorsi.unsubscribe();\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Calcola le Date Inizio e Fine per effettuare la richiesta Impegni\r\n   * @returns IRangeDate con inizio e fine\r\n   */\r\n  private prepareDateForSearchImpegni(): IRangeDate {\r\n    let dataInizio: Date;\r\n    let dataFine: Date;\r\n    let range: IRangeDate;\r\n\r\n    if (this.rangeSearchPianificazioni == RangeSearch.giorno) {\r\n      dataInizio = this.selectedDate;\r\n      dataFine = this.selectedDate;\r\n    }\r\n    else if (this.rangeSearchPianificazioni == RangeSearch.settimana) {\r\n      //Imposto da Domenica a Domenica\r\n      dataInizio = MyDateTime.getStartEndDate(this.selectedDate,'week','start');\r\n      dataFine = MyDateTime.getStartEndDate(this.selectedDate,'week','end');\r\n    }\r\n    else if (this.rangeSearchPianificazioni == RangeSearch.mese) {\r\n      //Dal 1 a fine Mese\r\n      dataInizio = MyDateTime.getStartEndDate(this.selectedDate,'month','start');\r\n      dataFine = MyDateTime.getStartEndDate(this.selectedDate,'month','end');\r\n    }\r\n\r\n    //Preparo il range e lo ritorno\r\n    range = {\r\n      startDate: dataInizio,\r\n      endDate: dataFine\r\n    }\r\n    \r\n    return range;\r\n\r\n  }\r\n\r\n  /**\r\n   * Richiedo al server le date pianificate dei corsi\r\n   */\r\n  private requestImpegni(event?: any) {\r\n\r\n    let rangeDate: IRangeDate;\r\n\r\n    //creo il loading\r\n    this.loadingController.create({\r\n      message: 'Caricamento...',\r\n      spinner: 'circular',\r\n      backdropDismiss: true\r\n    })\r\n    .then(elLoading => {\r\n\r\n      elLoading.present();\r\n\r\n      //Preparo le date da utilizzare per la ricerca\r\n      rangeDate = this.prepareDateForSearchImpegni();\r\n\r\n      //Chiudo il collapsed\r\n      this.collapsedFilterPianificazioni = true;\r\n      \r\n      //qui stò richiedendo gli impegni che riguardano l'utente in quanto \"collaboratore\"\r\n      this.startService.requestImpegniTrainer(this.utente.ID, rangeDate.startDate, rangeDate.endDate)\r\n        .then(result => {\r\n\r\n          this.myListPianificazioni = result;\r\n          \r\n          elLoading.dismiss();\r\n\r\n          if (event && event.target) {\r\n            event.target.complete();\r\n          }\r\n\r\n        })\r\n        .catch(error => {\r\n\r\n          if (event && event.target) {\r\n            event.target.complete();\r\n          }\r\n\r\n          elLoading.dismiss();\r\n          console.log(error);\r\n          this.showMessage('Errore di connessione');\r\n        });\r\n        \r\n    })\r\n  }\r\n\r\n\r\n  /**\r\n   * Richiedo al server i Corsi\r\n   * @param event \r\n   */\r\n  private requestTimeCorsi(event?: any) {\r\n\r\n        //creo il loading\r\n        this.loadingController.create({\r\n          message: 'Caricamento...',\r\n          spinner: 'circular',\r\n          backdropDismiss: true\r\n        })\r\n        .then(elLoading => {\r\n    \r\n          if (event && event.target) {\r\n            event.target.complete();\r\n          }\r\n\r\n          //Mostro il loading\r\n          this.myLoadingForCorsi = elLoading;\r\n          this.myLoadingForCorsi.present();\r\n\r\n          //Devo effettuare la richiesta per i nuovi corsi\r\n          //Sono Observable e quindi verranno popolati in autonomia\r\n          this.startService.requestTimeTrainerCourse(this.utente.ID, this.selectedTimeState);\r\n\r\n          //Il Dismiss ci pensera la funzione dell'Observable a spegnerlo\r\n          \r\n        })\r\n\r\n  }\r\n\r\n  /**\r\n   * Click su un elemento della Lista Impegni\r\n   * @param elImpegno Elemento selezionato\r\n   */\r\n   onClickImpegno(elImpegno: PianificazioneCorso){\r\n    this.navController.navigateForward('/agenda-trainer/' + elImpegno.ID);\r\n    // this.navController.navigateForward('/agenda-trainer/' + elem.ID+'-'+elem.IDCORSO);\r\n\r\n  }\r\n\r\n  /**\r\n   * Quando viene scelto un corso, si vuole accedere alla Scheda di Valutazione\r\n   * E' necessario chiedere informazioni al server\r\n   * @param elCorso \r\n   * \r\n   */\r\n  onClickCorso(elCorso: Corso) {\r\n\r\n    if (elCorso) {\r\n\r\n      this.loadingController.create({\r\n        message: 'Caricamento...',\r\n        spinner: 'circular',\r\n        backdropDismiss: true      \r\n      })\r\n      .then(elLoading => {\r\n  \r\n        elLoading.present();\r\n\r\n        //Effettuo la richiesta al server\r\n        this.startService.requestSchedaValutazioneCorso(elCorso.ID)\r\n                        .then((docScheda: CorsoValutazione) => {\r\n\r\n\r\n                          //Chiedo al server i livelli per lo sport\r\n                          this.startService.requestLivelliForSport(elCorso.IDSPORT)\r\n                                           .then((collLivelli:Livello[]) => {\r\n\r\n                                             //Chiudo il loading\r\n                                             elLoading.dismiss();\r\n\r\n                                             //Devo aprire la videata in modale passando \r\n                                             //a) Scheda di Valutazione\r\n                                             //b) Corso di riferimento\r\n                                             //c) Livelli Sportivi\r\n                                             this.openModaleSchedaValutazione(docScheda, elCorso, collLivelli);\r\n\r\n                                           })\r\n\r\n\r\n                        })\r\n                        .catch(error => {\r\n\r\n                          elLoading.dismiss();\r\n\r\n                          //Mostro un messaggio\r\n                          this.showMessage(error,'alert');\r\n                        })\r\n      })\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Apre in modale la videata ValutazioneTrainer \r\n   * passando la scheda da mostrare\r\n   * @param docScheda Scheda di Valutazione\r\n   * @param docCorso Corso di riferimento\r\n   */\r\n  openModaleSchedaValutazione(docScheda: CorsoValutazione, \r\n                              docCorso: Corso,\r\n                              collLivelli:Livello[]) {\r\n    \r\n    //Scheda di Valutazione e Corso presente\r\n    if (docScheda && docCorso) {\r\n\r\n      this.modalController.create({\r\n        component: ValutazioneTrainerPage,\r\n        componentProps: {\r\n          'docCorsoValutazione': docScheda,\r\n          'docCorso': docCorso,\r\n          'collLivelli': collLivelli\r\n        }\r\n      })\r\n      .then(elModal => {\r\n\r\n        elModal.present();\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Visualizza un messaggio\r\n   */\r\n  showMessage(messaggio: string, type?:'toast'|'alert'){\r\n\r\n    if (type == 'alert') {\r\n\r\n      let alertOptions = {\r\n        message: messaggio,\r\n        buttons: ['OK']\r\n      }\r\n\r\n\r\n      this.alertController.create(alertOptions)\r\n            .then(elAlert => {\r\n                    elAlert.present();\r\n            });\r\n\r\n    }\r\n    else {\r\n\r\n      this.toastController.create({\r\n        message: messaggio,\r\n        duration: 3000\r\n      })\r\n      .then(elToast => {\r\n        elToast.present();\r\n      })\r\n\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Nella pagina Impegni è stato modificata il filtro Data \r\n   * per la ricerca\r\n   */\r\n  onChangeFilterDateImpegni(){    \r\n    this.selectedDate = (new Date(this.selectedIsoDate)); \r\n    this.requestImpegni();\r\n  }\r\n\r\n  /**\r\n   * Nella pagina Impegni è stato premuto Item-Divider-Group\r\n   * per cambiare il collassamento dei dati\r\n   */\r\n  onChangeCollapseFilterPianificazioni() {\r\n    if (this.collapsedFilterPianificazioni) {\r\n      this.collapsedFilterPianificazioni = false;\r\n    }\r\n    else {\r\n      this.collapsedFilterPianificazioni = true;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Nella pagina Corsi è stato premuto Item-Divider-Group\r\n   * per cambiare il collassamento dei dati\r\n   */\r\n  onChangeCollapseFilterCorsi() {\r\n    if (this.collapsedFilterCorsi) {\r\n      this.collapsedFilterCorsi = false;\r\n    }\r\n    else {\r\n      this.collapsedFilterCorsi = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Pagina Impegni, è stato modificato il PageRangeSearch \r\n   * per recuperare gli impegni con un range giornaliero, settimanale, mensile\r\n   * @param event \r\n   */\r\n  onChangePageRangeSearch(event: any) {\r\n    //Devo effettuare nuovamente la ricerca degli impegni\r\n\r\n    //Recupero nuovamente gli Impegni\r\n    this.requestImpegni();\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  getItemParamsFromPianificazione(pianificazioneElem: PianificazioneCorso){\r\n    return ItemCalendario.getParamsPianificazioneCorso(pianificazioneElem);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param idSport idSport\r\n   * @returns Ritorna l'icona sport da usare\r\n   */\r\n  getIconSport (idSport:string){\r\n    return this.startService.getSportIcon(idSport);\r\n  }\r\n\r\n  /**\r\n   * Ritorna il colore da applicare alla riga della Lista Corsi\r\n   * @param elCorso \r\n   */\r\n  getColorIconCorso(elCorso: Corso):string {\r\n    let color = 'primary';\r\n\r\n    let today: Date = new Date(MyDateTime.formatDateISO(new Date));\r\n    \r\n    if (elCorso) {\r\n      if (elCorso.DATAFINE < today) {\r\n        //Già concluso\r\n        color='danger';\r\n      }\r\n      else if (elCorso.DATAINIZIO > today) {\r\n        //Futuri\r\n        color = 'warning'\r\n      }\r\n      else {\r\n        //Attuali\r\n        color = 'success';\r\n      }\r\n    }\r\n\r\n    return color;\r\n  }\r\n\r\n\r\n  /**\r\n   * Etichetta da mostrare nella Barra di ricerca\r\n   * Pagina Impegni\r\n   * Il valore dipende dalla variabile rangeSearchPianificazioni\r\n   */\r\n  getLabelFilterImpegni(): string {\r\n    let label: string;\r\n\r\n    switch (this.rangeSearchPianificazioni) {\r\n      case RangeSearch.giorno:\r\n        label = 'Impegni giornalieri';\r\n        break;\r\n      case RangeSearch.settimana:\r\n        label = 'Impegni settimanali';\r\n        break;\r\n      case RangeSearch.mese:\r\n        label = 'Impegni mensili';\r\n        break;\r\n    \r\n      default:\r\n        break;\r\n    }\r\n\r\n    return label;\r\n  }\r\n\r\n  \r\n  onScroll(event:any){\r\n    if(event.detail.currentY < 5){\r\n      this.showFilter = true;\r\n    }\r\n    else{\r\n      if (event['detail']['deltaY'] > 20){\r\n        this.showFilter = false;\r\n      }\r\n      else if (event['detail']['deltaY'] < -20){\r\n        this.showFilter = true;\r\n      }\r\n    }  \r\n  }\r\n\r\n\r\n  /**\r\n   * Utente ha richiesto un refresh dei dati\r\n   * @param event \r\n   */\r\n  doRefresh(event: any) {\r\n\r\n    if (this.selectedView == this.PageView.impegni) {\r\n\r\n      this.requestImpegni(event);\r\n\r\n    }\r\n    else if (this.selectedView == this.PageView.corsi) {\r\n\r\n      this.requestTimeCorsi(event);\r\n    }\r\n      \r\n  }\r\n\r\n  /**\r\n   * L'utente ha scelto un altra pagina\r\n   * @param value Cambio Visualizzazione del Segment\r\n   */\r\n     onChangeSegment(value)\r\n     {\r\n       //ngModel su HTML modifica la prorpieta, qui \r\n       //nel caso debba effettuare operazioni al cambio\r\n       switch (this.selectedView) {\r\n         case ViewTrainerCourse.corsi:\r\n           //Scelta Corsi\r\n           this.requestTimeCorsi();\r\n           break;\r\n         case ViewTrainerCourse.impegni:\r\n           //Scelta Pianificazioni\r\n           this.requestImpegni();\r\n           break;\r\n       \r\n         default:\r\n           break;\r\n       }\r\n     }\r\n\r\n    /**\r\n    * Cambio del valore di ricerca per l'elenco corsi\r\n    * @param value Valore selezionato\r\n    */\r\n    onChangeTimeState(value: TimeTrainerCourse) {\r\n\r\n        //Devo effettuare la richiesta per i nuovi corsi\r\n        this.requestTimeCorsi();\r\n\r\n    }\r\n\r\n  /**\r\n  * Sottoscrizione all'ascolto della lista dei corsi Trainer (Passati, presenti, futuri)\r\n  */\r\n  listenChangeListCorsi() {\r\n\r\n    this.subListenCorsi = this.startService.listCorsiTrainer\r\n                                  .subscribe(listElement => {\r\n                                          this.myListCorsi = listElement;\r\n\r\n                                          if (this.myLoadingForCorsi) {\r\n                                            this.myLoadingForCorsi.dismiss();\r\n                                          }\r\n                                  }, error => {\r\n                                    this.myListCorsi = [];\r\n                                    if (this.myLoadingForCorsi) {\r\n                                      this.myLoadingForCorsi.dismiss();\r\n                                    }\r\n                                  });\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button defaultHref=\"/home\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>Agenda Impegni</ion-title>\r\n  </ion-toolbar>\r\n\r\n  <ion-toolbar mode=\"md\">\r\n\r\n    <ion-segment \r\n          \r\n          [(ngModel)]=\"selectedView\" \r\n          (ionChange)=\"onChangeSegment($event)\" >\r\n\r\n      <ion-segment-button  \r\n                [value]=\"PageView.impegni\">\r\n        <ion-icon name=\"today-outline\"></ion-icon>\r\n        <ion-label>Impegni</ion-label>\r\n      </ion-segment-button>\r\n\r\n      <ion-segment-button \r\n      [value]=\"PageView.corsi\">\r\n        <ion-icon name=\"bar-chart-outline\"></ion-icon>\r\n        <ion-label>Valutazioni</ion-label>\r\n      </ion-segment-button>\r\n\r\n    </ion-segment>\r\n  </ion-toolbar>\r\n\r\n</ion-header>\r\n\r\n<ion-content scrollEvents (ionScroll)=\"onScroll($event)\">\r\n\r\n  <ion-refresher slot=\"fixed\" (ionRefresh)=\"doRefresh($event)\">\r\n    <ion-refresher-content></ion-refresher-content>\r\n  </ion-refresher>\r\n\r\n  <!-- PORZIONE DATE PIANIFICATE -->\r\n  <div class=\"contentExpand\" *ngIf=\"selectedView==PageView.impegni\">\r\n\r\n    <!-- PORZIONE FILTRI -->\r\n    <ion-list>\r\n      <ion-item-group >\r\n        <ion-item-divider \r\n              class=\"ion-padding-vertical\"\r\n              color=\"light\"\r\n              (click)=\"onChangeCollapseFilterPianificazioni()\">\r\n\r\n          <ion-icon slot=\"start\" [name]=\"collapsedFilterPianificazioni ? 'chevron-down-outline':'chevron-up-outline'\"></ion-icon>\r\n          <ion-label>\r\n            <h2>{{getLabelFilterImpegni()}}</h2>\r\n          </ion-label>\r\n        </ion-item-divider>\r\n\r\n        <ion-item \r\n              *ngIf = \"!collapsedFilterPianificazioni\"\r\n              lines=\"none\" \r\n              color=\"\" >\r\n          <ion-label class=\"ion-text-wrap\">\r\n            <h6>E' possibile ottenere l'elenco degli impegni giornalieri, settimanali o mensili</h6>\r\n          </ion-label>\r\n          <ion-icon slot=\"start\" name=\"information-circle-outline\"></ion-icon>\r\n        </ion-item>\r\n\r\n        <ion-item \r\n            *ngIf = \"!collapsedFilterPianificazioni\"\r\n            lines=\"none\" \r\n            color=\"\">\r\n          <ion-icon slot=\"start\" name=\"search-circle-outline\"></ion-icon>\r\n          <ion-label>Ricerca Impegni</ion-label>\r\n\r\n          <ion-select\r\n                mode=\"ios\" \r\n                (ionChange)=\"onChangePageRangeSearch($event)\"\r\n                [(ngModel)]=\"rangeSearchPianificazioni\"\r\n                interface = \"action-sheet\" \r\n                okText=\"Conferma\" \r\n                cancelText=\"Annulla\">\r\n            <ion-select-option [value]=\"PageRangeSearch.giorno\">Giornalieri</ion-select-option>\r\n            <ion-select-option [value]=\"PageRangeSearch.settimana\">Settimanali</ion-select-option>\r\n            <ion-select-option [value]=\"PageRangeSearch.mese\">Mensili</ion-select-option>\r\n          </ion-select>\r\n        </ion-item>\r\n\r\n        <ion-item lines=\"none\" color=\"\" >\r\n          <ion-icon slot=\"start\" name=\"calendar-outline\" color=\"primary\"></ion-icon>\r\n          <ion-datetime \r\n            displayFormat=\"DDDD - DD/MM/YYYY\" \r\n            [dayNames]=\"settimana\" \r\n            [(ngModel)]=\"selectedIsoDate\" \r\n            (ngModelChange)=\"onChangeFilterDateImpegni()\"\r\n          >\r\n        </ion-datetime>\r\n        <ion-icon name=\"chevron-down-outline\" color=\"primary\" slot=\"end\"></ion-icon>\r\n        </ion-item>\r\n\r\n        \r\n      </ion-item-group>          \r\n    </ion-list>\r\n\r\n    <!-- PIANIFICAZIONI PRESENTI -->\r\n    <div \r\n          *ngIf=\"myListPianificazioni && myListPianificazioni.length != 0\" \r\n          class=\"ion-no-padding\">\r\n      <ion-list           \r\n          class=\"ion-padding-vertical\">\r\n\r\n          <!-- VENGONO MOSTRATI GLI ELEMENTI DEL CALENDARIO CORSO -->\r\n          <!-- LA DATA VIENE MOSTRATA SOLO SE LA VISIONE E' DIVERSA DA GIORNO -->\r\n          <app-item-calendario \r\n            *ngFor=\"let pianificazione of myListPianificazioni\" \r\n            [params]=\"getItemParamsFromPianificazione(pianificazione)\"\r\n            [showDate]=\"rangeSearchPianificazioni != PageRangeSearch.giorno\"\r\n            (click)=\"onClickImpegno(pianificazione)\">\r\n          </app-item-calendario>\r\n        \r\n\r\n      </ion-list>\r\n    </div>\r\n  \r\n    <!-- NESSUNA PIANIFICAZIONE  -->\r\n    <div class=\"nofind-cnt\" *ngIf=\"!myListPianificazioni || myListPianificazioni.length == 0\">\r\n      <ion-label>Nessun corso trovato</ion-label>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- PORZIONI ELENCO CORSI -->\r\n  <div class=\"contentExpand\" *ngIf=\"selectedView==PageView.corsi\">\r\n    <!-- AREA FILTRO RICERCA -->\r\n    <ion-list>\r\n      <ion-item-group >\r\n        <ion-item-divider \r\n              class=\"ion-padding-vertical\"\r\n              color=\"light\"\r\n              (click)=\"onChangeCollapseFilterCorsi()\">\r\n              <ion-icon slot=\"start\" [name]=\"collapsedFilterCorsi ? 'chevron-down-outline':'chevron-up-outline'\"></ion-icon>              \r\n          <ion-label>\r\n            <h2>Corsi che risultano</h2>\r\n          </ion-label>\r\n        </ion-item-divider>\r\n\r\n        <ion-item \r\n              *ngIf = \"!collapsedFilterCorsi\"\r\n              lines=\"none\" \r\n              color=\"\" >\r\n          <ion-label class=\"ion-text-wrap\">\r\n            <h6>Elenco dei corsi svolti, in esecuzione o da eseguire prossimamente come trainer o assistente. \r\n              Al termine del corso potrai dare una valutazione finale dei partecipanti, assegnando eventualmente un nuovo livello raggiunto</h6>\r\n          </ion-label>\r\n          <ion-icon slot=\"start\" name=\"information-circle-outline\"></ion-icon>\r\n        </ion-item>        \r\n\r\n        <ion-item lines=\"none\" color=\"\" >\r\n          <ion-icon slot=\"start\" name=\"hourglass-outline\" color=\"primary\"></ion-icon>\r\n          <ion-select \r\n              mode=\"ios\" \r\n              (ionChange)=\"onChangeTimeState($event)\"\r\n              [(ngModel)]=\"selectedTimeState\"\r\n              interface=\"action-sheet\">\r\n\r\n              <ion-select-option [value]=\"TimeStateCourse.passati\">\r\n                Conclusi\r\n              </ion-select-option>  \r\n\r\n              <ion-select-option [value]=\"TimeStateCourse.attivi\">\r\n                In Esecuzione\r\n              </ion-select-option>\r\n\r\n              <ion-select-option [value]=\"TimeStateCourse.futuri\">\r\n                Futuri\r\n              </ion-select-option> \r\n\r\n          </ion-select>\r\n        \r\n        <ion-icon name=\"chevron-down-outline\" color=\"primary\" slot=\"end\"></ion-icon>\r\n        </ion-item>\r\n\r\n        \r\n      </ion-item-group>  \r\n    </ion-list>\r\n\r\n    <!-- CORSI TROVATI -->\r\n    <div class=\"ion-no-padding\" *ngIf=\"myListCorsi && myListCorsi.length != 0\">\r\n        \r\n      <!-- LISTA CORSI -->\r\n      <ion-list *ngIf=\"myListCorsi!.length !== 0\">\r\n        <ion-item button \r\n              *ngFor=\"let corso of myListCorsi\" \r\n              (click)=\"onClickCorso(corso)\" >\r\n\r\n        <!-- ICONA CORSO -->\r\n        <ion-icon \r\n            name=\"school\" \r\n            class=\"icon-school\"\r\n            slot=\"start\"\r\n            [color]=\"getColorIconCorso(corso)\">\r\n        </ion-icon>\r\n\r\n        <ion-label class=\"ion-text-wrap\">\r\n          <p>{{corso.DATAINIZIO | date : 'EEEE dd/MM/yyyy' | titlecase}}\r\n            <br/>\r\n            {{corso.DATAFINE | date : 'EEEE dd/MM/yyyy' | titlecase}}\r\n          </p>\r\n          <h4>{{corso['_DENOMINAZIONE_Sport']}} in {{corso['_DENOMINAZIONE_Location']}}</h4>\r\n          <h6>{{corso.GIORNIPREVISTI| giorniPrevisti: lingua|titlecase}} </h6>\r\n\r\n        </ion-label>   \r\n        \r\n        <!-- ORA INIZIO -->\r\n        <ion-chip \r\n            [color]=\"corso.DATAFINE > today && corso.DATAINIZIO < today ? 'success': 'danger'\">\r\n          {{corso.ORAINIZIO | date: 'HH:mm'}}\r\n          <ion-icon name=\"time-outline\"></ion-icon>\r\n        </ion-chip>\r\n        </ion-item>         \r\n      </ion-list>        \r\n\r\n    </div>\r\n  \r\n\r\n    <!-- NESSUN CORSO TROVATO  -->\r\n    <div class=\"nofind-cnt\" *ngIf=\"!myListCorsi || myListCorsi.length == 0\">\r\n      <ion-label>Nessun corso trovato</ion-label>\r\n    </div>\r\n  </div>    \r\n\r\n  \r\n  \r\n</ion-content>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, TipoCorso } from '../../models/valuelist.model';\r\n\r\n\r\n@Pipe({\r\n  name: 'tipoCorso'\r\n})\r\nexport class TipoCorsoPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {   \r\n    let label = '';\r\n\r\n    label = ValueList.decode(TipoCorso, value);\r\n    return label;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AgendaTrainerPage } from './agenda-trainer.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AgendaTrainerPage\r\n  },\r\n  {\r\n    path: ':pianificazioneCorsoId',\r\n    loadChildren: () => import('./agenda-trainer-detail/agenda-trainer-detail.module').then( m => m.AgendaTrainerDetailPageModule)\r\n  }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AgendaTrainerPageRoutingModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, StrutturaCampo } from '../../models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'strutturaCampo'\r\n})\r\nexport class StrutturaCampoPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {\r\n    let label = '';\r\n\r\n    label = ValueList.decode(StrutturaCampo, value);\r\n    return label;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ValutazioneTrainerPage } from './valutazione-trainer.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ValutazioneTrainerPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ValutazioneTrainerPageRoutingModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'labelGiorno'\r\n})\r\nexport class LabelGiornoPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {\r\n    let label = '';\r\n    switch (value) {\r\n      case 1:\r\n        label = 'domenica';\r\n        break;\r\n      case 2:\r\n        label = 'lunedi\\'';\r\n        break;\r\n      case 3:\r\n        label = 'martedi\\'';\r\n        break;\r\n      case 4:\r\n        label = 'mercoledi\\'';\r\n        break;\r\n      case 5:\r\n        label = 'giovedi\\'';\r\n        break;        \r\n      case 6:\r\n        label = 'venerdi\\'';\r\n        break;        \r\n      case 7:\r\n        label = 'sabato';\r\n        break;                \r\n    }\r\n    \r\n    \r\n    return label;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, AmbitoNews } from '../../models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'ambitoNews'\r\n})\r\nexport class AmbitoNewsPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {\r\n    let label = '';\r\n\r\n    label = ValueList.decode(AmbitoNews, value);\r\n\r\n    return label;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ClasseDocumento } from 'src/app/models/tipodocumentazione.model';\r\nimport { ValueList } from '../../models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'classeDocumento'\r\n})\r\nexport class ClasseDocumentoPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {   \r\n    let label = '';\r\n\r\n    label = ValueList.decode(ClasseDocumento, value);\r\n    return label;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, StatoPrenotazione } from '../../models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'statoPrenotazione'\r\n})\r\nexport class StatoPrenotazionePipe implements PipeTransform {\r\n\r\n  transform(value: number): string {\r\n    let label = '';\r\n\r\n    label = ValueList.decode(StatoPrenotazione, value);\r\n\r\n    return label;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ValutazioneTrainerPageRoutingModule } from './valutazione-trainer-routing.module';\n\nimport { ValutazioneTrainerPage } from './valutazione-trainer.page';\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\nimport { SharedComponentsModule } from 'src/app/shared/components/shared-components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ValutazioneTrainerPageRoutingModule,\n    PipesModule,\n    SharedComponentsModule\n  ],\n  declarations: [ValutazioneTrainerPage],\n  exports: [ValutazioneTrainerPage]\n})\nexport class ValutazioneTrainerPageModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ActionSheetController, AlertController, ModalController, ToastController } from '@ionic/angular';\nimport { Corso } from 'src/app/models/corso.model';\nimport { CorsoValutazione } from 'src/app/models/corsovalutazione.model';\nimport { CorsoValutazioneLivello } from 'src/app/models/corsovalutazionelivello.model';\nimport { Livello } from 'src/app/models/livello.model';\nimport { TipoCorso } from 'src/app/models/valuelist.model';\nimport { StartService } from 'src/app/services/start.service';\nimport {ActionSheetButton} from \"@ionic/core\";\n\n@Component({\n  selector: 'app-valutazione-trainer',\n  templateUrl: './valutazione-trainer.page.html',\n  styleUrls: ['./valutazione-trainer.page.scss'],\n})\nexport class ValutazioneTrainerPage implements OnInit {\n\n\n  @Input() set docCorsoValutazione(value: CorsoValutazione) {\n\n        this.myCorsoValutazione = value;\n        this.canUpdate = false;\n        \n        if (value) {\n          \n          /* ESSENDO UNA BOZZA POSSO MODIFICARE */\n          if (value.FLAGBOZZA) {\n            this.canUpdate = true;\n          }\n          if (value.VOTAZIONEFINALE != undefined) {\n            this.starIndex = value.VOTAZIONEFINALE;\n          }\n\n          if (value.CORSOVALUTAZIONELIVELLO) {\n            if (value.CORSOVALUTAZIONELIVELLO.length != 0) {\n              \n              //Questo è l'elenco delle valutazioni\n              this.myListValutazioni = value.CORSOVALUTAZIONELIVELLO;\n            }\n            else {\n              this.myListValutazioni = [];\n            }\n          }\n          else {\n            this.myListValutazioni = [];\n          }\n\n          //Decido se devo mostrare la lista Iscritti\n          this.setShowListaIscritti();\n        }\n\n        //Imposto l'array per la valutazione\n        this.setStars(this.starIndex, true);\n  }\n\n  @Input() set docCorso(value:Corso) {\n    this.myCorso = value;\n  }\n\n  /**\n   * Senza un elenco di Livelli non mostro nulla\n   */\n  @Input() set collLivelli(value : Livello[]) {\n    this.myListLivelli = value;\n    if (value.length == 0) {\n      //Il Segment Button che crea la vista è disattivato\n      this.showSegmentButton = false;\n    }\n  }\n\n\n  canUpdate: boolean = false;\n  cardCollapsed: boolean = true;\n\n  //Oggetti interni alla pagina da utilizzare in HTML\n  myCorsoValutazione:CorsoValutazione;\n  myCorso: Corso;\n  myListLivelli: Livello[] = [];\n  myListValutazioni: CorsoValutazioneLivello[]=[];\n\n  //Segmento visualizzato\n  selectedView: number = 1;\n\n  //Flag per la visualizzazione de Segment Button (Valutazione / Livello)\n  //Se non arrivano Livelli non ha senso mostrare\n  showSegmentButton: boolean = true;\n\n  //Mostra un Alert quando non ci sono iscritti al corso\n  showAlertNoIscritti: boolean = false;\n  \n  //Mostra la lista Iscritti con i livelli\n  showListIscritti: boolean = false;\n\n  //Stelle Valutazione\n  collStars: boolean[] = [];\n  starIndex = 0;\n\n\n  //Numero massime di star\n  maxNumberStars: number = 5;\n\n\n  constructor(private modalCtrl: ModalController,\n              private startService:StartService,\n              private actSheetController: ActionSheetController,\n              private toastController: ToastController,\n              private alertController: AlertController) {\n\n                //Imposto 0 Stelle forzando\n                this.setStars(0, true);\n               }\n\n  ngOnInit() {\n  }\n\n\n  /**\n   * Imposta il boolean per mostrare la Lista Iscritti\n   */\n  setShowListaIscritti() {\n    let value: boolean = false;\n    if (this.myListValutazioni) {\n      if (this.myListValutazioni.length != 0) {\n          value = true;\n      }\n    }\n\n    this.showListIscritti = value;\n    this.showAlertNoIscritti = !value;\n  }\n\n  /**\n   * Imposta l'array per la valutazione del corso\n   * @param chooseValue Valore \n   * @param force L'impostazione viene effettuata anche se la scheda è bloccata\n   */\n  setStars(chooseValue: number, force:boolean = false ) {\n    if (this.canUpdate || force) {\n\n      //Valore Massimo Valutazione \n      if (this.collStars.length == 0) {\n        //Devo creare l'array\n        for (let index = 0; index < this.maxNumberStars; index++) {\n          if (index + 1 <= chooseValue) {\n            this.collStars.push(true);\n          }\n          else {\n            this.collStars.push(false);\n          }\n          \n        }\n      }\n      else {\n        for (let index = 0; index < this.collStars.length; index++) {\n          if (index + 1 <= chooseValue) {\n              this.collStars[index]=true;\n          }\n          else {\n              this.collStars[index]=false;\n          }\n          \n        }\n      }\n  \n      //Valore delle stelle \n      this.starIndex = chooseValue;\n\n    }\n\n    \n  }\n\n\n  /**\n   * L'utente vuole applicare lo stesso Livello Finale a tutti\n   */\n  chooseLivelloFinale() {\n    let buttonsArray: any[]=[];\n    let singleButton: any;\n\n    if (this.canUpdate) {\n\n      if (this.myListLivelli && this.myListLivelli.length != 0) {\n  \n          //Popolo i Bottoni\n          for (const iterator of this.myListLivelli) {\n            singleButton = {\n              text: iterator.DENOMINAZIONE,\n              handler: ()=>{\n                //Applico lo stesso livello a tutti\n                this.applyLivelloFinaleForAll(iterator);\n              }\n            }\n      \n            buttonsArray.push(singleButton);\n          }\n  \n          //Pulsante Annulla\n          singleButton = {\n            text:'Annulla',\n            icon:'arrow-undo-sharp',\n            role: 'cancel'\n          }\n          buttonsArray.push(singleButton);\n          \n          this.actSheetController.create({\n            header: 'Quale livello applichi a tutti i partecipanti ?',\n            buttons: buttonsArray\n          })\n          .then(elAction => {\n            elAction.present();\n          });\n  \n      }\n\n    }\n  }\n\n  /**\n   * Applica a tutti i partecipanti lo stesso livello finale\n   * @param idLivello \n   */\n  applyLivelloFinaleForAll(myLivello: Livello) {\n    if (myLivello && this.myListValutazioni) {\n\n      this.myListValutazioni.forEach(element => {\n        element.IDLIVELLOFINALE = myLivello.ID  \n      });\n    }\n  }\n\n\n  /**\n   * Click per effettuare l'Accordion \n   */\n  onClickCollapsed() {\n    if (this.cardCollapsed) {\n      this.cardCollapsed = false;\n    }\n    else {\n      this.cardCollapsed = true;\n    }\n  }\n\n\n  /**\n   * Modificato il livello in una persona\n   * @param event \n   */\n  onChangeLivello(event:any) {\n    //Non ho bisogno di aggiornare nulla credo\n    console.log(this.myCorsoValutazione);\n  }\n\n\n  /**\n   * Conferma e salvataggio Modifiche\n   */\n  onConfirm() {\n\n    let buttonsArray: ActionSheetButton[]=[];\n    let singleButton: ActionSheetButton;\n\n    //Posso aggiornare \n    if (this.canUpdate) {\n\n      //Bottone Bozza\n      singleButton = {\n        text: 'Per modificarla in seguito', \n        icon: 'save-outline',\n        handler: () => {\n          this.confirmSavingAs(true);\n        }\n      }\n      buttonsArray.push(singleButton);\n\n      //Bottone Definitivo\n      singleButton = {\n        text: 'In modo definitivo', \n        icon: 'document-lock-outline',\n        handler: () => {\n          this.confirmSavingAs(false);\n        }\n      }\n      buttonsArray.push(singleButton);\n\n      //Pulsante Annulla\n      singleButton = {\n        text:'Annulla',\n        icon:'arrow-undo-sharp',\n        role: 'cancel'\n      }\n      buttonsArray.push(singleButton);      \n\n      this.actSheetController.create({\n        header: 'Come stai salvando la Scheda di Valutazione',\n        buttons: buttonsArray\n      })\n      .then(elAction => {\n        elAction.present();\n      });\n\n    }\n    else {\n      //Chiudo la videata normalmente\n      this.modalCtrl.dismiss();\n    }\n\n\n  }\n\n  /**\n   * \n   * @param flagBozza Salva il modalità Bozza o definitiva\n   */\n  confirmSavingAs(flagBozza:boolean) {\n    //Handler di conferma salvataggio\n\n    if (flagBozza) {\n      this.myCorsoValutazione.FLAGBOZZA = true;\n    }\n    else {\n      this.myCorsoValutazione.FLAGBOZZA = false;\n    }\n\n    this.myCorsoValutazione.IDUTENTE = this.startService.actualUtente.ID;\n    this.myCorsoValutazione.NOMINATIVO = this.startService.actualUtente.NOMINATIVO;\n    this.myCorsoValutazione.VOTAZIONEFINALE = this.starIndex;\n\n    this.startService.requestForSaveSchedaValutazioneCorso(this.myCorsoValutazione)\n                     .then(risposta => {\n\n                       if (risposta.result) {\n\n                          this.showMessage('Scheda salvata correttamente','toast');\n\n                          this.modalCtrl.dismiss();\n                       }\n                       else {\n                          //Mostro un messaggio di errore\n                          this.showMessage(risposta.message);\n                       }\n                     })\n                     .catch(error => {\n                          this.showMessage(error);\n                     })\n  }\n\n  /**\n   * Evento scatenato al cambio di Segmento\n   * Il valore selectedView è legato con ngModel\n   * @param $event \n   */\n  onChangeSegment($event) {\n\n  }\n\n  /**\n   * Chiusura Modale\n   */\n  closeModal() {\n    this.modalCtrl.dismiss();\n  }\n\n\n  /**\n   * Indica se mostrare o no il Bollino Prova\n   * @returns TRUE/FALSE\n   */\n   showFabProva():boolean {\n    let show:boolean = false; \n    if (this.myCorso && this.myCorso.TIPO == TipoCorso.prova) {\n      show = true;\n    }\n\n    return show;\n\n  }   \n\n  /**\n   * Visualizza un messaggio\n   */\n  showMessage(messaggio: string, type?:'toast'|'alert') {\n\n    if (type == 'alert') {\n\n      let alertOptions = {\n        message: messaggio,\n        buttons: ['OK']\n      }\n\n\n      this.alertController.create(alertOptions)\n            .then(elAlert => {\n                    elAlert.present();\n            });\n\n    }\n    else {\n\n      this.toastController.create({\n        message: messaggio,\n        duration: 3000\n      })\n      .then(elToast => {\n        elToast.present();\n      })\n\n    }\n  }  \n\n\n  /**\n   * Chiama il servizio passandogli l'id dell'oggetto corso, \n   * e restituisce la stringa dell'icona\n   * @param corso l'oggetto corso per cui si richiede l'icona\n   */\n   getIcon(corso:Corso)\n   {\n     return this.startService.getSportIcon(corso.IDSPORT);\n   }  \n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-button (click)=\"closeModal()\" fill=\"clear\">\n        <ion-icon name=\"arrow-back\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-title>Valutazione</ion-title>\n  </ion-toolbar>\n\n  <ion-toolbar mode=\"md\">\n    <!-- SEGMENTI PER INSERIRE IL TESTO E LE VALUTAZIONI LIVELLO -->\n    <ion-segment *ngIf=\"showSegmentButton\" [(ngModel)]=\"selectedView\" (ionChange)=\"onChangeSegment($event)\">\n\n      <ion-segment-button [value]=\"1\">\n        <ion-icon name=\"star-outline\"></ion-icon>\n        <ion-label>Valutazione</ion-label>\n      </ion-segment-button>\n\n      <ion-segment-button [value]=\"2\">\n        <ion-icon name=\"bar-chart-outline\"></ion-icon>\n        <ion-label>Livelli</ion-label>\n      </ion-segment-button>\n\n    </ion-segment>\n  </ion-toolbar>\n\n\n</ion-header>\n\n<ion-content>\n\n  <!-- PARTE SUPERIORE CON LA CARD INFORMATIVA -->\n  <ion-card>\n    <ion-card-header class=\"ion-no-padding\">\n      <!-- FAB CON LA VOCE PROVA -->\n      <ion-fab *ngIf=\"showFabProva()\" vertical=\"top\" horizontal=\"end\">\n        <ion-fab-button color=\"danger\">Prova</ion-fab-button>\n      </ion-fab>\n\n      <ion-item button=\"false\" lines=\"none\">\n        <i class=\"icon-sport\" slot=\"start\">\n          <span [innerHTML]=\"getIcon(myCorso)\"></span>\n        </i>\n        <ion-label>\n          <h1 class=\"ion-text-wrap\">{{ myCorso.DENOMINAZIONE }}</h1>\n          <h3 class=\"ion-text-wrap\">{{ myCorso['_DENOMINAZIONE_Sport'] }}</h3>\n        </ion-label>\n      </ion-item>\n\n      <ion-item button=\"false\" lines=\"none\">\n        <ion-label class=\"ion-text-wrap\" color=\"primary\">\n          <p>\n            da&nbsp;<ion-text style=\"font-weight: bold;\">{{myCorso.DATAINIZIO|date:'EEE dd/MM/yyyy' | titlecase}}\n            </ion-text>\n            a&nbsp;<ion-text style=\"font-weight: bold;\">{{myCorso.DATAFINE|date:'EEE dd/MM/yyyy' | titlecase}}\n            </ion-text>\n          </p>\n        </ion-label>\n      </ion-item>\n\n    </ion-card-header>\n\n    <ion-card-content>\n\n      <ion-list class=\"ion-no-padding\">\n\n        <ion-item-group>\n\n          <ion-item-divider color=\"light\" (click)=\"onClickCollapsed()\">\n            <ion-icon slot=\"start\" [name]=\"cardCollapsed ? 'chevron-down-outline':'chevron-up-outline'\"></ion-icon>\n            <ion-label>\n              <h2>Altre informazioni</h2>\n            </ion-label>\n          </ion-item-divider>\n        </ion-item-group>\n\n\n        <ion-item *ngIf=\"!cardCollapsed\">\n          <ion-icon name=\"time-outline\" slot=\"start\"></ion-icon>\n          <ion-label>\n            {{myCorso.ORAINIZIO|date:'HH:mm'}}\n          </ion-label>\n        </ion-item>\n\n        <ion-item *ngIf=\"!cardCollapsed\">\n          <ion-icon name=\"stats-chart-outline\" slot=\"start\"></ion-icon>\n          <ion-label>{{myCorso['_DENOMINAZIONE_Livello']?myCorso['_DENOMINAZIONE_Livello']:'Tutti i Livelli'}}\n          </ion-label>\n        </ion-item>\n\n        <ion-item *ngIf=\"!cardCollapsed\">\n          <ion-icon name=\"bookmark-outline\" slot=\"start\"></ion-icon>\n          <ion-label>{{myCorso['_DESCTOOLTIP_CategoriaEta']?myCorso['_DESCTOOLTIP_CategoriaEta']:'Per tutte le età'}}\n          </ion-label>\n        </ion-item>\n\n        <ion-item lines=\"none\" *ngIf=\"myCorso.TARGETSESSO && !cardCollapsed\">\n          <ion-icon name=\"transgender-outline\" slot=\"start\"></ion-icon>\n          <ion-label>{{myCorso.TARGETSESSO | targetSesso}}</ion-label>\n        </ion-item>\n\n      </ion-list>\n\n    </ion-card-content>\n  </ion-card>\n\n  <ion-item *ngIf=\"!canUpdate\" color=\"danger\">\n    <ion-label>Scheda Bloccata. Contattare Segreteria</ion-label>\n  </ion-item>\n\n\n\n\n\n  <!-- VISTA PAGINE PER INSERIMENTO VALUTAZIONE -->\n  <div class=\"contentExpand\" *ngIf=\"selectedView == 1\">\n\n    <ion-item lines=\"none\">\n      <ion-label position=\"stacked\">Soddisfazione Corso</ion-label>\n\n      <ion-row>\n        <ion-col *ngFor=\"let element of collStars; index as i\">\n          <ion-icon size=\"large\" (click)=\"setStars(i+1)\" [name]=\"element?'star':'star-outline'\"></ion-icon>\n        </ion-col>\n      </ion-row>\n\n    </ion-item>\n\n\n\n    <ion-item>\n      <ion-label position=\"stacked\">Considerazioni finali</ion-label>\n      <ion-textarea class=\"back-medium\" autoGrow=\"true\" [disabled]=\"!canUpdate\" [readonly]=\"!canUpdate\"\n        [(ngModel)]=\"myCorsoValutazione.TESTOVALUTAZIONE\">\n      </ion-textarea>\n    </ion-item>\n\n  </div>\n\n  <!-- VISTA PAGINE PER INSERIMENTO LIVELLI -->\n  <div class=\"contentExpand\" *ngIf=\"selectedView == 2\">\n\n    <!-- NESSUN ISCRITTO TROVATO  -->\n    <div class=\"nofind-cnt\" *ngIf=\"showAlertNoIscritti\">\n      <ion-label>Nessun iscritto al corso</ion-label>\n    </div>\n\n    <!-- LISTA ISCRITTI -->\n    <div *ngIf=\"showListIscritti\">\n      <ion-item lines=\"none\">\n        <ion-label>\n          <h6>Partecipanti</h6>\n        </ion-label>\n\n        <ion-chip \n            (click)=\"chooseLivelloFinale()\"\n            color=\"warning\"\n            slot=\"end\">\n          <ion-icon name=\"people-circle-outline\"></ion-icon>\n          <ion-label>{{myListValutazioni.length}}&nbsp;{{myListValutazioni.length != 1 ? 'Iscritti al corso':'Iscritto al corso'}}</ion-label>\n        </ion-chip>\n        \n      </ion-item>\n\n\n      <app-level-setter \n          *ngFor=\"let iscrittoVal of myListValutazioni\" \n          [readOnly]=\"!canUpdate\"\n          [listLivelli]=\"myListLivelli\"\n          [valutazione]=\"iscrittoVal\" \n          (onChoose)=\"onChangeLivello($event)\">\n      </app-level-setter>\n    </div>\n\n  </div>\n\n</ion-content>\n\n<ion-footer *ngIf=\"canUpdate\">\n  <ion-button color=\"tertiary\" expand=\"block\" (click)=\"onConfirm()\">\n    Conferma Valutazione\n  </ion-button>\n</ion-footer>","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, SettoreAttivita } from '../../models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'settoreAttivita'\r\n})\r\nexport class SettoreAttivitaPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {\r\n    let label = '';\r\n\r\n    label = ValueList.decode(SettoreAttivita, value);\r\n\r\n    return label;\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AgendaTrainerPageRoutingModule } from './agenda-trainer-routing.module';\r\n\r\nimport { AgendaTrainerPage } from './agenda-trainer.page';\r\nimport { SharedComponentsModule } from 'src/app/shared/components/shared-components.module';\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\nimport { ValutazioneTrainerPageModule } from './valutazione-trainer/valutazione-trainer.module';\r\nimport { ValutazioneTrainerPage } from './valutazione-trainer/valutazione-trainer.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    AgendaTrainerPageRoutingModule,\r\n    SharedComponentsModule,\r\n    PipesModule,\r\n    ValutazioneTrainerPageModule\r\n  ],\r\n  declarations: [AgendaTrainerPage],\r\n  exports: [ValutazioneTrainerPage]\r\n\r\n})\r\nexport class AgendaTrainerPageModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, StatoSlot} from '../../models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'statoSlot'\r\n})\r\nexport class StatoSlotPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {   \r\n    let label = '';\r\n\r\n    label = ValueList.decode(StatoSlot, value);\r\n    return label;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, TargetSesso } from '../../models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'targetSesso'\r\n})\r\nexport class TargetSessoPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {   \r\n    let label = '';\r\n\r\n    label = ValueList.decode(TargetSesso, value);\r\n    return label;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Language } from 'src/app/models/valuelist.model';\r\nimport { Settimana } from 'src/app/models/settimana.model';\r\n\r\n@Pipe({\r\n  name: 'giorniPrevisti'\r\n})\r\nexport class GiorniPrevistiPipe implements PipeTransform {\r\n\r\n  //Il Pipe serve a trasformare una sequenza di numeri che rappresentano giorni\r\n  //ad esempio 2;3;4 nel rispettivo stringa Martedi, Mercoledi, Giovedi\r\n  //I giorni previsti sono in versione C# 1 = Dom, 2 Lun, etc\r\n  //Qui li passo in versione JS che sono zero-base\r\n\r\n  transform(value: string, language: Language, ...args: any[]): string {\r\n    let strDay = '';\r\n    let arGiorni = [];\r\n    let valueReturn = '';\r\n    let smallVersion = false;\r\n    let indexDay = 0;\r\n\r\n    if (value !== undefined) {\r\n      if (value.length !== 0) {\r\n        arGiorni = value.split(';');\r\n      }\r\n    }\r\n\r\n    if (arGiorni.length !== 0) {\r\n\r\n      //Se ho più di 3 giorni chiedo la versione short\r\n      if (arGiorni.length > 3) {\r\n        smallVersion = true;\r\n      }\r\n\r\n      //Ciclo sui giorni e li decodifico\r\n      arGiorni.forEach(element => {\r\n        try {\r\n            indexDay = parseInt(element);\r\n            indexDay--;\r\n\r\n            if (smallVersion) {\r\n              strDay = Settimana.getsmallLabel(indexDay, language);\r\n            }\r\n            else {\r\n              strDay = Settimana.getLabel(indexDay, language);\r\n            }\r\n    \r\n            \r\n            if (valueReturn.length !== 0)  {\r\n              valueReturn += ', ';\r\n            }\r\n\r\n            valueReturn += strDay;\r\n\r\n        } catch (error) {\r\n          console.log('Error Parse');\r\n        }\r\n        \r\n      \r\n      });\r\n    }\r\n\r\n    return valueReturn;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, TipoMasterDocumento } from 'src/app/models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'tipomasterdocumento'\r\n})\r\nexport class TipomasterdocumentoPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {   \r\n    let label = '';\r\n\r\n    label = ValueList.decode(TipoMasterDocumento, value);\r\n\r\n    return label;\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}