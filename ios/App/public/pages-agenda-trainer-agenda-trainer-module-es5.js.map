{"version":3,"sources":["webpack:///src/app/shared/pipes/pipes.module.ts","webpack:///src/app/shared/pipes/tipo-campo.pipe.ts","webpack:///src/app/pages/agenda-trainer/agenda-trainer.page.ts","webpack:///src/app/pages/agenda-trainer/agenda-trainer.page.html","webpack:///src/app/shared/pipes/tipo-corso.pipe.ts","webpack:///src/app/pages/agenda-trainer/agenda-trainer-routing.module.ts","webpack:///src/app/shared/pipes/struttura-campo.pipe.ts","webpack:///src/app/pages/agenda-trainer/valutazione-trainer/valutazione-trainer-routing.module.ts","webpack:///src/app/shared/pipes/label-giorno.pipe.ts","webpack:///src/app/shared/pipes/ambito-news.pipe.ts","webpack:///src/app/shared/pipes/classe-documento.pipe.ts","webpack:///src/app/shared/pipes/stato-prenotazione.pipe.ts","webpack:///src/app/pages/agenda-trainer/valutazione-trainer/valutazione-trainer.module.ts","webpack:///src/app/pages/agenda-trainer/valutazione-trainer/valutazione-trainer.page.ts","webpack:///src/app/pages/agenda-trainer/valutazione-trainer/valutazione-trainer.page.html","webpack:///src/app/shared/pipes/settore-attivita.pipe.ts","webpack:///src/app/pages/agenda-trainer/agenda-trainer.module.ts","webpack:///src/app/shared/pipes/stato-slot.pipe.ts","webpack:///src/app/shared/pipes/target-sesso.pipe.ts","webpack:///src/app/shared/pipes/giorni-previsti.pipe.ts","webpack:///src/app/shared/pipes/tipomasterdocumento.pipe.ts"],"names":["PipesModule","TipoCampoPipe","value","label","decode","ViewTrainerCourse","AgendaTrainerPage","startService","navController","loadingController","toastController","alertController","modalController","lingua","italiano","utente","myListPianificazioni","selectedDate","Date","selectedIsoDate","toISOString","rangeSearchPianificazioni","giorno","PageRangeSearch","collapsedFilterPianificazioni","collapsedFilterCorsi","myListCorsi","showFilter","settimana","PageView","selectedView","impegni","TimeStateCourse","selectedTimeState","attivi","today","listenChangeListCorsi","actualUtente","isTrainer","isAssistenteTrainer","requestImpegni","navigateRoot","subListenCorsi","unsubscribe","dataInizio","dataFine","range","getStartEndDate","mese","startDate","endDate","event","rangeDate","create","message","spinner","backdropDismiss","then","elLoading","present","prepareDateForSearchImpegni","requestImpegniTrainer","ID","result","dismiss","target","complete","error","console","log","showMessage","myLoadingForCorsi","requestTimeTrainerCourse","elImpegno","navigateForward","elCorso","requestSchedaValutazioneCorso","docScheda","requestLivelliForSport","IDSPORT","collLivelli","openModaleSchedaValutazione","docCorso","component","componentProps","elModal","messaggio","type","alertOptions","buttons","elAlert","duration","elToast","pianificazioneElem","getParamsPianificazioneCorso","idSport","getSportIcon","color","formatDateISO","DATAFINE","DATAINIZIO","detail","currentY","corsi","requestTimeCorsi","listCorsiTrainer","subscribe","listElement","onChangeSegment","onScroll","doRefresh","TipoCorsoPipe","routes","path","loadChildren","m","AgendaTrainerDetailPageModule","AgendaTrainerPageRoutingModule","forChild","StrutturaCampoPipe","ValutazioneTrainerPageRoutingModule","LabelGiornoPipe","AmbitoNewsPipe","ClasseDocumentoPipe","StatoPrenotazionePipe","ValutazioneTrainerPageModule","ValutazioneTrainerPage","modalCtrl","actSheetController","canUpdate","cardCollapsed","myListLivelli","myListValutazioni","showSegmentButton","showAlertNoIscritti","showListIscritti","collStars","starIndex","maxNumberStars","setStars","myCorsoValutazione","FLAGBOZZA","VOTAZIONEFINALE","undefined","CORSOVALUTAZIONELIVELLO","length","setShowListaIscritti","myCorso","chooseValue","force","index","push","buttonsArray","singleButton","iterator","text","DENOMINAZIONE","handler","applyLivelloFinaleForAll","icon","role","header","elAction","myLivello","forEach","element","IDLIVELLOFINALE","confirmSavingAs","flagBozza","IDUTENTE","NOMINATIVO","requestForSaveSchedaValutazioneCorso","risposta","$event","show","TIPO","prova","corso","closeModal","onClickCollapsed","SettoreAttivitaPipe","AgendaTrainerPageModule","StatoSlotPipe","TargetSessoPipe","GiorniPrevistiPipe","language","strDay","arGiorni","valueReturn","smallVersion","indexDay","split","parseInt","getsmallLabel","getLabel","TipomasterdocumentoPipe"],"mappings":"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","file":"pages-agenda-trainer-agenda-trainer-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { LabelGiornoPipe } from './label-giorno.pipe';\r\nimport { StrutturaCampoPipe } from './struttura-campo.pipe';\r\nimport { TipoCampoPipe } from './tipo-campo.pipe';\r\nimport { SettoreAttivitaPipe } from './settore-attivita.pipe';\r\nimport { TipoCorsoPipe } from './tipo-corso.pipe';\r\nimport { TargetSessoPipe } from './target-sesso.pipe';\r\nimport { StatoSlotPipe } from './stato-slot.pipe';\r\nimport { StatoPrenotazionePipe } from './stato-prenotazione.pipe';\r\nimport { AmbitoNewsPipe } from './ambito-news.pipe';\r\nimport { GiorniPrevistiPipe } from './giorni-previsti.pipe';\r\nimport { ClasseDocumentoPipe } from './classe-documento.pipe';\r\nimport { TipomasterdocumentoPipe } from './tipomasterdocumento.pipe';\r\n\r\n@NgModule({\r\n    declarations: [LabelGiornoPipe, \r\n                   StrutturaCampoPipe, \r\n                   TipoCampoPipe, \r\n                   SettoreAttivitaPipe, \r\n                   TipoCorsoPipe, \r\n                   TargetSessoPipe, \r\n                   StatoSlotPipe, \r\n                   StatoPrenotazionePipe, \r\n                   AmbitoNewsPipe, \r\n                   GiorniPrevistiPipe, \r\n                   ClasseDocumentoPipe, \r\n                   TipomasterdocumentoPipe],\r\n    imports: [],\r\n    exports: [LabelGiornoPipe, \r\n              StrutturaCampoPipe, \r\n              TipoCampoPipe, \r\n              SettoreAttivitaPipe, \r\n              TipoCorsoPipe,\r\n              TargetSessoPipe,\r\n              StatoSlotPipe,\r\n              StatoPrenotazionePipe, \r\n              AmbitoNewsPipe,\r\n              GiorniPrevistiPipe,\r\n              ClasseDocumentoPipe, \r\n              TipomasterdocumentoPipe]\r\n})\r\nexport class PipesModule{}\r\n\r\n/**\r\n * Questo Modulo serve a includere tutti i Pipes definiti\r\n * Quindi per ogni nuovo pipe è necessario importarlo qui \r\n * e specificarlo in declarations ed exports\r\n * \r\n * NON INCLUDERE NESSUN MODULO IN app.module.ts\r\n * \r\n * Quando serve un pipe usare la \r\n * page.module.ts (Il file modulo della pagina dove bisogna usare il pipe)\r\n * importare il modulo Pipes.Module.ts e aggiungere in ngModel imports PipesModule\r\n * \r\n * Non serve fare riferimento diretto al pipe che si vuole usare\r\n */","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, TipoCampo } from 'src/app/models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'tipoCampo'\r\n})\r\nexport class TipoCampoPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {\r\n    let label = '';\r\n\r\n    label = ValueList.decode(TipoCampo, value);\r\n    \r\n    return label;\r\n  }\r\n\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { AlertController, LoadingController, ModalController, NavController, ToastController } from '@ionic/angular';\r\nimport { Subscription } from 'rxjs';\r\nimport { MyDateTime } from 'src/app/library/models/mydatetime.model';\r\nimport { Corso } from 'src/app/models/corso.model';\r\nimport { CorsoValutazione } from 'src/app/models/corsovalutazione.model';\r\nimport { ItemCalendario } from 'src/app/models/itemCalendario.model';\r\nimport { Livello } from 'src/app/models/livello.model';\r\nimport { PianificazioneCorso } from 'src/app/models/pianificazionecorso.model';\r\nimport { Utente } from 'src/app/models/utente.model';\r\nimport { Language, RangeSearch, TimeTrainerCourse } from 'src/app/models/valuelist.model';\r\nimport { StartService } from 'src/app/services/start.service';\r\nimport { ValutazioneTrainerPage } from './valutazione-trainer/valutazione-trainer.page';\r\n\r\n\r\nexport enum ViewTrainerCourse {\r\n  impegni = 'impegni',\r\n  corsi = 'corsi'\r\n}\r\n\r\nexport interface IRangeDate {\r\n  startDate: Date,\r\n  endDate: Date\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-agenda-trainer',\r\n  templateUrl: './agenda-trainer.page.html',\r\n  styleUrls: ['./agenda-trainer.page.scss'],\r\n})\r\nexport class AgendaTrainerPage implements OnInit,OnDestroy {\r\n  lingua=Language.italiano;  \r\n  \r\n  utente: Utente = new Utente();\r\n\r\n  //Impegni\r\n  myListPianificazioni: PianificazioneCorso[] = [];\r\n  selectedDate: Date = new Date();\r\n  selectedIsoDate: string = this.selectedDate.toISOString();\r\n\r\n  //Criteri ricerca delle pianificazioni\r\n  rangeSearchPianificazioni: RangeSearch = RangeSearch.giorno;\r\n  PageRangeSearch: typeof RangeSearch = RangeSearch;\r\n\r\n  //Il Gruppo con i Filtri degli impegni puo' essere collassato o aperto\r\n  collapsedFilterPianificazioni: boolean = true;\r\n  //Il Gruppo con i Filtri degli impegni puo' essere collassato o aperto\r\n  collapsedFilterCorsi: boolean = true;\r\n\r\n  //Elenco Corsi\r\n  myListCorsi: Corso[] = [];\r\n  subListenCorsi: Subscription;\r\n\r\n  showFilter: boolean = true;\r\n\r\n  //FIXME: C'e' gia un enum con i giorni della settimana\r\n  settimana = ['Domenica', 'Lunedì', 'Martedì', 'Mercoledì', 'Giovedì', 'Venerdì', 'Sabato']\r\n\r\n  //Viste della pagina\r\n  PageView : typeof ViewTrainerCourse = ViewTrainerCourse;\r\n  selectedView: ViewTrainerCourse = ViewTrainerCourse.impegni;\r\n\r\n  //Stati di un corso con la data odierna\r\n  TimeStateCourse: typeof TimeTrainerCourse = TimeTrainerCourse;\r\n  selectedTimeState:TimeTrainerCourse = TimeTrainerCourse.attivi;\r\n\r\n  myLoadingForCorsi: HTMLIonLoadingElement;\r\n\r\n  today = new Date();\r\n\r\n\r\n  constructor(\r\n    private startService: StartService,\r\n    private navController: NavController,\r\n    private loadingController: LoadingController,\r\n    private toastController: ToastController,\r\n    private alertController: AlertController,\r\n    private modalController: ModalController\r\n  ) { \r\n\r\n    //Ascolto i cambiamenti per la Lista Corsi\r\n    this.listenChangeListCorsi();\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    //recupero l'utente\r\n    this.utente = this.startService.actualUtente;\r\n\r\n    //se sono un trainer\r\n    if (this.utente.isTrainer || this.utente.isAssistenteTrainer){\r\n\r\n      this.requestImpegni();\r\n    }\r\n    else{\r\n      this.navController.navigateRoot('/home');\r\n    }\r\n  }\r\n\r\n\r\n  ngOnDestroy() {\r\n    if (this.subListenCorsi) {\r\n      this.subListenCorsi.unsubscribe();\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Calcola le Date Inizio e Fine per effettuare la richiesta Impegni\r\n   * @returns IRangeDate con inizio e fine\r\n   */\r\n  private prepareDateForSearchImpegni(): IRangeDate {\r\n    let dataInizio: Date;\r\n    let dataFine: Date;\r\n    let range: IRangeDate;\r\n\r\n    if (this.rangeSearchPianificazioni == RangeSearch.giorno) {\r\n      dataInizio = this.selectedDate;\r\n      dataFine = this.selectedDate;\r\n    }\r\n    else if (this.rangeSearchPianificazioni == RangeSearch.settimana) {\r\n      //Imposto da Domenica a Domenica\r\n      dataInizio = MyDateTime.getStartEndDate(this.selectedDate,'week','start');\r\n      dataFine = MyDateTime.getStartEndDate(this.selectedDate,'week','end');\r\n    }\r\n    else if (this.rangeSearchPianificazioni == RangeSearch.mese) {\r\n      //Dal 1 a fine Mese\r\n      dataInizio = MyDateTime.getStartEndDate(this.selectedDate,'month','start');\r\n      dataFine = MyDateTime.getStartEndDate(this.selectedDate,'month','end');\r\n    }\r\n\r\n    //Preparo il range e lo ritorno\r\n    range = {\r\n      startDate: dataInizio,\r\n      endDate: dataFine\r\n    }\r\n    \r\n    return range;\r\n\r\n  }\r\n\r\n  /**\r\n   * Richiedo al server le date pianificate dei corsi\r\n   */\r\n  private requestImpegni(event?: any) {\r\n\r\n    let rangeDate: IRangeDate;\r\n\r\n    //creo il loading\r\n    this.loadingController.create({\r\n      message: 'Caricamento...',\r\n      spinner: 'circular',\r\n      backdropDismiss: true\r\n    })\r\n    .then(elLoading => {\r\n\r\n      elLoading.present();\r\n\r\n      //Preparo le date da utilizzare per la ricerca\r\n      rangeDate = this.prepareDateForSearchImpegni();\r\n\r\n      //Chiudo il collapsed\r\n      this.collapsedFilterPianificazioni = true;\r\n      \r\n      //qui stò richiedendo gli impegni che riguardano l'utente in quanto \"collaboratore\"\r\n      this.startService.requestImpegniTrainer(this.utente.ID, rangeDate.startDate, rangeDate.endDate)\r\n        .then(result => {\r\n\r\n          this.myListPianificazioni = result;\r\n          \r\n          elLoading.dismiss();\r\n\r\n          if (event && event.target) {\r\n            event.target.complete();\r\n          }\r\n\r\n        })\r\n        .catch(error => {\r\n\r\n          if (event && event.target) {\r\n            event.target.complete();\r\n          }\r\n\r\n          elLoading.dismiss();\r\n          console.log(error);\r\n          this.showMessage('Errore di connessione');\r\n        });\r\n        \r\n    })\r\n  }\r\n\r\n\r\n  /**\r\n   * Richiedo al server i Corsi\r\n   * @param event \r\n   */\r\n  private requestTimeCorsi(event?: any) {\r\n\r\n        //creo il loading\r\n        this.loadingController.create({\r\n          message: 'Caricamento...',\r\n          spinner: 'circular',\r\n          backdropDismiss: true\r\n        })\r\n        .then(elLoading => {\r\n    \r\n          if (event && event.target) {\r\n            event.target.complete();\r\n          }\r\n\r\n          //Mostro il loading\r\n          this.myLoadingForCorsi = elLoading;\r\n          this.myLoadingForCorsi.present();\r\n\r\n          //Devo effettuare la richiesta per i nuovi corsi\r\n          //Sono Observable e quindi verranno popolati in autonomia\r\n          this.startService.requestTimeTrainerCourse(this.utente.ID, this.selectedTimeState);\r\n\r\n          //Il Dismiss ci pensera la funzione dell'Observable a spegnerlo\r\n          \r\n        })\r\n\r\n  }\r\n\r\n  /**\r\n   * Click su un elemento della Lista Impegni\r\n   * @param elImpegno Elemento selezionato\r\n   */\r\n   onClickImpegno(elImpegno: PianificazioneCorso){\r\n    this.navController.navigateForward('/agenda-trainer/' + elImpegno.ID);\r\n    // this.navController.navigateForward('/agenda-trainer/' + elem.ID+'-'+elem.IDCORSO);\r\n\r\n  }\r\n\r\n  /**\r\n   * Quando viene scelto un corso, si vuole accedere alla Scheda di Valutazione\r\n   * E' necessario chiedere informazioni al server\r\n   * @param elCorso \r\n   * \r\n   */\r\n  onClickCorso(elCorso: Corso) {\r\n\r\n    if (elCorso) {\r\n\r\n      this.loadingController.create({\r\n        message: 'Caricamento...',\r\n        spinner: 'circular',\r\n        backdropDismiss: true      \r\n      })\r\n      .then(elLoading => {\r\n  \r\n        elLoading.present();\r\n\r\n        //Effettuo la richiesta al server\r\n        this.startService.requestSchedaValutazioneCorso(elCorso.ID)\r\n                        .then((docScheda: CorsoValutazione) => {\r\n\r\n\r\n                          //Chiedo al server i livelli per lo sport\r\n                          this.startService.requestLivelliForSport(elCorso.IDSPORT)\r\n                                           .then((collLivelli:Livello[]) => {\r\n\r\n                                             //Chiudo il loading\r\n                                             elLoading.dismiss();\r\n\r\n                                             //Devo aprire la videata in modale passando \r\n                                             //a) Scheda di Valutazione\r\n                                             //b) Corso di riferimento\r\n                                             //c) Livelli Sportivi\r\n                                             this.openModaleSchedaValutazione(docScheda, elCorso, collLivelli);\r\n\r\n                                           })\r\n\r\n\r\n                        })\r\n                        .catch(error => {\r\n\r\n                          elLoading.dismiss();\r\n\r\n                          //Mostro un messaggio\r\n                          this.showMessage(error,'alert');\r\n                        })\r\n      })\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Apre in modale la videata ValutazioneTrainer \r\n   * passando la scheda da mostrare\r\n   * @param docScheda Scheda di Valutazione\r\n   * @param docCorso Corso di riferimento\r\n   */\r\n  openModaleSchedaValutazione(docScheda: CorsoValutazione, \r\n                              docCorso: Corso,\r\n                              collLivelli:Livello[]) {\r\n    \r\n    //Scheda di Valutazione e Corso presente\r\n    if (docScheda && docCorso) {\r\n\r\n      this.modalController.create({\r\n        component: ValutazioneTrainerPage,\r\n        componentProps: {\r\n          'docCorsoValutazione': docScheda,\r\n          'docCorso': docCorso,\r\n          'collLivelli': collLivelli\r\n        }\r\n      })\r\n      .then(elModal => {\r\n\r\n        elModal.present();\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Visualizza un messaggio\r\n   */\r\n  showMessage(messaggio: string, type?:'toast'|'alert'){\r\n\r\n    if (type == 'alert') {\r\n\r\n      let alertOptions = {\r\n        message: messaggio,\r\n        buttons: ['OK']\r\n      }\r\n\r\n\r\n      this.alertController.create(alertOptions)\r\n            .then(elAlert => {\r\n                    elAlert.present();\r\n            });\r\n\r\n    }\r\n    else {\r\n\r\n      this.toastController.create({\r\n        message: messaggio,\r\n        duration: 3000\r\n      })\r\n      .then(elToast => {\r\n        elToast.present();\r\n      })\r\n\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Nella pagina Impegni è stato modificata il filtro Data \r\n   * per la ricerca\r\n   */\r\n  onChangeFilterDateImpegni(){    \r\n    this.selectedDate = (new Date(this.selectedIsoDate)); \r\n    this.requestImpegni();\r\n  }\r\n\r\n  /**\r\n   * Nella pagina Impegni è stato premuto Item-Divider-Group\r\n   * per cambiare il collassamento dei dati\r\n   */\r\n  onChangeCollapseFilterPianificazioni() {\r\n    if (this.collapsedFilterPianificazioni) {\r\n      this.collapsedFilterPianificazioni = false;\r\n    }\r\n    else {\r\n      this.collapsedFilterPianificazioni = true;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Nella pagina Corsi è stato premuto Item-Divider-Group\r\n   * per cambiare il collassamento dei dati\r\n   */\r\n  onChangeCollapseFilterCorsi() {\r\n    if (this.collapsedFilterCorsi) {\r\n      this.collapsedFilterCorsi = false;\r\n    }\r\n    else {\r\n      this.collapsedFilterCorsi = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Pagina Impegni, è stato modificato il PageRangeSearch \r\n   * per recuperare gli impegni con un range giornaliero, settimanale, mensile\r\n   * @param event \r\n   */\r\n  onChangePageRangeSearch(event: any) {\r\n    //Devo effettuare nuovamente la ricerca degli impegni\r\n\r\n    //Recupero nuovamente gli Impegni\r\n    this.requestImpegni();\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  getItemParamsFromPianificazione(pianificazioneElem: PianificazioneCorso){\r\n    return ItemCalendario.getParamsPianificazioneCorso(pianificazioneElem);\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param idSport idSport\r\n   * @returns Ritorna l'icona sport da usare\r\n   */\r\n  getIconSport (idSport:string){\r\n    return this.startService.getSportIcon(idSport);\r\n  }\r\n\r\n  /**\r\n   * Ritorna il colore da applicare alla riga della Lista Corsi\r\n   * @param elCorso \r\n   */\r\n  getColorIconCorso(elCorso: Corso):string {\r\n    let color = 'primary';\r\n\r\n    let today: Date = new Date(MyDateTime.formatDateISO(new Date));\r\n    \r\n    if (elCorso) {\r\n      if (elCorso.DATAFINE < today) {\r\n        //Già concluso\r\n        color='danger';\r\n      }\r\n      else if (elCorso.DATAINIZIO > today) {\r\n        //Futuri\r\n        color = 'warning'\r\n      }\r\n      else {\r\n        //Attuali\r\n        color = 'success';\r\n      }\r\n    }\r\n\r\n    return color;\r\n  }\r\n\r\n\r\n  /**\r\n   * Etichetta da mostrare nella Barra di ricerca\r\n   * Pagina Impegni\r\n   * Il valore dipende dalla variabile rangeSearchPianificazioni\r\n   */\r\n  getLabelFilterImpegni(): string {\r\n    let label: string;\r\n\r\n    switch (this.rangeSearchPianificazioni) {\r\n      case RangeSearch.giorno:\r\n        label = 'Impegni giornalieri';\r\n        break;\r\n      case RangeSearch.settimana:\r\n        label = 'Impegni settimanali';\r\n        break;\r\n      case RangeSearch.mese:\r\n        label = 'Impegni mensili';\r\n        break;\r\n    \r\n      default:\r\n        break;\r\n    }\r\n\r\n    return label;\r\n  }\r\n\r\n  \r\n  onScroll(event:any){\r\n    if(event.detail.currentY < 5){\r\n      this.showFilter = true;\r\n    }\r\n    else{\r\n      if (event['detail']['deltaY'] > 20){\r\n        this.showFilter = false;\r\n      }\r\n      else if (event['detail']['deltaY'] < -20){\r\n        this.showFilter = true;\r\n      }\r\n    }  \r\n  }\r\n\r\n\r\n  /**\r\n   * Utente ha richiesto un refresh dei dati\r\n   * @param event \r\n   */\r\n  doRefresh(event: any) {\r\n\r\n    if (this.selectedView == this.PageView.impegni) {\r\n\r\n      this.requestImpegni(event);\r\n\r\n    }\r\n    else if (this.selectedView == this.PageView.corsi) {\r\n\r\n      this.requestTimeCorsi(event);\r\n    }\r\n      \r\n  }\r\n\r\n  /**\r\n   * L'utente ha scelto un altra pagina\r\n   * @param value Cambio Visualizzazione del Segment\r\n   */\r\n     onChangeSegment(value)\r\n     {\r\n       //ngModel su HTML modifica la prorpieta, qui \r\n       //nel caso debba effettuare operazioni al cambio\r\n       switch (this.selectedView) {\r\n         case ViewTrainerCourse.corsi:\r\n           //Scelta Corsi\r\n           this.requestTimeCorsi();\r\n           break;\r\n         case ViewTrainerCourse.impegni:\r\n           //Scelta Pianificazioni\r\n           this.requestImpegni();\r\n           break;\r\n       \r\n         default:\r\n           break;\r\n       }\r\n     }\r\n\r\n    /**\r\n    * Cambio del valore di ricerca per l'elenco corsi\r\n    * @param value Valore selezionato\r\n    */\r\n    onChangeTimeState(value: TimeTrainerCourse) {\r\n\r\n        //Devo effettuare la richiesta per i nuovi corsi\r\n        this.requestTimeCorsi();\r\n\r\n    }\r\n\r\n  /**\r\n  * Sottoscrizione all'ascolto della lista dei corsi Trainer (Passati, presenti, futuri)\r\n  */\r\n  listenChangeListCorsi() {\r\n\r\n    this.subListenCorsi = this.startService.listCorsiTrainer\r\n                                  .subscribe(listElement => {\r\n                                          this.myListCorsi = listElement;\r\n\r\n                                          if (this.myLoadingForCorsi) {\r\n                                            this.myLoadingForCorsi.dismiss();\r\n                                          }\r\n                                  }, error => {\r\n                                    this.myListCorsi = [];\r\n                                    if (this.myLoadingForCorsi) {\r\n                                      this.myLoadingForCorsi.dismiss();\r\n                                    }\r\n                                  });\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button defaultHref=\"/home\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>Agenda Impegni</ion-title>\r\n  </ion-toolbar>\r\n\r\n  <ion-toolbar mode=\"md\">\r\n\r\n    <ion-segment \r\n          \r\n          [(ngModel)]=\"selectedView\" \r\n          (ionChange)=\"onChangeSegment($event)\" >\r\n\r\n      <ion-segment-button  \r\n                [value]=\"PageView.impegni\">\r\n        <ion-icon name=\"today-outline\"></ion-icon>\r\n        <ion-label>Impegni</ion-label>\r\n      </ion-segment-button>\r\n\r\n      <ion-segment-button \r\n      [value]=\"PageView.corsi\">\r\n        <ion-icon name=\"bar-chart-outline\"></ion-icon>\r\n        <ion-label>Valutazioni</ion-label>\r\n      </ion-segment-button>\r\n\r\n    </ion-segment>\r\n  </ion-toolbar>\r\n\r\n</ion-header>\r\n\r\n<ion-content scrollEvents (ionScroll)=\"onScroll($event)\">\r\n\r\n  <ion-refresher slot=\"fixed\" (ionRefresh)=\"doRefresh($event)\">\r\n    <ion-refresher-content></ion-refresher-content>\r\n  </ion-refresher>\r\n\r\n  <!-- PORZIONE DATE PIANIFICATE -->\r\n  <div class=\"contentExpand\" *ngIf=\"selectedView==PageView.impegni\">\r\n\r\n    <!-- PORZIONE FILTRI -->\r\n    <ion-list>\r\n      <ion-item-group >\r\n        <ion-item-divider \r\n              class=\"ion-padding-vertical\"\r\n              color=\"light\"\r\n              (click)=\"onChangeCollapseFilterPianificazioni()\">\r\n\r\n          <ion-icon slot=\"start\" [name]=\"collapsedFilterPianificazioni ? 'chevron-down-outline':'chevron-up-outline'\"></ion-icon>\r\n          <ion-label>\r\n            <h2>{{getLabelFilterImpegni()}}</h2>\r\n          </ion-label>\r\n        </ion-item-divider>\r\n\r\n        <ion-item \r\n              *ngIf = \"!collapsedFilterPianificazioni\"\r\n              lines=\"none\" \r\n              color=\"\" >\r\n          <ion-label class=\"ion-text-wrap\">\r\n            <h6>E' possibile ottenere l'elenco degli impegni giornalieri, settimanali o mensili</h6>\r\n          </ion-label>\r\n          <ion-icon slot=\"start\" name=\"information-circle-outline\"></ion-icon>\r\n        </ion-item>\r\n\r\n        <ion-item \r\n            *ngIf = \"!collapsedFilterPianificazioni\"\r\n            lines=\"none\" \r\n            color=\"\">\r\n          <ion-icon slot=\"start\" name=\"search-circle-outline\"></ion-icon>\r\n          <ion-label>Ricerca Impegni</ion-label>\r\n\r\n          <ion-select\r\n                mode=\"ios\" \r\n                (ionChange)=\"onChangePageRangeSearch($event)\"\r\n                [(ngModel)]=\"rangeSearchPianificazioni\"\r\n                interface = \"action-sheet\" \r\n                okText=\"Conferma\" \r\n                cancelText=\"Annulla\">\r\n            <ion-select-option [value]=\"PageRangeSearch.giorno\">Giornalieri</ion-select-option>\r\n            <ion-select-option [value]=\"PageRangeSearch.settimana\">Settimanali</ion-select-option>\r\n            <ion-select-option [value]=\"PageRangeSearch.mese\">Mensili</ion-select-option>\r\n          </ion-select>\r\n        </ion-item>\r\n\r\n        <ion-item lines=\"none\" color=\"\" >\r\n          <ion-icon slot=\"start\" name=\"calendar-outline\" color=\"primary\"></ion-icon>\r\n          <ion-datetime \r\n            displayFormat=\"DDDD - DD/MM/YYYY\" \r\n            [dayNames]=\"settimana\" \r\n            [(ngModel)]=\"selectedIsoDate\" \r\n            (ngModelChange)=\"onChangeFilterDateImpegni()\"\r\n          >\r\n        </ion-datetime>\r\n        <ion-icon name=\"chevron-down-outline\" color=\"primary\" slot=\"end\"></ion-icon>\r\n        </ion-item>\r\n\r\n        \r\n      </ion-item-group>          \r\n    </ion-list>\r\n\r\n    <!-- PIANIFICAZIONI PRESENTI -->\r\n    <div \r\n          *ngIf=\"myListPianificazioni && myListPianificazioni.length != 0\" \r\n          class=\"ion-no-padding\">\r\n      <ion-list           \r\n          class=\"ion-padding-vertical\">\r\n\r\n          <!-- VENGONO MOSTRATI GLI ELEMENTI DEL CALENDARIO CORSO -->\r\n          <!-- LA DATA VIENE MOSTRATA SOLO SE LA VISIONE E' DIVERSA DA GIORNO -->\r\n          <app-item-calendario \r\n            *ngFor=\"let pianificazione of myListPianificazioni\" \r\n            [params]=\"getItemParamsFromPianificazione(pianificazione)\"\r\n            [showDate]=\"rangeSearchPianificazioni != PageRangeSearch.giorno\"\r\n            (click)=\"onClickImpegno(pianificazione)\">\r\n          </app-item-calendario>\r\n        \r\n\r\n      </ion-list>\r\n    </div>\r\n  \r\n    <!-- NESSUNA PIANIFICAZIONE  -->\r\n    <div class=\"nofind-cnt\" *ngIf=\"!myListPianificazioni || myListPianificazioni.length == 0\">\r\n      <ion-label>Nessun corso trovato</ion-label>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- PORZIONI ELENCO CORSI -->\r\n  <div class=\"contentExpand\" *ngIf=\"selectedView==PageView.corsi\">\r\n    <!-- AREA FILTRO RICERCA -->\r\n    <ion-list>\r\n      <ion-item-group >\r\n        <ion-item-divider \r\n              class=\"ion-padding-vertical\"\r\n              color=\"light\"\r\n              (click)=\"onChangeCollapseFilterCorsi()\">\r\n              <ion-icon slot=\"start\" [name]=\"collapsedFilterCorsi ? 'chevron-down-outline':'chevron-up-outline'\"></ion-icon>              \r\n          <ion-label>\r\n            <h2>Corsi che risultano</h2>\r\n          </ion-label>\r\n        </ion-item-divider>\r\n\r\n        <ion-item \r\n              *ngIf = \"!collapsedFilterCorsi\"\r\n              lines=\"none\" \r\n              color=\"\" >\r\n          <ion-label class=\"ion-text-wrap\">\r\n            <h6>Elenco dei corsi svolti, in esecuzione o da eseguire prossimamente come trainer o assistente. \r\n              Al termine del corso potrai dare una valutazione finale dei partecipanti, assegnando eventualmente un nuovo livello raggiunto</h6>\r\n          </ion-label>\r\n          <ion-icon slot=\"start\" name=\"information-circle-outline\"></ion-icon>\r\n        </ion-item>        \r\n\r\n        <ion-item lines=\"none\" color=\"\" >\r\n          <ion-icon slot=\"start\" name=\"hourglass-outline\" color=\"primary\"></ion-icon>\r\n          <ion-select \r\n              mode=\"ios\" \r\n              (ionChange)=\"onChangeTimeState($event)\"\r\n              [(ngModel)]=\"selectedTimeState\"\r\n              interface=\"action-sheet\">\r\n\r\n              <ion-select-option [value]=\"TimeStateCourse.passati\">\r\n                Conclusi\r\n              </ion-select-option>  \r\n\r\n              <ion-select-option [value]=\"TimeStateCourse.attivi\">\r\n                In Esecuzione\r\n              </ion-select-option>\r\n\r\n              <ion-select-option [value]=\"TimeStateCourse.futuri\">\r\n                Futuri\r\n              </ion-select-option> \r\n\r\n          </ion-select>\r\n        \r\n        <ion-icon name=\"chevron-down-outline\" color=\"primary\" slot=\"end\"></ion-icon>\r\n        </ion-item>\r\n\r\n        \r\n      </ion-item-group>  \r\n    </ion-list>\r\n\r\n    <!-- CORSI TROVATI -->\r\n    <div class=\"ion-no-padding\" *ngIf=\"myListCorsi && myListCorsi.length != 0\">\r\n        \r\n      <!-- LISTA CORSI -->\r\n      <ion-list *ngIf=\"myListCorsi!.length !== 0\">\r\n        <ion-item button \r\n              *ngFor=\"let corso of myListCorsi\" \r\n              (click)=\"onClickCorso(corso)\" >\r\n\r\n        <!-- ICONA CORSO -->\r\n        <ion-icon \r\n            name=\"school\" \r\n            class=\"icon-school\"\r\n            slot=\"start\"\r\n            [color]=\"getColorIconCorso(corso)\">\r\n        </ion-icon>\r\n\r\n        <ion-label class=\"ion-text-wrap\">\r\n          <p>{{corso.DATAINIZIO | date : 'EEEE dd/MM/yyyy' | titlecase}}\r\n            <br/>\r\n            {{corso.DATAFINE | date : 'EEEE dd/MM/yyyy' | titlecase}}\r\n          </p>\r\n          <h4>{{corso['_DENOMINAZIONE_Sport']}} in {{corso['_DENOMINAZIONE_Location']}}</h4>\r\n          <h6>{{corso.GIORNIPREVISTI| giorniPrevisti: lingua|titlecase}} </h6>\r\n\r\n        </ion-label>   \r\n        \r\n        <!-- ORA INIZIO -->\r\n        <ion-chip \r\n            [color]=\"corso.DATAFINE > today && corso.DATAINIZIO < today ? 'success': 'danger'\">\r\n          {{corso.ORAINIZIO | date: 'HH:mm'}}\r\n          <ion-icon name=\"time-outline\"></ion-icon>\r\n        </ion-chip>\r\n        </ion-item>         \r\n      </ion-list>        \r\n\r\n    </div>\r\n  \r\n\r\n    <!-- NESSUN CORSO TROVATO  -->\r\n    <div class=\"nofind-cnt\" *ngIf=\"!myListCorsi || myListCorsi.length == 0\">\r\n      <ion-label>Nessun corso trovato</ion-label>\r\n    </div>\r\n  </div>    \r\n\r\n  \r\n  \r\n</ion-content>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, TipoCorso } from '../../models/valuelist.model';\r\n\r\n\r\n@Pipe({\r\n  name: 'tipoCorso'\r\n})\r\nexport class TipoCorsoPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {   \r\n    let label = '';\r\n\r\n    label = ValueList.decode(TipoCorso, value);\r\n    return label;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AgendaTrainerPage } from './agenda-trainer.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AgendaTrainerPage\r\n  },\r\n  {\r\n    path: ':pianificazioneCorsoId',\r\n    loadChildren: () => import('./agenda-trainer-detail/agenda-trainer-detail.module').then( m => m.AgendaTrainerDetailPageModule)\r\n  }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AgendaTrainerPageRoutingModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, StrutturaCampo } from '../../models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'strutturaCampo'\r\n})\r\nexport class StrutturaCampoPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {\r\n    let label = '';\r\n\r\n    label = ValueList.decode(StrutturaCampo, value);\r\n    return label;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ValutazioneTrainerPage } from './valutazione-trainer.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ValutazioneTrainerPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ValutazioneTrainerPageRoutingModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'labelGiorno'\r\n})\r\nexport class LabelGiornoPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {\r\n    let label = '';\r\n    switch (value) {\r\n      case 1:\r\n        label = 'domenica';\r\n        break;\r\n      case 2:\r\n        label = 'lunedi\\'';\r\n        break;\r\n      case 3:\r\n        label = 'martedi\\'';\r\n        break;\r\n      case 4:\r\n        label = 'mercoledi\\'';\r\n        break;\r\n      case 5:\r\n        label = 'giovedi\\'';\r\n        break;        \r\n      case 6:\r\n        label = 'venerdi\\'';\r\n        break;        \r\n      case 7:\r\n        label = 'sabato';\r\n        break;                \r\n    }\r\n    \r\n    \r\n    return label;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, AmbitoNews } from '../../models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'ambitoNews'\r\n})\r\nexport class AmbitoNewsPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {\r\n    let label = '';\r\n\r\n    label = ValueList.decode(AmbitoNews, value);\r\n\r\n    return label;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ClasseDocumento } from 'src/app/models/tipodocumentazione.model';\r\nimport { ValueList } from '../../models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'classeDocumento'\r\n})\r\nexport class ClasseDocumentoPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {   \r\n    let label = '';\r\n\r\n    label = ValueList.decode(ClasseDocumento, value);\r\n    return label;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, StatoPrenotazione } from '../../models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'statoPrenotazione'\r\n})\r\nexport class StatoPrenotazionePipe implements PipeTransform {\r\n\r\n  transform(value: number): string {\r\n    let label = '';\r\n\r\n    label = ValueList.decode(StatoPrenotazione, value);\r\n\r\n    return label;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ValutazioneTrainerPageRoutingModule } from './valutazione-trainer-routing.module';\n\nimport { ValutazioneTrainerPage } from './valutazione-trainer.page';\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\nimport { SharedComponentsModule } from 'src/app/shared/components/shared-components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ValutazioneTrainerPageRoutingModule,\n    PipesModule,\n    SharedComponentsModule\n  ],\n  declarations: [ValutazioneTrainerPage],\n  exports: [ValutazioneTrainerPage]\n})\nexport class ValutazioneTrainerPageModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ActionSheetController, AlertController, ModalController, ToastController } from '@ionic/angular';\nimport { Corso } from 'src/app/models/corso.model';\nimport { CorsoValutazione } from 'src/app/models/corsovalutazione.model';\nimport { CorsoValutazioneLivello } from 'src/app/models/corsovalutazionelivello.model';\nimport { Livello } from 'src/app/models/livello.model';\nimport { TipoCorso } from 'src/app/models/valuelist.model';\nimport { StartService } from 'src/app/services/start.service';\nimport {ActionSheetButton} from \"@ionic/core\";\n\n@Component({\n  selector: 'app-valutazione-trainer',\n  templateUrl: './valutazione-trainer.page.html',\n  styleUrls: ['./valutazione-trainer.page.scss'],\n})\nexport class ValutazioneTrainerPage implements OnInit {\n\n\n  @Input() set docCorsoValutazione(value: CorsoValutazione) {\n\n        this.myCorsoValutazione = value;\n        this.canUpdate = false;\n        \n        if (value) {\n          \n          /* ESSENDO UNA BOZZA POSSO MODIFICARE */\n          if (value.FLAGBOZZA) {\n            this.canUpdate = true;\n          }\n          if (value.VOTAZIONEFINALE != undefined) {\n            this.starIndex = value.VOTAZIONEFINALE;\n          }\n\n          if (value.CORSOVALUTAZIONELIVELLO) {\n            if (value.CORSOVALUTAZIONELIVELLO.length != 0) {\n              \n              //Questo è l'elenco delle valutazioni\n              this.myListValutazioni = value.CORSOVALUTAZIONELIVELLO;\n            }\n            else {\n              this.myListValutazioni = [];\n            }\n          }\n          else {\n            this.myListValutazioni = [];\n          }\n\n          //Decido se devo mostrare la lista Iscritti\n          this.setShowListaIscritti();\n        }\n\n        //Imposto l'array per la valutazione\n        this.setStars(this.starIndex, true);\n  }\n\n  @Input() set docCorso(value:Corso) {\n    this.myCorso = value;\n  }\n\n  /**\n   * Senza un elenco di Livelli non mostro nulla\n   */\n  @Input() set collLivelli(value : Livello[]) {\n    this.myListLivelli = value;\n    if (value.length == 0) {\n      //Il Segment Button che crea la vista è disattivato\n      this.showSegmentButton = false;\n    }\n  }\n\n\n  canUpdate: boolean = false;\n  cardCollapsed: boolean = true;\n\n  //Oggetti interni alla pagina da utilizzare in HTML\n  myCorsoValutazione:CorsoValutazione;\n  myCorso: Corso;\n  myListLivelli: Livello[] = [];\n  myListValutazioni: CorsoValutazioneLivello[]=[];\n\n  //Segmento visualizzato\n  selectedView: number = 1;\n\n  //Flag per la visualizzazione de Segment Button (Valutazione / Livello)\n  //Se non arrivano Livelli non ha senso mostrare\n  showSegmentButton: boolean = true;\n\n  //Mostra un Alert quando non ci sono iscritti al corso\n  showAlertNoIscritti: boolean = false;\n  \n  //Mostra la lista Iscritti con i livelli\n  showListIscritti: boolean = false;\n\n  //Stelle Valutazione\n  collStars: boolean[] = [];\n  starIndex = 0;\n\n\n  //Numero massime di star\n  maxNumberStars: number = 5;\n\n\n  constructor(private modalCtrl: ModalController,\n              private startService:StartService,\n              private actSheetController: ActionSheetController,\n              private toastController: ToastController,\n              private alertController: AlertController) {\n\n                //Imposto 0 Stelle forzando\n                this.setStars(0, true);\n               }\n\n  ngOnInit() {\n  }\n\n\n  /**\n   * Imposta il boolean per mostrare la Lista Iscritti\n   */\n  setShowListaIscritti() {\n    let value: boolean = false;\n    if (this.myListValutazioni) {\n      if (this.myListValutazioni.length != 0) {\n          value = true;\n      }\n    }\n\n    this.showListIscritti = value;\n    this.showAlertNoIscritti = !value;\n  }\n\n  /**\n   * Imposta l'array per la valutazione del corso\n   * @param chooseValue Valore \n   * @param force L'impostazione viene effettuata anche se la scheda è bloccata\n   */\n  setStars(chooseValue: number, force:boolean = false ) {\n    if (this.canUpdate || force) {\n\n      //Valore Massimo Valutazione \n      if (this.collStars.length == 0) {\n        //Devo creare l'array\n        for (let index = 0; index < this.maxNumberStars; index++) {\n          if (index + 1 <= chooseValue) {\n            this.collStars.push(true);\n          }\n          else {\n            this.collStars.push(false);\n          }\n          \n        }\n      }\n      else {\n        for (let index = 0; index < this.collStars.length; index++) {\n          if (index + 1 <= chooseValue) {\n              this.collStars[index]=true;\n          }\n          else {\n              this.collStars[index]=false;\n          }\n          \n        }\n      }\n  \n      //Valore delle stelle \n      this.starIndex = chooseValue;\n\n    }\n\n    \n  }\n\n\n  /**\n   * L'utente vuole applicare lo stesso Livello Finale a tutti\n   */\n  chooseLivelloFinale() {\n    let buttonsArray: any[]=[];\n    let singleButton: any;\n\n    if (this.canUpdate) {\n\n      if (this.myListLivelli && this.myListLivelli.length != 0) {\n  \n          //Popolo i Bottoni\n          for (const iterator of this.myListLivelli) {\n            singleButton = {\n              text: iterator.DENOMINAZIONE,\n              handler: ()=>{\n                //Applico lo stesso livello a tutti\n                this.applyLivelloFinaleForAll(iterator);\n              }\n            }\n      \n            buttonsArray.push(singleButton);\n          }\n  \n          //Pulsante Annulla\n          singleButton = {\n            text:'Annulla',\n            icon:'arrow-undo-sharp',\n            role: 'cancel'\n          }\n          buttonsArray.push(singleButton);\n          \n          this.actSheetController.create({\n            header: 'Quale livello applichi a tutti i partecipanti ?',\n            buttons: buttonsArray\n          })\n          .then(elAction => {\n            elAction.present();\n          });\n  \n      }\n\n    }\n  }\n\n  /**\n   * Applica a tutti i partecipanti lo stesso livello finale\n   * @param idLivello \n   */\n  applyLivelloFinaleForAll(myLivello: Livello) {\n    if (myLivello && this.myListValutazioni) {\n\n      this.myListValutazioni.forEach(element => {\n        element.IDLIVELLOFINALE = myLivello.ID  \n      });\n    }\n  }\n\n\n  /**\n   * Click per effettuare l'Accordion \n   */\n  onClickCollapsed() {\n    if (this.cardCollapsed) {\n      this.cardCollapsed = false;\n    }\n    else {\n      this.cardCollapsed = true;\n    }\n  }\n\n\n  /**\n   * Modificato il livello in una persona\n   * @param event \n   */\n  onChangeLivello(event:any) {\n    //Non ho bisogno di aggiornare nulla credo\n    console.log(this.myCorsoValutazione);\n  }\n\n\n  /**\n   * Conferma e salvataggio Modifiche\n   */\n  onConfirm() {\n\n    let buttonsArray: ActionSheetButton[]=[];\n    let singleButton: ActionSheetButton;\n\n    //Posso aggiornare \n    if (this.canUpdate) {\n\n      //Bottone Bozza\n      singleButton = {\n        text: 'Per modificarla in seguito', \n        icon: 'save-outline',\n        handler: () => {\n          this.confirmSavingAs(true);\n        }\n      }\n      buttonsArray.push(singleButton);\n\n      //Bottone Definitivo\n      singleButton = {\n        text: 'In modo definitivo', \n        icon: 'document-lock-outline',\n        handler: () => {\n          this.confirmSavingAs(false);\n        }\n      }\n      buttonsArray.push(singleButton);\n\n      //Pulsante Annulla\n      singleButton = {\n        text:'Annulla',\n        icon:'arrow-undo-sharp',\n        role: 'cancel'\n      }\n      buttonsArray.push(singleButton);      \n\n      this.actSheetController.create({\n        header: 'Come stai salvando la Scheda di Valutazione',\n        buttons: buttonsArray\n      })\n      .then(elAction => {\n        elAction.present();\n      });\n\n    }\n    else {\n      //Chiudo la videata normalmente\n      this.modalCtrl.dismiss();\n    }\n\n\n  }\n\n  /**\n   * \n   * @param flagBozza Salva il modalità Bozza o definitiva\n   */\n  confirmSavingAs(flagBozza:boolean) {\n    //Handler di conferma salvataggio\n\n    if (flagBozza) {\n      this.myCorsoValutazione.FLAGBOZZA = true;\n    }\n    else {\n      this.myCorsoValutazione.FLAGBOZZA = false;\n    }\n\n    this.myCorsoValutazione.IDUTENTE = this.startService.actualUtente.ID;\n    this.myCorsoValutazione.NOMINATIVO = this.startService.actualUtente.NOMINATIVO;\n    this.myCorsoValutazione.VOTAZIONEFINALE = this.starIndex;\n\n    this.startService.requestForSaveSchedaValutazioneCorso(this.myCorsoValutazione)\n                     .then(risposta => {\n\n                       if (risposta.result) {\n\n                          this.showMessage('Scheda salvata correttamente','toast');\n\n                          this.modalCtrl.dismiss();\n                       }\n                       else {\n                          //Mostro un messaggio di errore\n                          this.showMessage(risposta.message);\n                       }\n                     })\n                     .catch(error => {\n                          this.showMessage(error);\n                     })\n  }\n\n  /**\n   * Evento scatenato al cambio di Segmento\n   * Il valore selectedView è legato con ngModel\n   * @param $event \n   */\n  onChangeSegment($event) {\n\n  }\n\n  /**\n   * Chiusura Modale\n   */\n  closeModal() {\n    this.modalCtrl.dismiss();\n  }\n\n\n  /**\n   * Indica se mostrare o no il Bollino Prova\n   * @returns TRUE/FALSE\n   */\n   showFabProva():boolean {\n    let show:boolean = false; \n    if (this.myCorso && this.myCorso.TIPO == TipoCorso.prova) {\n      show = true;\n    }\n\n    return show;\n\n  }   \n\n  /**\n   * Visualizza un messaggio\n   */\n  showMessage(messaggio: string, type?:'toast'|'alert') {\n\n    if (type == 'alert') {\n\n      let alertOptions = {\n        message: messaggio,\n        buttons: ['OK']\n      }\n\n\n      this.alertController.create(alertOptions)\n            .then(elAlert => {\n                    elAlert.present();\n            });\n\n    }\n    else {\n\n      this.toastController.create({\n        message: messaggio,\n        duration: 3000\n      })\n      .then(elToast => {\n        elToast.present();\n      })\n\n    }\n  }  \n\n\n  /**\n   * Chiama il servizio passandogli l'id dell'oggetto corso, \n   * e restituisce la stringa dell'icona\n   * @param corso l'oggetto corso per cui si richiede l'icona\n   */\n   getIcon(corso:Corso)\n   {\n     return this.startService.getSportIcon(corso.IDSPORT);\n   }  \n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-button (click)=\"closeModal()\" fill=\"clear\">\n        <ion-icon name=\"arrow-back\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-title>Valutazione</ion-title>\n  </ion-toolbar>\n\n  <ion-toolbar mode=\"md\">\n    <!-- SEGMENTI PER INSERIRE IL TESTO E LE VALUTAZIONI LIVELLO -->\n    <ion-segment *ngIf=\"showSegmentButton\" [(ngModel)]=\"selectedView\" (ionChange)=\"onChangeSegment($event)\">\n\n      <ion-segment-button [value]=\"1\">\n        <ion-icon name=\"star-outline\"></ion-icon>\n        <ion-label>Valutazione</ion-label>\n      </ion-segment-button>\n\n      <ion-segment-button [value]=\"2\">\n        <ion-icon name=\"bar-chart-outline\"></ion-icon>\n        <ion-label>Livelli</ion-label>\n      </ion-segment-button>\n\n    </ion-segment>\n  </ion-toolbar>\n\n\n</ion-header>\n\n<ion-content>\n\n  <!-- PARTE SUPERIORE CON LA CARD INFORMATIVA -->\n  <ion-card>\n    <ion-card-header class=\"ion-no-padding\">\n      <!-- FAB CON LA VOCE PROVA -->\n      <ion-fab *ngIf=\"showFabProva()\" vertical=\"top\" horizontal=\"end\">\n        <ion-fab-button color=\"danger\">Prova</ion-fab-button>\n      </ion-fab>\n\n      <ion-item button=\"false\" lines=\"none\">\n        <i class=\"icon-sport\" slot=\"start\">\n          <span [innerHTML]=\"getIcon(myCorso)\"></span>\n        </i>\n        <ion-label>\n          <h1 class=\"ion-text-wrap\">{{ myCorso.DENOMINAZIONE }}</h1>\n          <h3 class=\"ion-text-wrap\">{{ myCorso['_DENOMINAZIONE_Sport'] }}</h3>\n        </ion-label>\n      </ion-item>\n\n      <ion-item button=\"false\" lines=\"none\">\n        <ion-label class=\"ion-text-wrap\" color=\"primary\">\n          <p>\n            da&nbsp;<ion-text style=\"font-weight: bold;\">{{myCorso.DATAINIZIO|date:'EEE dd/MM/yyyy' | titlecase}}\n            </ion-text>\n            a&nbsp;<ion-text style=\"font-weight: bold;\">{{myCorso.DATAFINE|date:'EEE dd/MM/yyyy' | titlecase}}\n            </ion-text>\n          </p>\n        </ion-label>\n      </ion-item>\n\n    </ion-card-header>\n\n    <ion-card-content>\n\n      <ion-list class=\"ion-no-padding\">\n\n        <ion-item-group>\n\n          <ion-item-divider color=\"light\" (click)=\"onClickCollapsed()\">\n            <ion-icon slot=\"start\" [name]=\"cardCollapsed ? 'chevron-down-outline':'chevron-up-outline'\"></ion-icon>\n            <ion-label>\n              <h2>Altre informazioni</h2>\n            </ion-label>\n          </ion-item-divider>\n        </ion-item-group>\n\n\n        <ion-item *ngIf=\"!cardCollapsed\">\n          <ion-icon name=\"time-outline\" slot=\"start\"></ion-icon>\n          <ion-label>\n            {{myCorso.ORAINIZIO|date:'HH:mm'}}\n          </ion-label>\n        </ion-item>\n\n        <ion-item *ngIf=\"!cardCollapsed\">\n          <ion-icon name=\"stats-chart-outline\" slot=\"start\"></ion-icon>\n          <ion-label>{{myCorso['_DENOMINAZIONE_Livello']?myCorso['_DENOMINAZIONE_Livello']:'Tutti i Livelli'}}\n          </ion-label>\n        </ion-item>\n\n        <ion-item *ngIf=\"!cardCollapsed\">\n          <ion-icon name=\"bookmark-outline\" slot=\"start\"></ion-icon>\n          <ion-label>{{myCorso['_DESCTOOLTIP_CategoriaEta']?myCorso['_DESCTOOLTIP_CategoriaEta']:'Per tutte le età'}}\n          </ion-label>\n        </ion-item>\n\n        <ion-item lines=\"none\" *ngIf=\"myCorso.TARGETSESSO && !cardCollapsed\">\n          <ion-icon name=\"transgender-outline\" slot=\"start\"></ion-icon>\n          <ion-label>{{myCorso.TARGETSESSO | targetSesso}}</ion-label>\n        </ion-item>\n\n      </ion-list>\n\n    </ion-card-content>\n  </ion-card>\n\n  <ion-item *ngIf=\"!canUpdate\" color=\"danger\">\n    <ion-label>Scheda Bloccata. Contattare Segreteria</ion-label>\n  </ion-item>\n\n\n\n\n\n  <!-- VISTA PAGINE PER INSERIMENTO VALUTAZIONE -->\n  <div class=\"contentExpand\" *ngIf=\"selectedView == 1\">\n\n    <ion-item lines=\"none\">\n      <ion-label position=\"stacked\">Soddisfazione Corso</ion-label>\n\n      <ion-row>\n        <ion-col *ngFor=\"let element of collStars; index as i\">\n          <ion-icon size=\"large\" (click)=\"setStars(i+1)\" [name]=\"element?'star':'star-outline'\"></ion-icon>\n        </ion-col>\n      </ion-row>\n\n    </ion-item>\n\n\n\n    <ion-item>\n      <ion-label position=\"stacked\">Considerazioni finali</ion-label>\n      <ion-textarea class=\"back-medium\" autoGrow=\"true\" [disabled]=\"!canUpdate\" [readonly]=\"!canUpdate\"\n        [(ngModel)]=\"myCorsoValutazione.TESTOVALUTAZIONE\">\n      </ion-textarea>\n    </ion-item>\n\n  </div>\n\n  <!-- VISTA PAGINE PER INSERIMENTO LIVELLI -->\n  <div class=\"contentExpand\" *ngIf=\"selectedView == 2\">\n\n    <!-- NESSUN ISCRITTO TROVATO  -->\n    <div class=\"nofind-cnt\" *ngIf=\"showAlertNoIscritti\">\n      <ion-label>Nessun iscritto al corso</ion-label>\n    </div>\n\n    <!-- LISTA ISCRITTI -->\n    <div *ngIf=\"showListIscritti\">\n      <ion-item lines=\"none\">\n        <ion-label>\n          <h6>Partecipanti</h6>\n        </ion-label>\n\n        <ion-chip \n            (click)=\"chooseLivelloFinale()\"\n            color=\"warning\"\n            slot=\"end\">\n          <ion-icon name=\"people-circle-outline\"></ion-icon>\n          <ion-label>{{myListValutazioni.length}}&nbsp;{{myListValutazioni.length != 1 ? 'Iscritti al corso':'Iscritto al corso'}}</ion-label>\n        </ion-chip>\n        \n      </ion-item>\n\n\n      <app-level-setter \n          *ngFor=\"let iscrittoVal of myListValutazioni\" \n          [readOnly]=\"!canUpdate\"\n          [listLivelli]=\"myListLivelli\"\n          [valutazione]=\"iscrittoVal\" \n          (onChoose)=\"onChangeLivello($event)\">\n      </app-level-setter>\n    </div>\n\n  </div>\n\n</ion-content>\n\n<ion-footer *ngIf=\"canUpdate\">\n  <ion-button color=\"tertiary\" expand=\"block\" (click)=\"onConfirm()\">\n    Conferma Valutazione\n  </ion-button>\n</ion-footer>","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, SettoreAttivita } from '../../models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'settoreAttivita'\r\n})\r\nexport class SettoreAttivitaPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {\r\n    let label = '';\r\n\r\n    label = ValueList.decode(SettoreAttivita, value);\r\n\r\n    return label;\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AgendaTrainerPageRoutingModule } from './agenda-trainer-routing.module';\r\n\r\nimport { AgendaTrainerPage } from './agenda-trainer.page';\r\nimport { SharedComponentsModule } from 'src/app/shared/components/shared-components.module';\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\nimport { ValutazioneTrainerPageModule } from './valutazione-trainer/valutazione-trainer.module';\r\nimport { ValutazioneTrainerPage } from './valutazione-trainer/valutazione-trainer.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    AgendaTrainerPageRoutingModule,\r\n    SharedComponentsModule,\r\n    PipesModule,\r\n    ValutazioneTrainerPageModule\r\n  ],\r\n  declarations: [AgendaTrainerPage],\r\n  exports: [ValutazioneTrainerPage]\r\n\r\n})\r\nexport class AgendaTrainerPageModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, StatoSlot} from '../../models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'statoSlot'\r\n})\r\nexport class StatoSlotPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {   \r\n    let label = '';\r\n\r\n    label = ValueList.decode(StatoSlot, value);\r\n    return label;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, TargetSesso } from '../../models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'targetSesso'\r\n})\r\nexport class TargetSessoPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {   \r\n    let label = '';\r\n\r\n    label = ValueList.decode(TargetSesso, value);\r\n    return label;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Language } from 'src/app/models/valuelist.model';\r\nimport { Settimana } from 'src/app/models/settimana.model';\r\n\r\n@Pipe({\r\n  name: 'giorniPrevisti'\r\n})\r\nexport class GiorniPrevistiPipe implements PipeTransform {\r\n\r\n  //Il Pipe serve a trasformare una sequenza di numeri che rappresentano giorni\r\n  //ad esempio 2;3;4 nel rispettivo stringa Martedi, Mercoledi, Giovedi\r\n  //I giorni previsti sono in versione C# 1 = Dom, 2 Lun, etc\r\n  //Qui li passo in versione JS che sono zero-base\r\n\r\n  transform(value: string, language: Language, ...args: any[]): string {\r\n    let strDay = '';\r\n    let arGiorni = [];\r\n    let valueReturn = '';\r\n    let smallVersion = false;\r\n    let indexDay = 0;\r\n\r\n    if (value !== undefined) {\r\n      if (value.length !== 0) {\r\n        arGiorni = value.split(';');\r\n      }\r\n    }\r\n\r\n    if (arGiorni.length !== 0) {\r\n\r\n      //Se ho più di 3 giorni chiedo la versione short\r\n      if (arGiorni.length > 3) {\r\n        smallVersion = true;\r\n      }\r\n\r\n      //Ciclo sui giorni e li decodifico\r\n      arGiorni.forEach(element => {\r\n        try {\r\n            indexDay = parseInt(element);\r\n            indexDay--;\r\n\r\n            if (smallVersion) {\r\n              strDay = Settimana.getsmallLabel(indexDay, language);\r\n            }\r\n            else {\r\n              strDay = Settimana.getLabel(indexDay, language);\r\n            }\r\n    \r\n            \r\n            if (valueReturn.length !== 0)  {\r\n              valueReturn += ', ';\r\n            }\r\n\r\n            valueReturn += strDay;\r\n\r\n        } catch (error) {\r\n          console.log('Error Parse');\r\n        }\r\n        \r\n      \r\n      });\r\n    }\r\n\r\n    return valueReturn;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, TipoMasterDocumento } from 'src/app/models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'tipomasterdocumento'\r\n})\r\nexport class TipomasterdocumentoPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {   \r\n    let label = '';\r\n\r\n    label = ValueList.decode(TipoMasterDocumento, value);\r\n\r\n    return label;\r\n  }\r\n\r\n}\r\n"]}