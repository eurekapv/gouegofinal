{"version":3,"sources":["webpack:///src/app/pages/history/historycourse/historycourse.module.ts","webpack:///src/app/pages/history/historycourse/historycourse.page.ts","webpack:///src/app/pages/history/historycourse/historycourse.page.html","webpack:///src/app/pages/history/historycourse/historycourse-routing.module.ts"],"names":["HistorycoursePageModule","HistorycoursePage","activatedRoute","startService","loadingController","toastController","navCtr","modalController","docstructrureService","StatoPagamento","myIscrizione","myCorso","myLocation","selectedLocation","arPayments","expandProgramma","isDesktop","create","message","spinner","backdropDismiss","then","loading","present","paramMap","subscribe","route","has","idIscrizione","get","requestIscrizione","docIscrizione","requestLocation","requestCorso","docCorso","dismiss","showAlert","goBack","error","myIdIscrizione","Promise","resolve","reject","length","requestIscrizioneById","getRelDoc","loadCollection","console","log","docLocation","corso","myIdSport","IDSPORT","getSportIcon","myClass","navigateBack","component","componentProps","formModal","elModal","messaggio","duration","STATOISCRIZIONE","confermata","routes","path","HistorycoursePageRoutingModule","forChild"],"mappings":"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","file":"pages-history-historycourse-historycourse-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { HistorycoursePageRoutingModule } from './historycourse-routing.module';\r\n\r\nimport { HistorycoursePage } from './historycourse.page';\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\nimport { CalendarPage } from 'src/app/pages/location/course/detailcourse/calendar/calendar.page';\r\nimport { CalendarPageModule } from 'src/app/pages/location/course/detailcourse/calendar/calendar.module';\r\nimport { AllegatilistPageModule } from 'src/app/pages/history/historycourse/allegatilist/allegatilist.module';\r\nimport { AllegatilistPage } from './allegatilist/allegatilist.page';\r\nimport { SharedComponentsModule } from 'src/app/shared/components/shared-components.module';\r\nimport { QRCodeModule } from 'angularx-qrcode';\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IonicModule,\r\n    HistorycoursePageRoutingModule,\r\n    \r\n    PipesModule,\r\n    CalendarPageModule,\r\n    AllegatilistPageModule,\r\n    FormsModule,\r\n    SharedComponentsModule,\r\n    QRCodeModule\r\n  ],\r\n  entryComponents:[CalendarPage, AllegatilistPage],\r\n  declarations: [HistorycoursePage]\r\n})\r\nexport class HistorycoursePageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {  ActivatedRoute } from '@angular/router';\r\nimport {  LoadingController, ToastController, ModalController, NavController } from '@ionic/angular';\r\nimport { Corso } from 'src/app/models/corso.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { StartService } from 'src/app/services/start.service';\r\nimport { Location } from 'src/app/models/location.model';\r\nimport { UtenteIscrizione } from 'src/app/models/utenteiscrizione.model';\r\nimport { Utente } from 'src/app/models/utente.model';\r\nimport { StatoIscrizione, StatoPagamento } from 'src/app/models/valuelist.model'\r\nimport { CalendarPage } from 'src/app/pages/location/course/detailcourse/calendar/calendar.page';\r\n\r\nimport { AllegatilistPage } from './allegatilist/allegatilist.page';\r\nimport { DocstructureService } from 'src/app/library/services/docstructure.service';\r\nimport { AreaPaymentSetting } from 'src/app/models/areapaymentsetting.model';\r\n\r\n@Component({\r\n  selector: 'app-historycourse',\r\n  templateUrl: './historycourse.page.html',\r\n  styleUrls: ['./historycourse.page.scss'],\r\n})\r\nexport class HistorycoursePage implements OnInit {\r\n\r\n  StatoPagamento : typeof StatoPagamento=StatoPagamento\r\n  docUtente: Utente;\r\n  subDocUtente: Subscription;\r\n\r\n  myIscrizione: UtenteIscrizione = new  UtenteIscrizione(); //il documento iscrizione NON OBSERVABLE\r\n\r\n  myCorso:Corso= new Corso();\r\n\r\n  myLocation: Location= new Location();\r\n\r\n  selectedLocation: Location = new Location(); //il documento location NON OBSERVABLE \r\n\r\n  arPayments: AreaPaymentSetting[] = [];\r\n\r\n  isDesktop: boolean;\r\n\r\n  //La Label contenente il programma po' essere ristretta o allargata\r\n  expandProgramma: boolean = false;\r\n\r\n  constructor(private activatedRoute: ActivatedRoute,\r\n              private startService: StartService,\r\n              private loadingController: LoadingController,\r\n              private toastController: ToastController,\r\n              private navCtr: NavController,\r\n              private modalController: ModalController,\r\n              private docstructrureService: DocstructureService) {              }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.isDesktop = this.startService.isDesktop;\r\n\r\n    //creo lo spinner e lo presento\r\n    this.loadingController.create({\r\n      message: 'Caricamento',\r\n      spinner: 'circular',\r\n      backdropDismiss: true\r\n    }).then(loading=>{\r\n      //Mostro il loading\r\n      loading.present();\r\n\r\n      //recupero l'id dell'iscrizione\r\n      this.activatedRoute.paramMap.subscribe(route=>{\r\n        if(route.has('historyId')) {\r\n          //se ho l'id dell'iscrizione, faccio la richiesta al server\r\n          let idIscrizione = route.get('historyId');\r\n          \r\n          //Chiedo il documento della Iscrizione\r\n          this.requestIscrizione(idIscrizione)\r\n          .then(docIscrizione => {\r\n                //quando arriva la risposta, valorizzo la proprietà\r\n                this.myIscrizione = docIscrizione;\r\n                //Chiedo lo scaricamento del documento corso e location\r\n                if (this.myIscrizione) {\r\n                  \r\n                  //Richiedo la Location (senza controllare se arriva)\r\n                  this.requestLocation(this.myIscrizione);\r\n\r\n                  //Richiedo anche Corso e Corso Programma verificando l'arrivo\r\n                  this.requestCorso(this.myIscrizione)\r\n                    .then(docCorso => {\r\n                        //Chiudo il loading Controller\r\n                        this.loadingController.dismiss();\r\n                        //Corso caricato\r\n                        if (docCorso) {\r\n                          //Corso caricato con la collction CORSOPROGRAMMA\r\n                          this.myCorso = docCorso;\r\n                        }\r\n                        else {\r\n                          //Corso nullo\r\n                          this.showAlert('Corso non trovato');\r\n                          this.goBack();\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                      //Corso non recuperato\r\n                      this.showAlert(error);\r\n                      this.goBack();\r\n                    });\r\n                }\r\n                else {\r\n                  //Documento Iscrizione non recuperato\r\n                  //Chiudo il loading\r\n                  this.loadingController.dismiss();\r\n                  //Documento nullo\r\n                  this.showAlert('Iscrizione non trovata');\r\n                  //Torno alla pagina di Lista\r\n                  this.goBack();\r\n                }\r\n          })\r\n          .catch(error => {\r\n            //Errore recupero Iscrizione\r\n            //Chiudo il loading\r\n            this.loadingController.dismiss();\r\n            this.showAlert(error);\r\n            //Torno alla pagina di Lista\r\n            this.goBack();\r\n          });\r\n\r\n        }\r\n        else {\r\n          //Non trovo idIscrizione\r\n\r\n          //Chiudo il loading\r\n          loading.dismiss();\r\n          //Mostro un messaggio\r\n          this.showAlert('Nessuna Iscrizione trovata');\r\n          //Torno alla lista\r\n          this.goBack();\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Richiede al server una Iscrizione per ID\r\n   * @param myIdIscrizione idIscrizione richiesta\r\n   * @returns Promise<UtenteIscrizione>\r\n   */\r\n  requestIscrizione(myIdIscrizione:string): Promise<UtenteIscrizione> {\r\n\r\n    return new Promise<UtenteIscrizione>((resolve, reject) => {\r\n      if (myIdIscrizione && myIdIscrizione.length != 0) {\r\n        this.startService.requestIscrizioneById(myIdIscrizione)\r\n          .then(docIscrizione => {\r\n            resolve(docIscrizione);\r\n          })\r\n          .catch(error => {\r\n            reject(error);\r\n          });\r\n      }\r\n      else {\r\n        reject('Iscrizione non trovata');\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * Richiede un documento correlato del Corso e la collection CORSOPROGRAMMA\r\n   * @param docIscrizione documento della Iscrizione Corso\r\n   */\r\n  requestCorso(docIscrizione: UtenteIscrizione): Promise<Corso> {\r\n    return new Promise<Corso>((resolve, reject) => {\r\n    this.docstructrureService.getRelDoc(docIscrizione, ['IDCORSO'],1)\r\n      .then(docCorso => {\r\n      \r\n\r\n        if (docCorso) {\r\n          //Scarico la collection CORSO PROGRAMMA\r\n          this.docstructrureService.loadCollection(docCorso, 'CORSOPROGRAMMA')\r\n                  .then(() => {\r\n                    resolve( docCorso );\r\n                  })\r\n                  .catch(error => {\r\n                    reject(error);\r\n                  });\r\n        }\r\n        else {\r\n          reject('Corso non trovato');\r\n        }\r\n\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * Richiede un documento correlato della Location ed imposto this.myLocation\r\n   * @param docIscrizione documento della Iscrizione Corso\r\n   */\r\n  requestLocation(docIscrizione: UtenteIscrizione): void {\r\n    this.docstructrureService.getRelDoc(docIscrizione, ['IDLOCATION'],1)\r\n      .then(docLocation => {\r\n        this.myLocation = docLocation;\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n\r\n  /**\r\n   * chiama il servizio passandogli l'id dell'oggetto corso, e restituisce la stringa dell'icona\r\n   * @param corso l'oggetto corso per cui si richiede l'icona\r\n   */\r\n  getIcon(corso:Corso)\r\n  {\r\n    let myIdSport = '';\r\n    if (corso) {\r\n      myIdSport = corso.IDSPORT;\r\n    }\r\n    return this.startService.getSportIcon(myIdSport);\r\n  }\r\n\r\n  getClassLabelProgramma(): string {\r\n    let myClass = '';\r\n    if (this.expandProgramma) {\r\n      myClass = 'ion-text-wrap';\r\n    }\r\n\r\n    return myClass;\r\n  }\r\n\r\n  /**\r\n   * Ritorna alla pagina della lista\r\n   */\r\n  goBack() {\r\n    \r\n    this.navCtr.navigateBack(['/','historylist']);\r\n  }\r\n\r\n  /**\r\n   * Apertura del Calendario Corso in Modale\r\n   */\r\n  onClickCalendar() {\r\n    /* Apro in modale il calendario */\r\n    this.modalController\r\n    .create({\r\n      component: CalendarPage,\r\n      componentProps: {\r\n        'myCorso': this.myCorso\r\n      }\r\n    })\r\n    .then(formModal => {\r\n      formModal.present();\r\n    });\r\n\r\n  }\r\n\r\n  onClickAllegati(){\r\n    this.modalController.create({\r\n      component: AllegatilistPage,\r\n      componentProps:{\r\n        'myCorso' : this.myCorso\r\n      }\r\n    })\r\n    .then(elModal => {\r\n      elModal.present();\r\n    })\r\n  }\r\n\r\n\r\n  /**\r\n   * Click sull'item contenente il Programma di corso\r\n   */\r\n  onClickExpandCorsoProgramma() {\r\n    this.expandProgramma = !this.expandProgramma;\r\n  }\r\n\r\n  /**\r\n   * Visualizza un Toast con il mssaggio\r\n   * @param messaggio Messaggio\r\n   */\r\n  showAlert(messaggio: string)\r\n  {\r\n    this.toastController.create({\r\n      message:messaggio,\r\n      duration:2000\r\n    }).then(loading=>{\r\n      loading.present();\r\n    })\r\n  }\r\n\r\n  iscrizioneConfermata(){\r\n    return this.myIscrizione.STATOISCRIZIONE==StatoIscrizione.confermata? true: false;\r\n  }\r\n\r\n\r\n\r\n  onClickPaga()\r\n  {\r\n\r\n  }\r\n\r\n\r\n\r\n  //funzione che recupera i metodi di pagamento e li inserisce in un array\r\n  setPaymentFromArea() {\r\n    //TODO: Per impostare l'array dei pagamenti bisogna scaricare \r\n    //dal server l'Area perchè potrebbe essere diversa dall'attuale\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n","<ion-header class=\"ion-no-border\">\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button defaultHref=\"/historylist\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>{{ myCorso.TIPO | tipoCorso }}</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n\r\n<div *ngIf=\"!myIscrizione || !myCorso\" id=\"crs-spinner\">\r\n  <ion-progress-bar type=\"indeterminate\"></ion-progress-bar>\r\n</div>\r\n\r\n<div *ngIf=\"myIscrizione && myCorso\">\r\n  <div style=\"width: 100%;\" >\r\n\r\n    <!-- PORZIONE INFO QRCODE-->\r\n    <div class=\"ion-text-center div-qr\" mode=\"md\" *ngIf=\"myIscrizione.CODICEALFA\">\r\n      <h6>ID: {{myIscrizione.CODICEALFA}}</h6>\r\n      <qrcode [qrdata]=\"myIscrizione.CODICEALFA\" [allowEmptyString]=\"true\"></qrcode>\r\n      <p>\r\n        <ion-icon name=\"information-circle-outline\" color=\"primary\"></ion-icon>\r\n        Presenta il Qr-code o l'ID iscrizione all'ingresso\r\n      </p>\r\n    </div>    \r\n\r\n    <!-- PORZIONE BOTTONI CALENDARIO / ALLEGATI -->\r\n    <div class=\"ion-text-center div-btns\">\r\n      <ion-button \r\n              layout=\"icon-top\" \r\n              fill=\"clear\" \r\n              \r\n              (click)=\"onClickCalendar()\">\r\n        <ion-icon slot=\"start\" name=\"calendar-outline\"></ion-icon>\r\n        <ion-label>Calendario</ion-label>\r\n      </ion-button>\r\n\r\n\r\n      <ion-button  fill=\"clear\"  (click)=\"onClickAllegati()\">\r\n        <ion-icon slot=\"start\"name=\"document-attach-outline\"></ion-icon>\r\n        <ion-label>Allegati</ion-label>\r\n      </ion-button>\r\n\r\n    </div>\r\n\r\n    <!-- TESTI INFORMATIVI -->\r\n    <ion-list lines=\"none\">\r\n\r\n      <!-- NOME CORSO -->\r\n      <ion-item>\r\n        <ion-label class=\"ion-text-wrap\">\r\n          <h2>{{myCorso.DENOMINAZIONE}}</h2>\r\n          <p>{{myCorso['_DENOMINAZIONE_Sport']}}</p>\r\n        </ion-label>\r\n        <ion-chip color=\"primary\">\r\n          <i class=\"icon-sport\"><span [innerHTML]=\"getIcon(myCorso)\"></span></i> \r\n        </ion-chip>\r\n      </ion-item>\r\n\r\n      <!-- PROGRAMMA DEL CORSO -->\r\n      <ion-item \r\n          (click)=\"onClickExpandCorsoProgramma()\"\r\n          *ngIf=\"myCorso?.existProgrammaCorso()\">\r\n\r\n        <ion-label \r\n            [ngClass]=\"getClassLabelProgramma()\">\r\n          <span style=\"font-size:small;\" [innerHTML]=\"myCorso.getFullProgrammaHTML()\"></span>\r\n        </ion-label>\r\n\r\n      </ion-item>\r\n\r\n        <!-- GIORNATA SETTIMANA -->\r\n        <app-settimana-block\r\n          [listDays]=\"myCorso._SETTIMANA\">\r\n        </app-settimana-block>      \r\n\r\n        <!-- DATA INIZIO -->\r\n      <ion-item>\r\n        <ion-label class=\"ion-text-wrap\">\r\n          <h2>{{myCorso.DATAINIZIO| date : 'EEEE dd/LL/yyyy'|titlecase}}</h2>\r\n          <p>alle {{myCorso.ORAINIZIO | date : 'HH:mm'}} per {{myCorso.ORELEZIONE}} {{myCorso.ORELEZIONE > 1 ?'Ore':'Ora'}} </p>\r\n          <p>inizio corso</p>\r\n        </ion-label>\r\n        <ion-chip color=\"primary\">\r\n          <span>{{myCorso.NUMEROLEZIONI}}&nbsp;{{myCorso.NUMEROLEZIONI > 1 ? 'Incontri ':'Incontro '}}</span>\r\n        </ion-chip>\r\n      </ion-item>\r\n\r\n      \r\n      <!-- DATA FINE -->\r\n      <ion-item>\r\n        <ion-label class=\"ion-text-wrap\">\r\n          <h2>{{myCorso.DATAFINE| date : 'EEEE dd/LL/yyyy'|titlecase}}</h2>\r\n          <p>fine corso</p>\r\n        </ion-label>\r\n      </ion-item>      \r\n\r\n      <!-- LOCATION -->\r\n      <ion-item>\r\n        <ion-label class=\"ion-text-wrap\">\r\n          <h2>{{myLocation.DENOMINAZIONE | uppercase}}</h2>\r\n          <p>{{myLocation?.COMUNE|titlecase}}</p>\r\n          <p>{{myLocation?.INDIRIZZO|titlecase}}</p>\r\n        </ion-label>\r\n        <ion-chip color=\"primary\" *ngIf=\"myLocation.TELEFONO\">\r\n          {{myLocation.TELEFONO}}\r\n          <ion-icon name=\"call-outline\"></ion-icon>\r\n        </ion-chip>\r\n      </ion-item>\r\n\r\n      <!-- ADATTO A -->\r\n      <ion-item-group *ngIf=\"myCorso\">\r\n\r\n        <ion-item-divider color=\"light\">\r\n          <ion-label>\r\n            <h2>Rivolto a</h2>\r\n          </ion-label>\r\n        </ion-item-divider>\r\n\r\n        <ion-item>\r\n          <ion-icon \r\n              name=\"stats-chart-outline\"\r\n              slot=\"end\" \r\n              color=\"primary\"></ion-icon>\r\n        <ion-label class=\"ion-text-wrap\">{{myCorso._DESCRLIVELLOENTRATA?myCorso._DESCRLIVELLOENTRATA:'Tutti i Livelli'}}</ion-label>\r\n        </ion-item>\r\n\r\n        <ion-item>\r\n          <ion-icon \r\n              name=\"bookmark-outline\" \r\n              slot=\"end\" \r\n              color=\"primary\"></ion-icon>\r\n          <ion-label class=\"ion-text-wrap\">{{myCorso._DESCRCATEGORIEETA?myCorso._DESCRCATEGORIEETA:'Per tutte le età'}}</ion-label>\r\n        </ion-item>\r\n\r\n        <ion-item lines=\"none\">\r\n          <ion-icon \r\n            name=\"transgender-outline\" \r\n            slot=\"end\" \r\n            color=\"primary\"></ion-icon>\r\n          <ion-label class=\"ion-text-wrap\">{{myCorso.TARGETSESSO | targetSesso}}</ion-label>\r\n        </ion-item>\r\n\r\n        </ion-item-group>\r\n\r\n    </ion-list>\r\n\r\n  </div>\r\n</div>\r\n\r\n</ion-content>\r\n\r\n<!-- FOOTER CON INFO ISCRIZIONE -->\r\n\r\n<ion-footer>\r\n  <!-- <ion-button *ngIf=\"iscrizioneConfermata()\" color=\"primary\" fill=\"outline\" expand=\"block\" slot=\"icon-end\">\r\n    Iscrizione confermata dal {{myIscrizione.DATAISCRIZIONE|date:'dd/MM/yy' }}\r\n    <ion-icon name=\"thumbs-up-outline\"></ion-icon>\r\n  </ion-button>\r\n  <ion-button *ngIf=\"iscrizioneConfermata()\" color=\"primary\" fill=\"outline\" expand=\"block\" slot=\"icon-end\">\r\n    Iscrizione in prova il {{ myIscrizione.DATAISCRIZIONE|date }}\r\n    <ion-icon name=\"help-outline\"></ion-icon>\r\n  </ion-button> -->\r\n\r\n  <!-- PARTE ISCRIZIONE -->\r\n    <ion-item lines=\"full\" *ngIf=\"iscrizioneConfermata()\">\r\n      <ion-icon slot=\"start\" name=\"clipboard-outline\" color=\"primary\"></ion-icon>\r\n      <ion-label>\r\n        Iscrizione il {{myIscrizione.DATAISCRIZIONE|date:'dd/MM/yy' }}\r\n      </ion-label>\r\n      <ion-badge slot=\"end\" color=\"primary\">\r\n        Confermata\r\n        <ion-icon name=\"thumbs-up\"></ion-icon>\r\n      </ion-badge>\r\n    </ion-item>\r\n\r\n    <ion-item lines=\"full\" *ngIf=\"!iscrizioneConfermata()\">\r\n      <ion-icon slot=\"start\" name=\"clipboard-outline\" color=\"primary\"></ion-icon>\r\n      <ion-label>\r\n        Iscrizione il {{myIscrizione.DATAISCRIZIONE|date:'dd/MM/yy' }}\r\n      </ion-label>\r\n      <ion-badge slot=\"end\" color=\"light\">\r\n        In prova\r\n        <ion-icon name=\"help\"></ion-icon>\r\n      </ion-badge>\r\n    </ion-item>\r\n\r\n    <!-- PARTE PAGAMENTO -->\r\n\r\n  <ion-button  [disabled]=\"true\" color=\"primary\"  expand=\"block\">\r\n    {{myIscrizione.getCaptionStatePayment()}}\r\n  </ion-button>\r\n    \r\n</ion-footer>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HistorycoursePage } from './historycourse.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HistorycoursePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class HistorycoursePageRoutingModule {}\r\n"]}