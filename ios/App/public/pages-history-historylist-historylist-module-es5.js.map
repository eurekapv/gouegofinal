{"version":3,"sources":["webpack:///src/app/shared/pipes/pipes.module.ts","webpack:///src/app/pages/history/historylist/historylist-routing.module.ts","webpack:///src/app/shared/pipes/tipo-campo.pipe.ts","webpack:///src/app/shared/pipes/tipo-corso.pipe.ts","webpack:///src/app/shared/pipes/struttura-campo.pipe.ts","webpack:///src/app/shared/pipes/label-giorno.pipe.ts","webpack:///src/app/shared/pipes/ambito-news.pipe.ts","webpack:///src/app/shared/pipes/classe-documento.pipe.ts","webpack:///src/app/shared/pipes/stato-prenotazione.pipe.ts","webpack:///src/app/pages/history/historylist/historylist.module.ts","webpack:///src/app/shared/pipes/settore-attivita.pipe.ts","webpack:///src/app/pages/history/historylist/historylist.page.ts","webpack:///src/app/pages/history/historylist/historylist.page.html","webpack:///src/app/shared/pipes/stato-slot.pipe.ts","webpack:///src/app/shared/pipes/target-sesso.pipe.ts","webpack:///src/app/shared/pipes/giorni-previsti.pipe.ts","webpack:///src/app/shared/pipes/tipomasterdocumento.pipe.ts"],"names":["PipesModule","routes","path","component","HistorylistPageRoutingModule","forChild","TipoCampoPipe","value","label","decode","TipoCorsoPipe","StrutturaCampoPipe","LabelGiornoPipe","AmbitoNewsPipe","ClasseDocumentoPipe","StatoPrenotazionePipe","HistorylistPageModule","SettoreAttivitaPipe","HistorylistPage","navCtrl","startService","loadingCtrl","toastCtrl","docstructureService","gestureCtrl","lingua","italiano","selectedView","showTabs","today","Date","sottoscrizionePrenotazioni","sottoscrizioneIscrizioni","subDocUtente","utente","subscribe","elDocUtente","docUtente","requestPrenotazioni","ID","create","spinner","message","backdropDismiss","then","loading","present","filterUtentePrenotazioni","IDUTENTE","requestNew","list","listUtentePrenotazione","dismiss","error","console","log","showMessage","filterUtenteIscrizioni","listUtenteCorsi","subListUtentePrenotazioni","listUtentePrenotazioni","collPrenotazioni","subListUtenteIscrizioni","listUtenteIscrizioni","collIscrizioni","requestIscrizioni","selectedCorso","navigateForward","selectedPrenotazione","historyId","IDPRENOTAZIONE","event","target","complete","duration","tstMsg","detail","currentY","onClickSettings","onScroll","doRefresh","StatoSlotPipe","TargetSessoPipe","GiorniPrevistiPipe","language","strDay","arGiorni","valueReturn","smallVersion","indexDay","undefined","length","split","forEach","element","parseInt","getsmallLabel","getLabel","TipomasterdocumentoPipe"],"mappings":"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","file":"pages-history-historylist-historylist-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { LabelGiornoPipe } from './label-giorno.pipe';\r\nimport { StrutturaCampoPipe } from './struttura-campo.pipe';\r\nimport { TipoCampoPipe } from './tipo-campo.pipe';\r\nimport { SettoreAttivitaPipe } from './settore-attivita.pipe';\r\nimport { TipoCorsoPipe } from './tipo-corso.pipe';\r\nimport { TargetSessoPipe } from './target-sesso.pipe';\r\nimport { StatoSlotPipe } from './stato-slot.pipe';\r\nimport { StatoPrenotazionePipe } from './stato-prenotazione.pipe';\r\nimport { AmbitoNewsPipe } from './ambito-news.pipe';\r\nimport { GiorniPrevistiPipe } from './giorni-previsti.pipe';\r\nimport { ClasseDocumentoPipe } from './classe-documento.pipe';\r\nimport { TipomasterdocumentoPipe } from './tipomasterdocumento.pipe';\r\n\r\n@NgModule({\r\n    declarations: [LabelGiornoPipe, \r\n                   StrutturaCampoPipe, \r\n                   TipoCampoPipe, \r\n                   SettoreAttivitaPipe, \r\n                   TipoCorsoPipe, \r\n                   TargetSessoPipe, \r\n                   StatoSlotPipe, \r\n                   StatoPrenotazionePipe, \r\n                   AmbitoNewsPipe, \r\n                   GiorniPrevistiPipe, \r\n                   ClasseDocumentoPipe, \r\n                   TipomasterdocumentoPipe],\r\n    imports: [],\r\n    exports: [LabelGiornoPipe, \r\n              StrutturaCampoPipe, \r\n              TipoCampoPipe, \r\n              SettoreAttivitaPipe, \r\n              TipoCorsoPipe,\r\n              TargetSessoPipe,\r\n              StatoSlotPipe,\r\n              StatoPrenotazionePipe, \r\n              AmbitoNewsPipe,\r\n              GiorniPrevistiPipe,\r\n              ClasseDocumentoPipe, \r\n              TipomasterdocumentoPipe]\r\n})\r\nexport class PipesModule{}\r\n\r\n/**\r\n * Questo Modulo serve a includere tutti i Pipes definiti\r\n * Quindi per ogni nuovo pipe è necessario importarlo qui \r\n * e specificarlo in declarations ed exports\r\n * \r\n * NON INCLUDERE NESSUN MODULO IN app.module.ts\r\n * \r\n * Quando serve un pipe usare la \r\n * page.module.ts (Il file modulo della pagina dove bisogna usare il pipe)\r\n * importare il modulo Pipes.Module.ts e aggiungere in ngModel imports PipesModule\r\n * \r\n * Non serve fare riferimento diretto al pipe che si vuole usare\r\n */","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HistorylistPage } from './historylist.page';\r\nimport { HistorybookPage } from '../historybook/historybook.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HistorylistPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class HistorylistPageRoutingModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, TipoCampo } from 'src/app/models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'tipoCampo'\r\n})\r\nexport class TipoCampoPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {\r\n    let label = '';\r\n\r\n    label = ValueList.decode(TipoCampo, value);\r\n    \r\n    return label;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, TipoCorso } from '../../models/valuelist.model';\r\n\r\n\r\n@Pipe({\r\n  name: 'tipoCorso'\r\n})\r\nexport class TipoCorsoPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {   \r\n    let label = '';\r\n\r\n    label = ValueList.decode(TipoCorso, value);\r\n    return label;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, StrutturaCampo } from '../../models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'strutturaCampo'\r\n})\r\nexport class StrutturaCampoPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {\r\n    let label = '';\r\n\r\n    label = ValueList.decode(StrutturaCampo, value);\r\n    return label;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'labelGiorno'\r\n})\r\nexport class LabelGiornoPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {\r\n    let label = '';\r\n    switch (value) {\r\n      case 1:\r\n        label = 'domenica';\r\n        break;\r\n      case 2:\r\n        label = 'lunedi\\'';\r\n        break;\r\n      case 3:\r\n        label = 'martedi\\'';\r\n        break;\r\n      case 4:\r\n        label = 'mercoledi\\'';\r\n        break;\r\n      case 5:\r\n        label = 'giovedi\\'';\r\n        break;        \r\n      case 6:\r\n        label = 'venerdi\\'';\r\n        break;        \r\n      case 7:\r\n        label = 'sabato';\r\n        break;                \r\n    }\r\n    \r\n    \r\n    return label;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, AmbitoNews } from '../../models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'ambitoNews'\r\n})\r\nexport class AmbitoNewsPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {\r\n    let label = '';\r\n\r\n    label = ValueList.decode(AmbitoNews, value);\r\n\r\n    return label;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ClasseDocumento } from 'src/app/models/tipodocumentazione.model';\r\nimport { ValueList } from '../../models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'classeDocumento'\r\n})\r\nexport class ClasseDocumentoPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {   \r\n    let label = '';\r\n\r\n    label = ValueList.decode(ClasseDocumento, value);\r\n    return label;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, StatoPrenotazione } from '../../models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'statoPrenotazione'\r\n})\r\nexport class StatoPrenotazionePipe implements PipeTransform {\r\n\r\n  transform(value: number): string {\r\n    let label = '';\r\n\r\n    label = ValueList.decode(StatoPrenotazione, value);\r\n\r\n    return label;\r\n  }\r\n\r\n}\r\n","import { NgModule, Pipe } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { HistorylistPageRoutingModule } from './historylist-routing.module';\r\n\r\nimport { HistorylistPage } from './historylist.page';\r\n\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module'\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    HistorylistPageRoutingModule,\r\n    \r\n    PipesModule\r\n  ],\r\n  declarations: [HistorylistPage]\r\n})\r\nexport class HistorylistPageModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, SettoreAttivita } from '../../models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'settoreAttivita'\r\n})\r\nexport class SettoreAttivitaPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {\r\n    let label = '';\r\n\r\n    label = ValueList.decode(SettoreAttivita, value);\r\n\r\n    return label;\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Corso } from 'src/app/models/corso.model';\r\nimport { Language } from 'src/app/models/valuelist.model';\r\nimport { NavController, LoadingController, ToastController, Gesture, GestureController } from '@ionic/angular';\r\nimport { Utente } from 'src/app/models/utente.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { UtentePrenotazione } from 'src/app/models/utenteprenotazione.model';\r\nimport { StartService } from 'src/app/services/start.service';\r\n\r\nimport { UtenteIscrizione } from 'src/app/models/utenteiscrizione.model';\r\nimport { DocstructureService } from 'src/app/library/services/docstructure.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-historylist',\r\n  templateUrl: './historylist.page.html',\r\n  styleUrls: ['./historylist.page.scss'],\r\n})\r\nexport class HistorylistPage implements OnInit {\r\n\r\n  lingua=Language.italiano;  \r\n\r\n  docUtente: Utente;\r\n  subDocUtente: Subscription;\r\n\r\n  listUtentePrenotazione: UtentePrenotazione[];\r\n  subListUtentePrenotazioni: Subscription;\r\n\r\n  selectedView: string='prenotazioni';\r\n\r\n  listUtenteCorsi: UtenteIscrizione[];\r\n  subListUtenteIscrizioni: Subscription;\r\n\r\n  showTabs: boolean = true;\r\n\r\n\r\n  today = new Date();\r\n\r\n  constructor(\r\n    private navCtrl:NavController,\r\n    private startService:StartService,\r\n    private loadingCtrl:LoadingController,\r\n    private toastCtrl: ToastController,\r\n    private docstructureService:DocstructureService,\r\n    private gestureCtrl: GestureController\r\n  ) \r\n  { \r\n     \r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n \r\n    //Mi sottoscrivo alla ricezione Prenotazioni e Iscrizioni Corsi\r\n    //Verranno richiesti successivamente\r\n    this.sottoscrizionePrenotazioni();\r\n    this.sottoscrizioneIscrizioni()\r\n\r\n\r\n    // //Richiesta utente attuale\r\n    // this.subDocUtente = this.startService.utente\r\n    //                       .subscribe  (elDocUtente => {\r\n    //                           this.docUtente = elDocUtente;\r\n    //                           //Utente arrivato\r\n    //                           if (this.docUtente) {\r\n    //                             this.requestPrenotazioni();\r\n    //                           }\r\n\r\n    //                       });\r\n\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    //Richiesta utente attuale\r\n    this.subDocUtente = this.startService.utente\r\n                          .subscribe  (elDocUtente => {\r\n                              this.docUtente = elDocUtente;\r\n                              //Utente arrivato\r\n                              if (this.docUtente) {\r\n                                this.requestPrenotazioni();\r\n                              }\r\n\r\n                          });\r\n  }\r\n\r\n\r\n  /**\r\n   * Richiede al server le Prenotazioni\r\n   */\r\n  requestPrenotazioni() {\r\n    if (this.docUtente) {\r\n      if (this.docUtente.ID) {\r\n        this.loadingCtrl.create({\r\n          spinner: 'circular',\r\n          message: 'Caricamento',\r\n          backdropDismiss: true\r\n        })\r\n        .then(loading=>{\r\n\r\n          loading.present();\r\n\r\n          //Creo il documento di filtro\r\n          let filterUtentePrenotazioni= new UtentePrenotazione(true);\r\n          filterUtentePrenotazioni.IDUTENTE=this.docUtente.ID;\r\n\r\n          this.docstructureService.requestNew(filterUtentePrenotazioni)\r\n              .then( list =>{\r\n                      //Copia della lista\r\n                      this.listUtentePrenotazione=list;\r\n                      //Dismetto il loading\r\n                      loading.dismiss();\r\n              })\r\n              .catch(error=>{\r\n                 //Dismetto il loading \r\n                loading.dismiss();\r\n\r\n                console.log(error);\r\n                this.showMessage('Errore nel caricamento');\r\n              });\r\n\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n    /**\r\n   * Richiede al server le Iscrizioni Corso\r\n   */\r\n  requestIscrizioni() {\r\n    if (this.docUtente) {\r\n      if (this.docUtente.ID) {\r\n        this.loadingCtrl.create({\r\n          spinner: 'circular',\r\n          message: 'Caricamento',\r\n          backdropDismiss: true\r\n        }).then(loading=>{\r\n\r\n            loading.present();\r\n            //creo il documento di filtro\r\n            let filterUtenteIscrizioni= new UtenteIscrizione(true);\r\n            filterUtenteIscrizioni.IDUTENTE=this.docUtente.ID\r\n\r\n            this.docstructureService.requestNew(filterUtenteIscrizioni)\r\n                  .then(list=>{\r\n                        this.listUtenteCorsi=list;\r\n                        console.log(this.listUtenteCorsi)\r\n                        loading.dismiss();\r\n                  })\r\n                  .catch(error=>{\r\n                        loading.dismiss();\r\n                        console.log(error);\r\n                        this.showMessage('Errore nel caricamento');\r\n                  });\r\n\r\n         });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Esegue la sottoscrizione ai dati Prenotazioni\r\n   * @param idUtente Utente richiesta\r\n   */\r\n  sottoscrizionePrenotazioni() {\r\n      \r\n      this.subListUtentePrenotazioni = this.startService.listUtentePrenotazioni\r\n                                          .subscribe(collPrenotazioni => {\r\n                                              this.listUtentePrenotazione = collPrenotazioni;                                \r\n                                          }, error => {});\r\n  }\r\n\r\n    /**\r\n   * Esegue la sottoscrizione ai dati Prenotazioni\r\n   * @param idUtente Utente richiesta\r\n   */\r\n  sottoscrizioneIscrizioni() {\r\n      \r\n    this.subListUtenteIscrizioni = this.startService.listUtenteIscrizioni\r\n                                        .subscribe(collIscrizioni => {\r\n                                            this.listUtenteCorsi = collIscrizioni;                                \r\n                                        }, error => {});\r\n}\r\n\r\n  /**\r\n   * \r\n   * @param value Cambio Visualizzazione\r\n   */\r\n  onChangeSegment(value)\r\n  {\r\n    \r\n    switch (this.selectedView) {\r\n      case 'prenotazioni':\r\n        this.requestPrenotazioni();\r\n        break;\r\n      case 'corsi':\r\n        this.requestIscrizioni();\r\n        break;\r\n    \r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  /**\r\n   * E' stato cliccato un corso e si vuole visualizzare i dati di Iscrizione\r\n   * @param selectedCorso Corso Selezionato\r\n   */\r\n  onClickCorso(selectedCorso: Corso)\r\n  {\r\n    this.navCtrl.navigateForward(['/','historylist','course',selectedCorso.ID])\r\n\r\n  }\r\n\r\n  /**\r\n   * E' stata selezionata una prenotazione e si vuole la scheda di conferma\r\n   * @param selectedPrenotazione Prenotazione\r\n   */\r\n  onClickPrenotazione(selectedPrenotazione:UtentePrenotazione)\r\n  {\r\n    //Concateno IDPrenotazione con IDPianificazione\r\n    let historyId = selectedPrenotazione.IDPRENOTAZIONE + '-' + selectedPrenotazione.ID;\r\n\r\n    this.navCtrl.navigateForward(['/','historylist','booking',historyId])\r\n  }\r\n\r\n  //Richiesta di Refresh\r\n  doRefresh(event) {\r\n\r\n    if(this.docUtente&&this.docUtente.ID)\r\n    switch (this.selectedView) {\r\n      case 'prenotazioni':\r\n\r\n        let filterUtentePrenotazioni = new UtentePrenotazione(true);\r\n        filterUtentePrenotazioni.IDUTENTE=this.docUtente.ID\r\n\r\n\r\n        this.docstructureService.requestNew(filterUtentePrenotazioni)\r\n              .then(list=>{\r\n                      this.listUtentePrenotazione=list;\r\n                      //Sparisce il pullToRefresh Image\r\n                      event.target.complete();\r\n              })\r\n              .catch(error=>{\r\n                      //Sparisce il pullToRefresh Image\r\n                      event.target.complete();\r\n\r\n                      console.log(error);\r\n                      this.showMessage('Errore nel caricamento');\r\n              });\r\n        break;\r\n\r\n      case 'corsi':\r\n        //Richiedo le Iscrizioni\r\n        let filterUtenteIscrizioni= new UtenteIscrizione(true);\r\n        filterUtenteIscrizioni.IDUTENTE=this.docUtente.ID\r\n\r\n        this.docstructureService.requestNew(filterUtenteIscrizioni)\r\n              .then(list=>{\r\n                  \r\n                      this.listUtenteCorsi=list;\r\n                      //Sparisce il pullToRefresh Image\r\n                      event.target.complete();\r\n              })\r\n              .catch(error=>{\r\n\r\n                      //Sparisce il pullToRefresh Image\r\n                      event.target.complete();\r\n                      console.log(error);\r\n                      this.showMessage('Errore nel caricamento');\r\n              });\r\n    \r\n      default:\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * Mostra un messaggio con ToastController\r\n   * @param message Messaggio da mostrare\r\n   */\r\n  showMessage(message: string) {\r\n\r\n    //Creo un messaggio\r\n    this.toastCtrl.create({\r\n      message: message,\r\n      duration: 3000\r\n    })\r\n    .then(tstMsg => {\r\n      tstMsg.present();\r\n    });\r\n\r\n  }\r\n\r\n  onClickSettings(){\r\n    this.navCtrl.navigateForward('/account');\r\n  }\r\n\r\n\r\n  onScroll(event:any){\r\n    if(event.detail.currentY < 5){\r\n      this.showTabs = true;\r\n    }\r\n    else{\r\n      if (event['detail']['deltaY'] > 20){\r\n        this.showTabs = false;\r\n      }\r\n      else if (event['detail']['deltaY'] < -20){\r\n        this.showTabs = true;\r\n      }\r\n    }  \r\n  }\r\n}\r\n"," <ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button defaultHref=\"/\"></ion-back-button>\r\n    </ion-buttons>\r\n\r\n    <!-- <ion-title *ngIf=\"selectedView=='corsi'\">I miei corsi</ion-title>\r\n    <ion-title *ngIf=\"selectedView=='prenotazioni'\">Le mie prenotazioni</ion-title> -->\r\n\r\n    <ion-title>Attivit&agrave;</ion-title>\r\n    <ion-buttons slot=\"primary\">\r\n      <ion-button (click)=\"onClickSettings()\" >\r\n        <ion-icon name=\"person-circle-outline\">\r\n        </ion-icon>\r\n      </ion-button>\r\n    </ion-buttons>\r\n\r\n  </ion-toolbar>\r\n\r\n  <ion-toolbar *ngIf=\"showTabs\" mode=\"md\">\r\n\r\n    <ion-segment \r\n          \r\n          [(ngModel)]=\"selectedView\" \r\n          value=\"prenotazioni\"\r\n          (ionChange)=\"onChangeSegment($event)\" >\r\n\r\n      <ion-segment-button  \r\n                value=\"prenotazioni\">\r\n\r\n        <ion-icon name=\"calendar-outline\"></ion-icon>\r\n        <ion-label>Prenotazioni</ion-label>\r\n      </ion-segment-button>\r\n\r\n      <ion-segment-button \r\n            value=\"corsi\">\r\n        <ion-icon name=\"school-outline\"></ion-icon>\r\n        <ion-label>Corsi</ion-label>\r\n        \r\n      </ion-segment-button>\r\n\r\n    </ion-segment>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n\r\n<ion-content id=\"content\" scrollEvents (ionScroll)=\"onScroll($event)\">\r\n  <ion-refresher slot=\"fixed\" (ionRefresh)=\"doRefresh($event)\">\r\n    <ion-refresher-content></ion-refresher-content>\r\n  </ion-refresher>\r\n\r\n\r\n\r\n  <!-- PARTE CORSI -->\r\n  <div class=\"contentExpand\" *ngIf=\"selectedView=='corsi'\">\r\n\r\n      <!-- NESSUN CORSO-->\r\n      <div class=\"nofind-cnt\" *ngIf=\"listUtenteCorsi!.length === 0\">\r\n        <ion-label>Nessuna Iscrizione Corso</ion-label>\r\n        <ion-label>trovata</ion-label>\r\n      </div>\r\n\r\n      <!-- LISTA CORSI -->\r\n        <ion-list *ngIf=\"listUtenteCorsi!.length !== 0\">\r\n          <ion-item button \r\n                *ngFor=\"let corso of listUtenteCorsi\" \r\n                (click)=\"onClickCorso(corso)\" >\r\n\r\n          <!-- ICONA CORSO -->\r\n          <ion-icon \r\n              name=\"school\" \r\n              class=\"icon-school\"\r\n              slot=\"start\"\r\n              [color]=\"corso.DATAFINE > today && corso.DATAINIZIO < today ? 'success': 'danger'\">\r\n          </ion-icon>\r\n\r\n          <ion-label class=\"ion-text-wrap\">\r\n            <p>{{corso.DATAINIZIO | date : 'EEEE dd/MM/yyyy' | titlecase}}\r\n              <br/>\r\n              {{corso.DATAFINE | date : 'EEEE dd/MM/yyyy' | titlecase}}\r\n            </p>\r\n            <h1>{{corso.DENOMINAZIONESPORT}} in {{corso.DENOMINAZIONELOCATION}}</h1>\r\n            <h3>{{corso.GIORNIPREVISTI|giorniPrevisti: lingua|titlecase}} </h3>\r\n\r\n          </ion-label>   \r\n          \r\n          <!-- ORA INIZIO -->\r\n          <ion-chip \r\n              [color]=\"corso.DATAFINE > today && corso.DATAINIZIO < today ? 'success': 'danger'\">\r\n            {{corso.ORAINIZIO | date: 'HH:mm'}}\r\n            <ion-icon name=\"time-outline\"></ion-icon>\r\n          </ion-chip>\r\n          </ion-item>         \r\n        </ion-list>     \r\n  </div>\r\n\r\n\r\n\r\n\r\n  <!-- PARTE PRENOTAZIONI -->\r\n  <div class=\"contentExpand\" *ngIf=\"selectedView=='prenotazioni'\">\r\n\r\n      <!-- NESSUNA PRENOTAZIONE-->\r\n      <div class=\"nofind-cnt\" *ngIf=\"listUtentePrenotazione!.length === 0\">\r\n        <ion-label>Nessuna Prenotazione Campi</ion-label>\r\n        <ion-label>trovata</ion-label>\r\n      </div>\r\n\r\n      <!-- Lista prenotazioni -->\r\n      <ion-list *ngIf=\"listUtentePrenotazione!.length !== 0\">\r\n        <ion-item button \r\n                *ngFor=\"let prenotazione of listUtentePrenotazione\" \r\n                (click)=\"onClickPrenotazione(prenotazione)\">\r\n\r\n          <ion-icon \r\n              class=\"icon-prenotazioni\"\r\n              name=\"calendar\" \r\n              slot=\"start\" \r\n              [color]=\"prenotazione.DATAORAFINE < today ? 'danger': 'success'\">\r\n\r\n          </ion-icon>\r\n          \r\n\r\n          <ion-label>\r\n            <p>{{prenotazione.DATAORAINIZIO | date : 'dd/MM/yyyy'}}</p>\r\n            <h1>{{prenotazione.DATAORAINIZIO | date: 'EEEE'|titlecase}} ore {{prenotazione.DATAORAINIZIO | date: 'HH:mm'}}</h1>\r\n            <h3>{{prenotazione.COMUNELOCATION|titlecase}} \r\n              <span>{{( (prenotazione.COMUNELOCATION && prenotazione.INDIRIZZOLOCATION) ? ', ':'')}}</span> \r\n              <span>{{prenotazione.INDIRIZZOLOCATION|titlecase}}</span>\r\n            </h3> <!--anche qui manca decodifica centro sportivo-->\r\n\r\n          </ion-label>\r\n          <ion-chip [color]=\"prenotazione.DATAORAFINE < today ? 'danger': 'success'\">\r\n            {{prenotazione.DURATAORE > 1 ? prenotazione.DURATAORE : prenotazione.DURATAORE*60}} {{prenotazione.DURATAORE>1? 'Ore' : 'Min.'}}\r\n          </ion-chip>\r\n        </ion-item>\r\n      </ion-list>\r\n\r\n  </div>\r\n</ion-content>\r\n<ion-footer>\r\n  \r\n</ion-footer>","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, StatoSlot} from '../../models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'statoSlot'\r\n})\r\nexport class StatoSlotPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {   \r\n    let label = '';\r\n\r\n    label = ValueList.decode(StatoSlot, value);\r\n    return label;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, TargetSesso } from '../../models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'targetSesso'\r\n})\r\nexport class TargetSessoPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {   \r\n    let label = '';\r\n\r\n    label = ValueList.decode(TargetSesso, value);\r\n    return label;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Language } from 'src/app/models/valuelist.model';\r\nimport { Settimana } from 'src/app/models/settimana.model';\r\n\r\n@Pipe({\r\n  name: 'giorniPrevisti'\r\n})\r\nexport class GiorniPrevistiPipe implements PipeTransform {\r\n\r\n  //Il Pipe serve a trasformare una sequenza di numeri che rappresentano giorni\r\n  //ad esempio 2;3;4 nel rispettivo stringa Martedi, Mercoledi, Giovedi\r\n  //I giorni previsti sono in versione C# 1 = Dom, 2 Lun, etc\r\n  //Qui li passo in versione JS che sono zero-base\r\n\r\n  transform(value: string, language: Language, ...args: any[]): string {\r\n    let strDay = '';\r\n    let arGiorni = [];\r\n    let valueReturn = '';\r\n    let smallVersion = false;\r\n    let indexDay = 0;\r\n\r\n    if (value !== undefined) {\r\n      if (value.length !== 0) {\r\n        arGiorni = value.split(';');\r\n      }\r\n    }\r\n\r\n    if (arGiorni.length !== 0) {\r\n\r\n      //Se ho più di 3 giorni chiedo la versione short\r\n      if (arGiorni.length > 3) {\r\n        smallVersion = true;\r\n      }\r\n\r\n      //Ciclo sui giorni e li decodifico\r\n      arGiorni.forEach(element => {\r\n        try {\r\n            indexDay = parseInt(element);\r\n            indexDay--;\r\n\r\n            if (smallVersion) {\r\n              strDay = Settimana.getsmallLabel(indexDay, language);\r\n            }\r\n            else {\r\n              strDay = Settimana.getLabel(indexDay, language);\r\n            }\r\n    \r\n            \r\n            if (valueReturn.length !== 0)  {\r\n              valueReturn += ', ';\r\n            }\r\n\r\n            valueReturn += strDay;\r\n\r\n        } catch (error) {\r\n          console.log('Error Parse');\r\n        }\r\n        \r\n      \r\n      });\r\n    }\r\n\r\n    return valueReturn;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, TipoMasterDocumento } from 'src/app/models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'tipomasterdocumento'\r\n})\r\nexport class TipomasterdocumentoPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {   \r\n    let label = '';\r\n\r\n    label = ValueList.decode(TipoMasterDocumento, value);\r\n\r\n    return label;\r\n  }\r\n\r\n}\r\n"]}