{"version":3,"sources":["./src/app/pages/home/home.module.ts","./src/app/pages/home/home-routing.module.ts","./src/app/pages/home/home.page.ts","./src/app/pages/home/home.page.html"],"names":[],"mappings":"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","file":"pages-home-home-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\nimport { HomePage } from './home.page';\r\n\r\nimport { NewLoginPage } from 'src/app/pages/auth/new-login/new-login.page'\r\nimport { NewsdetailPage } from 'src/app/pages/newsdetail/newsdetail.page'\r\nimport { PswRecoveryPage } from '../auth/psw-recovery/psw-recovery.page'\r\n\r\nimport { NewLoginPageModule } from '../auth/new-login/new-login.module';\r\nimport { NewsdetailPageModule } from '../newsdetail/newsdetail.module'\r\nimport { HomePageRoutingModule } from './home-routing.module'\r\nimport { PswRecoveryPageModule } from '../auth/psw-recovery/psw-recovery.module';\r\nimport { SharedComponentsModule } from '../../shared/components/shared-components.module';\r\nimport { AllegatilistPageModule } from '../history/historycourse/allegatilist/allegatilist.module';\r\nimport { AllegatilistPage } from '../history/historycourse/allegatilist/allegatilist.page';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n\r\n    CommonModule,\r\n    IonicModule,\r\n    HomePageRoutingModule,\r\n    \r\n    NewsdetailPageModule,\r\n    NewLoginPageModule,\r\n    PswRecoveryPageModule,\r\n    SharedComponentsModule,\r\n    AllegatilistPageModule\r\n    \r\n    // RouterModule.forChild([\r\n    //   {\r\n    //     path: '',\r\n    //     component: HomePage\r\n    //   }\r\n    // ]),\r\n\r\n  ],\r\n  declarations: [\r\n    HomePage,   \r\n  ],\r\n  exports: [\r\n  ],\r\n  entryComponents: [\r\n    NewLoginPage,\r\n    PswRecoveryPage,\r\n    NewsdetailPage,\r\n    AllegatilistPage\r\n  ]\r\n})\r\nexport class HomePageModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomePage } from './home.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class HomePageRoutingModule {}\r\n","import { Component, OnDestroy, OnInit, ɵConsole } from '@angular/core';\r\nimport { StartService } from 'src/app/services/start.service';\r\nimport { StartConfiguration } from 'src/app/models/start-configuration.model';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { Area } from 'src/app/models/area.model';\r\nimport { Location } from 'src/app/models/location.model';\r\n\r\nimport { ActionSheetController, NavController, ModalController, ToastController } from '@ionic/angular';\r\nimport { Impegno } from 'src/app/models/impegno.model';\r\nimport { SettoreAttivita, Ruolo, Mansione } from '../../models/valuelist.model';\r\n\r\nimport { Utente } from 'src/app/models/utente.model';\r\nimport { ButtonCard, ButtonHomeParams } from 'src/app/models/buttoncard.model';\r\nimport { NewsEvento } from 'src/app/models/newsevento.model';\r\nimport { NewLoginPage } from 'src/app/pages/auth/new-login/new-login.page';\r\nimport { NewsdetailPage } from 'src/app/pages/newsdetail/newsdetail.page';\r\nimport { DocstructureService } from 'src/app/library/services/docstructure.service';\r\n\r\nimport { RequestDecode, RequestParams } from 'src/app/library/models/requestParams.model';\r\n\r\nimport { OperatorCondition } from 'src/app/library/models/iddocument.model';\r\n\r\nimport { Plugins } from '@capacitor/core';\r\nimport { PianificazioneCorso } from 'src/app/models/pianificazionecorso.model';\r\nimport { LogApp } from 'src/app/models/log.model';\r\nimport { AllegatilistPage } from '../history/historycourse/allegatilist/allegatilist.page';\r\nimport { OccupazioneCampi } from 'src/app/models/occupazionecampi.model';\r\nimport { Button } from 'protractor';\r\n\r\nconst { Geolocation } = Plugins;\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: 'home.page.html',\r\n  styleUrls: ['home.page.scss'],\r\n})\r\nexport class HomePage implements OnInit, OnDestroy {\r\n\r\n  // Parametri Iniziali di Configurazione\r\n  startConfig: StartConfiguration;\r\n  startConfigListen: Subscription;\r\n\r\n  //Identificativo Utente Loggato\r\n  userLogged: boolean;\r\n  userLoggedListen: Subscription;\r\n\r\n  //Utente Loggato\r\n  docUtente: Utente;\r\n  docUtenteListen: Subscription;\r\n\r\n  // Elenco delle Aree\r\n  listAree: Area[] = [];\r\n  listAreeListen: Subscription;\r\n\r\n  // Elenco delle Location da mostrare\r\n  listLocation: Location[] = [];\r\n\r\n  listLocationListen: Subscription;\r\n\r\n  //Elenco delle prossime attività\r\n  myListImpegni: Impegno[] = [];\r\n\r\n  myListImpegniTrainer: PianificazioneCorso[] = [];\r\n\r\n  // L'area viene recuperata dal subscribe\r\n  selectedArea: Area;\r\n  selectedAreaListen: Subscription;\r\n\r\n  idAreaFav: string;\r\n  listenIdAreaFav: Subscription;\r\n\r\n  listButtonImpegni: ButtonCard[] = []; //Bottoni da mostrare nell'area impegni\r\n\r\n  //Oggetti per le News\r\n  noNewsCard: NewsEvento;\r\n  listNews: NewsEvento[] = [];\r\n\r\n  //Bottoni da mostrare nella porzione Agenda\r\n  agendaCards: ButtonCard[] = [];\r\n\r\n  listOccupazioni: any[]= []; //array di array di occupazioni, divise per locations\r\n\r\n\r\n  //Mostra o nasconde Area Agenda\r\n  showAgenda = false;\r\n\r\n  get showTrainer(): boolean {\r\n    return (this.userLogged && (this.docUtente.isAssistenteTrainer || this.docUtente.isTrainer))\r\n  }\r\n\r\n  get showCustode(): boolean {\r\n    return (this.userLogged && this.docUtente.isCustode)\r\n  }\r\n\r\n\r\n  //Guarda qui\r\n  //https://swiperjs.com/demos/#responsive_breakpoints\r\n  sliderOpts = {\r\n    slidesPerView: 1.2,\r\n    spaceBetween: 0,\r\n    initialSlide: 0,\r\n    // Dovrei farla variabile\r\n    // Responsive breakpoints   \r\n    breakpoints: {\r\n\r\n      // when window width is <= 320px     \r\n      320: {\r\n        slidesPerView: 1.2,\r\n        spaceBetween: 0\r\n      },\r\n      // when window width is <= 480px     \r\n      480: {\r\n        slidesPerView: 1.2,\r\n        spaceBetween: 0\r\n      },\r\n\r\n      // when window width is <= 640px     \r\n      640: {\r\n        slidesPerView: 1.2,\r\n        spaceBetween: 0\r\n      },\r\n\r\n      1024: {\r\n        slidesPerView: 2.5,\r\n        spaceBetween: 1\r\n      },\r\n\r\n      1440: {\r\n        slidesPerView: 4,\r\n        spaceBetween: 1\r\n      },\r\n\r\n      1920: {\r\n        slidesPerView: 6,\r\n        spaceBetween: 1\r\n      }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  constructor(private startService: StartService,\r\n    private actionSheetController: ActionSheetController,\r\n    private navController: NavController,\r\n    private modalController: ModalController,\r\n    private docStructureService: DocstructureService,\r\n    private toastController: ToastController\r\n  ) {\r\n\r\n    //Recupero la card che dice che non ci sono news\r\n    this.noNewsCard = NewsEvento.getNoNews();\r\n\r\n    // Parametri di Configurazione Iniziale Applicazione\r\n    this.startConfigListen = this.startService.startConfig\r\n      .subscribe(element => {\r\n        this.startConfig = element;\r\n      });\r\n\r\n    // Sottoscrivo alla ricezione delle Aree\r\n    this.listAreeListen = this.startService.listAree\r\n      .subscribe(aree => {\r\n        this.listAree = aree.filter(objArea => {\r\n          return objArea.APPSHOW;\r\n        });\r\n\r\n        //quando le aree sono arrivate, se non sono loggato seleziono la più vicina\r\n        if (!this.userLogged) {\r\n          this.startService.getNearestArea(this.listAree)\r\n            .then(nearestArea => {\r\n\r\n              //trovata l'area, posso passarne l'id al metodo selectarea\r\n              this.startService.selectAreaByID(nearestArea.ID);\r\n            })\r\n        }\r\n      });\r\n\r\n\r\n    //QUESTO E' IMPORTANTE, QUI POSSO AGGANCIARE EVENTI A SEGUITO DEL CAMBIO DI AREA\r\n    //Mi sottoscrivo alla ricezione della Area Selezionata\r\n    this.selectedAreaListen = this.startService.areaSelected\r\n      .subscribe(areaSel => {\r\n        //controllo se nell'array di aree è presente quella selezionata\r\n        if (this.listAree.includes(areaSel)) {\r\n          //Cambio Area Selezionata\r\n          this.selectedArea = areaSel;\r\n        }\r\n        //altrimenti setto come area selezionata la prima disponibile\r\n        else {\r\n          this.selectedArea = this.listAree[0];\r\n        }\r\n        //richiedo le location sulla base della nuova area selezionata\r\n        startService.requestLocation(this.selectedArea.ID)\r\n       \r\n\r\n        //Richiesta nuove News\r\n        this.requestNews();\r\n\r\n        //Aggiorno l'agenda\r\n        this.updateAgenda();\r\n\r\n        // this.richiediAgendaOccupazione();\r\n\r\n\r\n      });\r\n\r\n    \r\n    // QUI POSSO AGGANCIARE EVENTI ALL'ARRIVO DELLE LOCATIONS\r\n    // Sottoscrivo alla ricezione delle Locations\r\n    this.listLocationListen = this.startService.listLocation\r\n      .subscribe(locations => {\r\n        this.listLocation = locations;\r\n        if(this.listLocation && this.listLocation.length > 0){\r\n          \r\n          this.richiediAgendaOccupazione()\r\n\r\n        }\r\n      })\r\n\r\n    //Sottoscrivo all'ascolto di un utente loggato\r\n    this.userLoggedListen = this.startService.utenteLogged.subscribe(element => {\r\n\r\n      //Recupero l'utente\r\n      this.userLogged = element;\r\n\r\n      //Aggiorno lista impegni e cerco di visualizzare le card superiori\r\n      this.updateListImpegni();\r\n\r\n      //Aggiorno l'agenda\r\n      // this.updateAgenda();\r\n      // this.richiediAgendaOccupazione();\r\n\r\n\r\n    });\r\n\r\n\r\n    //Sottoscrivo all'ascolto dell'Account\r\n    this.docUtenteListen = this.startService.utente.subscribe(element => {\r\n\r\n      this.docUtente = element;\r\n\r\n      //Aggiorno lista impegni e cerco di visualizzare le card superiori\r\n      this.updateListImpegni();\r\n\r\n      //Aggiorno l'agenda\r\n      // this.updateAgenda(); \r\n      // this.richiediAgendaOccupazione();\r\n    });\r\n\r\n\r\n    //Impostazione Iniziale dei Bottoni relativi gli impegni\r\n    this.createButtonCardImpegni();\r\n  }\r\n\r\n\r\n  /**\r\n   * Effettua la richiesta delle News\r\n   */\r\n  requestNews() {\r\n\r\n    if (this.selectedArea) {\r\n\r\n      //Chiedo al servizio le News\r\n      this.startService.requestNews(this.selectedArea.ID, 3).then(listNews => {\r\n        this.listNews = listNews;\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  ionViewDidEnter() {\r\n\r\n    //Aggiorniamo gli impegni\r\n    this.updateListImpegni();\r\n    this.requestNews();\r\n\r\n  }\r\n\r\n  //#region IMPEGNI\r\n\r\n  /**\r\n   * Crea l'array dei BottoniCard degli impegni, a seconda dell'utente loggato e la lista impegni\r\n   */\r\n  createButtonCardImpegni() {\r\n    let params: ButtonHomeParams = new ButtonHomeParams();\r\n\r\n    //Preparo i parametri\r\n    params.utenteLoggato = this.userLogged;\r\n    params.listImpegni = this.myListImpegni;\r\n    params.registrazioneInApp = false;\r\n    if (this.startConfig && this.startConfig.gruppo) {\r\n      params.registrazioneInApp = this.startConfig.gruppo.APPFLAGREGISTRAZIONE;\r\n    }\r\n\r\n\r\n    //Recupero i bottoni da mostrare, a seconda sia loggato o no\r\n    this.listButtonImpegni = ButtonCard.getButtonHomeImpegni(params);\r\n  }\r\n\r\n  /**\r\n   * Evento click su bottone della card\r\n   * @param btn Bottone cliccato\r\n   */\r\n  onClickButtonCardImpegni(btn: ButtonCard) {\r\n\r\n\r\n    if (btn) {\r\n      switch (btn.functionCod) {\r\n        case 'register':\r\n          // Apro il Login\r\n          this.openLogin();\r\n          break;\r\n\r\n        case 'login':\r\n          // Apro il Login\r\n          this.openLogin();\r\n          break;\r\n\r\n        case 'show':\r\n          this.redirectFromButtonCard(btn);\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Apre la pagina relativa dal Bottone passato\r\n   * @param btn Bottone\r\n   */\r\n  redirectFromButtonCard(btn: ButtonCard) {\r\n    if (btn.id && btn.id.length !== 0) {\r\n      switch (btn.settore) {\r\n        case SettoreAttivita.settoreCorso:\r\n          this.navController.navigateForward(['/', 'historylist', 'course', btn.id]);\r\n          break;\r\n\r\n        case SettoreAttivita.settorePrenotazione:\r\n          this.navController.navigateForward(['/', 'historylist', 'booking', btn.id]);\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region NEWS ED EVENTI AZIENDA\r\n\r\n  onClickShowAllNews() {\r\n    this.navController.navigateForward(['/', 'news']);\r\n  }\r\n\r\n  /**\r\n   * Apre in modalità modale la news\r\n   * @param news News da leggere\r\n   */\r\n  onClickNews(news: NewsEvento, event: any) {\r\n\r\n    this.modalController.create({\r\n      component: NewsdetailPage,\r\n      componentProps: { myNews: news }\r\n    }).then(modal => {\r\n      modal.present();\r\n    })\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region TRAINER\r\n  // updateTrainer(){\r\n  //   if (this.docUtente.isTrainer){\r\n  //     this.showTrainer = true;\r\n\r\n  //     //creo il filtro e recupero tutti i corsi dell'istruttore loggato\r\n  //     let filterCorso : Corso = new Corso;\r\n\r\n\r\n  //   }\r\n  //   else{\r\n  //     this.showTrainer = false;\r\n  //   }\r\n  // }\r\n\r\n  //#endregion\r\n\r\n  ngOnInit() {\r\n    //prova localizzazione\r\n    // Geolocation.getCurrentPosition().then(posizione => {\r\n    //   console.log (posizione);\r\n    // })\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.startConfigListen) {\r\n      this.startConfigListen.unsubscribe();\r\n    }\r\n\r\n    if (this.listAreeListen) {\r\n      this.listAreeListen.unsubscribe();\r\n    }\r\n\r\n    if (this.listLocation) {\r\n      this.listLocationListen.unsubscribe();\r\n    }\r\n\r\n    if (this.selectedAreaListen) {\r\n      this.selectedAreaListen.unsubscribe();\r\n    }\r\n\r\n    if (this.userLoggedListen) {\r\n      this.userLoggedListen.unsubscribe();\r\n    }\r\n\r\n    if (this.docUtenteListen) {\r\n      this.docUtenteListen.unsubscribe();\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  /** Gestisce il Click del pulsante di footer */\r\n  onClickfooterButton() {\r\n    if (this.userLogged) {\r\n      // Apro lo Storico\r\n      this.openHistory();\r\n    }\r\n    else {\r\n      // Apro il Login\r\n      this.openLogin();\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Prenotazione\r\n   * @param location Location Selezionata\r\n   */\r\n  onClickPrenota(location: Location) {\r\n    this.navController.navigateForward(['/', 'location', location.ID, 'booking']);\r\n  }\r\n\r\n  /**\r\n   * Scheda Location\r\n   * @param location Location selezionata\r\n   */\r\n  onClickLocation(location: Location) {\r\n    this.navController.navigateForward(['/', 'location', location.ID]);\r\n  }\r\n\r\n\r\n\r\n  /** Apertura Videata Login */\r\n  async openLogin() {\r\n\r\n    //**Apro in versione moale la NewLogin\r\n    const modal = await this.modalController.create({\r\n      component: NewLoginPage\r\n    });\r\n\r\n    modal.present();\r\n  }\r\n\r\n  /**\r\n   * Apre la pagina di History\r\n   */\r\n  openHistory() {\r\n    this.navController.navigateForward(['/', 'historylist']);\r\n  }\r\n\r\n  /**\r\n   * Visualizza le form per la scelta del centro\r\n   */\r\n  showSceltaCentro(ev: any) {\r\n    //Per ora faccio uguale, vediamo poi se vale la pena \r\n    //cambiare per il desktop\r\n    if (this.startService.isDesktop) {\r\n      this.presentActionSheet();\r\n    }\r\n    else {\r\n      this.presentActionSheet();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /** funzione per mostrare il popup di scelta campo */\r\n  async presentActionSheet() {\r\n    let buttonsArray: any[] = [];\r\n    let singleButton: any;\r\n    //popolo l'array di bottoni con i nomi delle aree operative\r\n    for (const iterator of this.listAree) {\r\n      singleButton = {\r\n        text: iterator.DENOMINAZIONE,\r\n        icon: 'location-outline',\r\n        handler: () => {\r\n          //Chiedo al servizio di cambiare l'Area Selezionata\r\n          this.startService.selectAreaByID(iterator.ID);\r\n        }\r\n      }\r\n\r\n      buttonsArray.push(singleButton);\r\n    }\r\n    const actionSheet = await this.actionSheetController.create\r\n      ({\r\n        header: 'Scegli la Sede',\r\n        buttons: buttonsArray\r\n      });\r\n    await actionSheet.present();\r\n  }\r\n\r\n\r\n  //#region GESTIONE INTERFACCIA\r\n  /** Ritorna il color a seconda dello stato di Login */\r\n  // btnFooterColor() {\r\n\r\n  //   let color = 'primary';\r\n\r\n  //   if (this.userLogged) {\r\n  //     color = 'warning'\r\n  //   }\r\n  //   else {\r\n  //     color = 'primary'\r\n  //   }\r\n\r\n  //   return color;\r\n  // }\r\n\r\n  btnFooterCaption() {\r\n    let retCaption = '';\r\n    const captionAccedi = 'Accedi';\r\n\r\n    retCaption = captionAccedi;\r\n    //Utente Loggato\r\n    if (this.userLogged) {\r\n      // Account Presente\r\n      if (this.docUtente) {\r\n        retCaption = this.docUtente.NOMINATIVO ? this.docUtente.NOMINATIVO : captionAccedi\r\n      }\r\n    }\r\n\r\n    return retCaption;\r\n  }\r\n\r\n  btnFooterIcon() {\r\n    let retIcon = '';\r\n    const iconAccedi = 'log-in-outline';\r\n\r\n    retIcon = iconAccedi;\r\n    //Utente Loggato\r\n    if (this.userLogged) {\r\n      // Account Presente\r\n      if (this.docUtente) {\r\n        retIcon = this.docUtente.NOMINATIVO ? 'person-circle-outline' : iconAccedi\r\n      }\r\n    }\r\n\r\n    return retIcon;\r\n  }\r\n  //#endregion\r\n\r\n  /**\r\n   * Richiede gli impegni dell'utente\r\n   * e successivamente prepara la listButtonImpegni\r\n   */\r\n  updateListImpegni() {\r\n    let reqParam = new RequestParams();\r\n\r\n    reqParam.top = 10;\r\n    reqParam.child_level = 1;\r\n    reqParam.decode.active = true;\r\n    reqParam.orderBy = 'asc';\r\n\r\n    reqParam.decode.foreignFields = Impegno.getReqForeignKeys();\r\n\r\n\r\n    if (this.userLogged) {\r\n\r\n      if (this.docUtente) {\r\n        //Devo richiedere gli impegni\r\n\r\n        //Imposto nel filtro l'Utente\r\n        let filterImpegno = new Impegno(true);\r\n        filterImpegno.IDUTENTE = this.docUtente.ID;\r\n\r\n        filterImpegno.DATAORAINIZIO = new Date();\r\n        //Applico una condizione per la dataorainizio\r\n        filterImpegno.addFilterCondition(OperatorCondition.maggiore, 'DATAORAINIZIO');\r\n\r\n\r\n        this.docStructureService.requestNew(filterImpegno, reqParam)\r\n          .then(listImpegni => {\r\n\r\n            this.myListImpegni = listImpegni;\r\n\r\n            //Reimposto l'area impegni\r\n            this.createButtonCardImpegni();\r\n\r\n          })\r\n          .catch(error => {\r\n            this.myListImpegni = [];\r\n            console.log(error);\r\n          });\r\n      }\r\n      else {\r\n        this.myListImpegni = [];\r\n        //Reimposto l'area impegni\r\n        this.createButtonCardImpegni();\r\n      }\r\n    }\r\n    else {\r\n      this.myListImpegni = [];\r\n      //Reimposto l'area impegni\r\n      this.createButtonCardImpegni();\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  //#region AGENDA\r\n\r\n  /**\r\n   * Passa alla pagina dell'agenda\r\n   */\r\n  onClickShowAgenda() {\r\n    this.navController.navigateForward('/agenda');\r\n  }\r\n\r\n  /**\r\n   * Aggiornamento dell'agenda\r\n   * Utente non loggato, utente Cliente -> NESSUNA AGENDA VISUALIZZATA\r\n   */\r\n  updateAgenda() {\r\n\r\n    let richiediOccupazioni = false;\r\n    let richiediMieiCorsi = false;\r\n\r\n    if (this.selectedArea && this.selectedArea.ID) {\r\n      //Utente Loggato\r\n      if (this.userLogged) {\r\n        // Account Presente\r\n        if (this.docUtente) {\r\n\r\n          if (this.docUtente.RUOLO == Ruolo.admin || this.docUtente.RUOLO == Ruolo.super) {\r\n            richiediOccupazioni = true;\r\n          }\r\n          if (this.docUtente.isTrainer || this.docUtente.isAssistenteTrainer) {\r\n            richiediMieiCorsi = true;\r\n          }\r\n          // else if (this.docUtente.RUOLO == Ruolo.collaboratore ) {\r\n          //   switch(this.docUtente.MANSIONE) {\r\n          //     case Mansione.assistenteTrainer:\r\n          //       richiediMieiCorsi = true;\r\n          //       break;\r\n          //     case Mansione.trainer:\r\n          //       richiediMieiCorsi = true;\r\n          //       break;\r\n          //     case Mansione.custode:\r\n          //       richiediOccupazioni = true;\r\n          //       break;\r\n          //   }\r\n          // }\r\n        }\r\n      }\r\n\r\n      if (richiediMieiCorsi) {\r\n        this.richiediAgendaTrainer();\r\n      }\r\n      else if (richiediOccupazioni) {\r\n        // this.richiediAgendaOccupazione();\r\n      }\r\n      else {\r\n\r\n        //Nascono l'agenda che non serve\r\n        this.showAgenda = false;\r\n\r\n        //Elimino l'agenda\r\n        this.agendaCards = [];\r\n\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Richiesta Agenda Occupazioni\r\n   */\r\n  private richiediAgendaOccupazione() {\r\n\r\n    if(this.listLocation && this.listLocation.length > 0){\r\n      let idArea = this.selectedArea.ID;\r\n      // this.showAgenda = true;\r\n\r\n      this.listLocation.forEach(elLocation => {\r\n\r\n        this.startService.requestOccupazioni(idArea, elLocation.ID, 4, undefined, new Date())\r\n          .then(listOccupazioni => {\r\n            elLocation._LISTOCCUPAZIONI = listOccupazioni;\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n    \r\n          });\r\n      })\r\n\r\n    }\r\n\r\n  }\r\n\r\n  private richiediAgendaTrainer() {\r\n    //qui stò richiedendo gli impegni che riguardano l'utente in quanto \"collaboratore\"\r\n    this.startService.requestImpegniTrainer(this.docUtente.ID, new Date())\r\n      .then(result => {\r\n\r\n        this.myListImpegniTrainer = result;\r\n\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  //#endregion\r\n  getButtonCardTrainer(pianificazioneElem?: PianificazioneCorso) {\r\n    if (pianificazioneElem) {\r\n      return ButtonCard.getButtonAgendaFromPianificazioneCorso(pianificazioneElem);\r\n    }\r\n    else {\r\n      let btnCard = new ButtonCard();\r\n\r\n      btnCard.title = 'Nessun corso previsto per oggi';\r\n      btnCard.nameicon = 'school-outline';\r\n      btnCard.sloticon = \"start\";\r\n      btnCard.color = \"primary\";\r\n      btnCard.disabled = true;\r\n\r\n\r\n      return btnCard\r\n    }\r\n  }\r\n\r\n  getButtonEmptyOccupazione(){\r\n    let btnCard = new ButtonCard();\r\n    btnCard.title = 'Nessun evento presente oggi nella struttura';\r\n    btnCard.subtitle = 'controlla domani';\r\n    btnCard.nameicon ='calendar-outline';\r\n    btnCard.sloticon = 'start';\r\n    btnCard.color = 'primary';\r\n    btnCard.disabled = true;\r\n  \r\n\r\n    return btnCard;\r\n  }\r\n\r\n  onClickImpegnoTrainer(pianificazioneElem: PianificazioneCorso) {\r\n    this.navController.navigateForward('/agenda-trainer/' + pianificazioneElem.ID);\r\n  }\r\n\r\n\r\n  /**\r\n   * se viene dato un valore a \"componente\", apre in modale quel componente, altrimenti apre la pagina di test\r\n   */\r\n  onTest() {\r\n\r\n    const componente = undefined;\r\n    const componentProps = undefined;\r\n\r\n    let idArea = this.startService.areaSelectedValue.ID;\r\n\r\n    const path:string = '/agenda-custode/' + idArea;\r\n\r\n\r\n    if (componente) {\r\n      this.modalController.create({\r\n        component: componente,\r\n        componentProps: componentProps\r\n      })\r\n        .then(elModal => {\r\n          elModal.present();\r\n        })\r\n\r\n    }\r\n\r\n    else if (path){\r\n      this.navController.navigateForward(path)\r\n    }\r\n\r\n    else {\r\n      this.navController.navigateForward('/test');\r\n    }\r\n\r\n\r\n  }\r\n\r\n  goToPianificazioneDetail(docOccupazione: OccupazioneCampi){\r\n    if(docOccupazione && docOccupazione.TIPO == SettoreAttivita.settorePrenotazione){\r\n      this.navController.navigateForward(`/agenda-custode/${docOccupazione.ID}`)\r\n    }\r\n    else{\r\n      this.showMessage('Puoi visualizzare solo il dettaglio delle prenotazioni');\r\n    }\r\n  }\r\n\r\n    /**\r\n   * Visualizza un messaggio\r\n   */\r\n  showMessage(messaggio: string){\r\n    this.toastController.create({\r\n      message: messaggio,\r\n      duration: 3000\r\n    })\r\n    .then(elToast => {\r\n      elToast.present();\r\n    })\r\n  }\r\n\r\n\r\n}\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\" mode=\"md\">\r\n    <ion-title \r\n      class=\"title-image\">\r\n      <div>\r\n        <img class=\"logo\" [src]=\"this.startConfig.getUrlIcon()\">\r\n        {{startConfig?.companyName | titlecase }}\r\n\r\n      </div>\r\n    </ion-title>\r\n\r\n    <!-- BOTTONE PER EVENTUALE TEST  -->\r\n    <!-- <ion-buttons slot=\"end\">\r\n      <ion-button (click)=\"onTest()\">\r\n        <ion-icon name=\"code-working-outline\"></ion-icon>\r\n      </ion-button>\r\n    </ion-buttons> -->\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n \r\n  <!-- IMPEGNI -->\r\n\r\n\r\n  <ion-grid *ngIf=\"listButtonImpegni.length === 1\" >\r\n\r\n    <ion-slides class=\"ion-no-padding ion-no-margin\">\r\n    <ion-slide \r\n        class=\"ion-no-padding ion-no-margin\"\r\n        *ngFor=\"let btn of listButtonImpegni\"> \r\n        \r\n        <app-button-card \r\n            class=\"small-button-card\" \r\n            (clickElement)=\"onClickButtonCardImpegni($event)\" \r\n            [smallVersion]=\"true\" \r\n            [myButtonCard]=\"btn\">\r\n        </app-button-card>\r\n\r\n    </ion-slide>\r\n  </ion-slides>\r\n</ion-grid>\r\n\r\n<ion-grid *ngIf=\"listButtonImpegni.length > 1\" >\r\n\r\n  <ion-slides class=\"ion-no-padding ion-no-margin\" [options]=\"sliderOpts\">\r\n  <ion-slide \r\n      class=\"ion-no-padding ion-no-margin\"\r\n      *ngFor=\"let btn of listButtonImpegni\"> \r\n      \r\n      <app-button-card \r\n          class=\"small-button-card\" \r\n          (clickElement)=\"onClickButtonCardImpegni($event)\" \r\n          [smallVersion]=\"true\" \r\n          [myButtonCard]=\"btn\">\r\n      </app-button-card>\r\n\r\n  </ion-slide>\r\n</ion-slides>\r\n</ion-grid>\r\n\r\n<!-- NUOVA AGENDA OCCUPAZIONI PER IL CUSTODE -->\r\n<div *ngIf=\"this.showCustode\">\r\n  \r\n  <ion-item \r\n      type=\"header\" \r\n      lines=\"none\" \r\n      color=\"medium\"\r\n      *ngIf=\"this.showCustode\">\r\n\r\n      <ion-icon \r\n          slot=\"start\" \r\n          name=\"calendar-outline\"\r\n          ></ion-icon>\r\n      <ion-label class=\"ion-text-nowrap\" >\r\n          <h2>Occupazioni</h2>\r\n      </ion-label>\r\n      \r\n      <ion-button \r\n          slot=\"end\" \r\n          color=\"light\" \r\n          fill=\"solid\"\r\n          size = \"default\"\r\n          routerLink=\"/agenda-custode\">\r\n          <ion-icon slot=\"start\" color=\"primary\" name=\"layers-outline\"></ion-icon>\r\n        Elenco\r\n      </ion-button>  \r\n  </ion-item>\r\n\r\n\r\n\r\n  <!-- GRIGLIA OCCUPAZIONI -->\r\n  <ion-slides class=\"reservations-grid\" scrollbar>\r\n    <ion-slide *ngFor=\"let location of listLocation\" >\r\n      <ion-grid>\r\n        \r\n        <ion-row>\r\n          <ion-col class=\"ion-no-padding\">\r\n            <ion-text color=\"primary\">\r\n              <h4 class=\"ion-no-margin ion-text-center\">{{location.DENOMINAZIONE | titlecase}}</h4>\r\n            </ion-text>\r\n          </ion-col>\r\n        </ion-row>\r\n        \r\n        <!-- OCCUPAZIONI PRESENTI -->\r\n        <ion-row *ngIf=\"location && location._LISTOCCUPAZIONI && location._LISTOCCUPAZIONI.length > 0\">\r\n         \r\n          <ion-col \r\n            sizeXs=\"6\" \r\n            sizeSm=\"3\" \r\n            *ngFor=\"let occupazione of location._LISTOCCUPAZIONI\"\r\n            >\r\n            <!-- sizeLg=\"2\" \r\n            sizeXl=\"1\"  -->\r\n            <ion-card button (click)=\"goToPianificazioneDetail(occupazione)\">\r\n              <!-- <ion-card-content> -->\r\n                <ion-icon [name]=\"occupazione.iconName\"></ion-icon>\r\n                <p>{{occupazione['_DENOMINAZIONE_Campo']}}</p>\r\n                <p>{{occupazione.DATAORAINIZIO | date: 'HH:mm'}} - {{occupazione.DATAORAFINE | date: 'HH:mm'}}</p>\r\n              <!-- </ion-card-content> -->\r\n            </ion-card>\r\n          </ion-col>\r\n        </ion-row>\r\n        \r\n        <!-- NESSUNA OCCUPAZIONE PER OGGI -->\r\n        <ion-row *ngIf=\"!location || !location._LISTOCCUPAZIONI || location._LISTOCCUPAZIONI.length <= 0\">\r\n          <ion-col>\r\n            <app-button-card \r\n            class=\"\" \r\n            [smallVersion]=\"true\" \r\n            [homeCustodeVersion]=\"true\"\r\n            [myButtonCard]=\"getButtonEmptyOccupazione()\"\r\n        >\r\n        </app-button-card>\r\n          </ion-col>\r\n        </ion-row>\r\n        \r\n\r\n      </ion-grid>\r\n    </ion-slide>\r\n  </ion-slides>\r\n\r\n</div>\r\n\r\n\r\n<!-- PARTE TRAINER -->\r\n<div class=\"ion-no-padding\" *ngIf=\"this.showTrainer\"> \r\n  \r\n  <ion-item \r\n    type=\"header\" \r\n    lines=\"none\" \r\n    class = \"title-agenda-impegni\">\r\n  \r\n    <ion-icon \r\n        slot=\"start\" \r\n        name=\"school-outline\">\r\n    </ion-icon>\r\n\r\n    <ion-label class=\"ion-text-nowrap\">\r\n      <h2>Agenda Impegni</h2>\r\n    </ion-label>\r\n  \r\n    <ion-button \r\n        slot=\"end\" \r\n        color=\"light\" \r\n        fill=\"solid\"\r\n        size = \"default\"\r\n        routerLink=\"/agenda-trainer\">\r\n    <ion-icon slot=\"start\" color=\"primary\" name=\"layers-outline\"></ion-icon>\r\n      Elenco\r\n    </ion-button>  \r\n  </ion-item>\r\n  \r\n  <!-- IMPEGNI TRAINER NON PRESENTI -->\r\n  \r\n  <ion-slides *ngIf=\"!myListImpegniTrainer || myListImpegniTrainer.length == 0\" class=\"ion-no-padding ion-no-margin\">\r\n    <ion-slide \r\n        class=\"ion-no-padding ion-no-margin\"   \r\n    >   \r\n        <app-button-card \r\n            class=\"small-button-card card-corsi-vuoti\" \r\n            [smallVersion]=\"true\" \r\n            [myButtonCard]=\"getButtonCardTrainer()\"\r\n        >\r\n        </app-button-card>\r\n  \r\n      </ion-slide>\r\n  </ion-slides>\r\n  \r\n  <!-- IMPEGNI TRAINER PRESENTI -->\r\n  <ion-slides *ngIf=\"myListImpegniTrainer && myListImpegniTrainer.length > 0\" class=\"ion-no-padding ion-no-margin\">\r\n    <ion-slide \r\n        class=\"ion-no-padding ion-no-margin\"\r\n        *ngFor=\"let impegno  of myListImpegniTrainer\"> \r\n        \r\n        <app-button-card \r\n            class=\"small-button-card\" \r\n            [smallVersion]=\"true\" \r\n            [myButtonCard]=\"getButtonCardTrainer(impegno)\"\r\n            (click)=\"onClickImpegnoTrainer(impegno)\">\r\n        </app-button-card>\r\n  \r\n      </ion-slide>\r\n  </ion-slides>\r\n</div>\r\n\r\n  <!-- AREA OPERATIVA -->\r\n  <!-- TITOLO AREA -->\r\n  <ion-item \r\n      type=\"header\" \r\n      lines=\"none\" \r\n      color=\"tertiary\">\r\n\r\n    <ion-icon \r\n        slot=\"start\" \r\n        name=\"location-outline\"></ion-icon>\r\n    <ion-label class=\"ion-text-nowrap\">\r\n      <h2>{{ selectedArea.DENOMINAZIONE | titlecase }}</h2>\r\n    </ion-label>\r\n\r\n    <ion-button \r\n        slot=\"end\" \r\n        color=\"light\" \r\n        fill=\"solid\" \r\n        *ngIf=\"listAree.length>1\" \r\n        size = \"default\"\r\n        (click)='showSceltaCentro($event)'>\r\n        <ion-icon slot=\"start\" color=\"primary\" name=\"trail-sign-outline\"></ion-icon>\r\n      Cambia\r\n    </ion-button>  \r\n  </ion-item>\r\n\r\n  <!-- LOCATION -->\r\n  <div id=\"div-content\">\r\n\r\n    <ion-grid *ngIf=\"listLocation.length===1\" >\r\n      <ion-row>\r\n        <ion-col sizeXs=\"12\" sizeSm=\"6\"  offsetSm=\"3\" sizeLg=\"4\" offsetLg=\"4\">\r\n\r\n          <app-centri \r\n              (clickPrenota)=\"onClickPrenota($event)\"\r\n              (clickLocation)=\"onClickLocation($event)\"\r\n              [location]=\"listLocation[0]\"\r\n              [myStartConfig]=\"startConfig\">\r\n              \r\n          </app-centri>\r\n\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  \r\n    <div scrollX=\"true\" *ngIf=\"listLocation.length>1\">\r\n        <app-centri \r\n          *ngFor=\"let locationItem of listLocation\"\r\n          (clickPrenota)=\"onClickPrenota($event)\"\r\n          (clickLocation)=\"onClickLocation($event)\"\r\n          [location]=\"locationItem\"\r\n          [myStartConfig]=\"startConfig\">\r\n          \r\n        </app-centri>    \r\n    </div>\r\n\r\n  </div>\r\n\r\n  <!-- AGENDA OCCUPAZIONE -->\r\n  <!-- TITOLO -->\r\n  <!-- <ion-item \r\n      type=\"header\" \r\n      lines=\"none\" \r\n      color=\"primary\"\r\n      *ngIf=\"showAgenda\">\r\n\r\n      <ion-icon \r\n          slot=\"start\" \r\n          name=\"golf-outline\"></ion-icon>\r\n      <ion-label class=\"ion-text-nowrap\">\r\n        <h2>Agenda Struttura</h2>\r\n      </ion-label>\r\n      \r\n      <ion-button \r\n          slot=\"end\" \r\n          color=\"light\" \r\n          fill=\"solid\"\r\n          size = \"default\"\r\n          (click)=\"onClickShowAgenda()\">\r\n          <ion-icon slot=\"start\" color=\"primary\" name=\"layers-outline\"></ion-icon>\r\n        Elenco\r\n      </ion-button>  \r\n  </ion-item> -->\r\n  <!-- FINE TITOLO -->\r\n\r\n  <!-- AGENDA CARD -->\r\n  <!-- <ion-grid *ngIf=\"agendaCards.length === 1 && showAgenda\" class=\"grid-agenda\">\r\n\r\n    <ion-slides class=\"ion-no-padding ion-no-margin\">\r\n    <ion-slide \r\n        class=\"ion-no-padding ion-no-margin\"\r\n        *ngFor=\"let btn of agendaCards\"> \r\n        \r\n        <app-button-card \r\n            class=\"small-button-card\" \r\n            [smallVersion]=\"false\" \r\n            [myButtonCard]=\"btn\">\r\n        </app-button-card>\r\n\r\n      </ion-slide>\r\n    </ion-slides>\r\n  </ion-grid> -->\r\n\r\n<!-- <ion-grid *ngIf=\"agendaCards.length > 1 && showAgenda\" class=\"grid-agenda\">\r\n\r\n  <ion-slides class=\"ion-no-padding ion-no-margin\" [options]=\"sliderOpts\">\r\n  <ion-slide \r\n      class=\"ion-no-padding ion-no-margin\"\r\n      *ngFor=\"let btn of agendaCards\"> \r\n      \r\n      <app-button-card \r\n          class=\"small-button-card\" \r\n          [smallVersion]=\"false\" \r\n          [myButtonCard]=\"btn\">\r\n      </app-button-card>\r\n\r\n  </ion-slide>\r\n</ion-slides>\r\n</ion-grid> -->\r\n<!-- FINE AGENDA -->  \r\n\r\n<!-- <div *ngIf=\"showAgenda\">\r\n  <div *ngFor=\"let loc of listLocation\">\r\n    <ion-list>\r\n      <ion-list-header>\r\n        {{loc.DENOMINAZIONE}}\r\n      </ion-list-header>\r\n\r\n      \r\n    </ion-list>\r\n\r\n\r\n  </div>\r\n</div> -->\r\n\r\n\r\n\r\n\r\n<!-- <div class=\"ion-no-padding\"> -->\r\n\r\n<!-- TITOLO -->\r\n<!-- <ion-item \r\n    type=\"header\" \r\n    lines=\"none\" \r\n    color=\"primary\"\r\n    *ngIf=\"showAgenda\">\r\n\r\n    <ion-icon \r\n        slot=\"start\" \r\n        name=\"golf-outline\"></ion-icon>\r\n    <ion-label class=\"ion-text-nowrap\">\r\n      <h2>Agenda Struttura</h2>\r\n    </ion-label>\r\n    \r\n    <ion-button \r\n        slot=\"end\" \r\n        color=\"light\" \r\n        fill=\"solid\"\r\n        size = \"default\"\r\n        (click)=\"onClickShowAgenda()\">\r\n        <ion-icon slot=\"start\" color=\"primary\" name=\"layers-outline\"></ion-icon>\r\n      Elenco\r\n    </ion-button>  \r\n</ion-item> -->\r\n\r\n<!-- SLIDES -->\r\n<!-- <ion-grid *ngIf=\"agendaCards.length > 1 && showAgenda\" class=\"grid-agenda\">\r\n\r\n  <ion-slides class=\"ion-no-padding ion-no-margin\" [options]=\"sliderOpts\">\r\n  <ion-slide \r\n      class=\"ion-no-padding ion-no-margin\"\r\n      *ngFor=\"let btn of agendaCards\"> \r\n      \r\n      <app-button-card \r\n          class=\"small-button-card\" \r\n          [smallVersion]=\"false\" \r\n          [myButtonCard]=\"btn\">\r\n      </app-button-card>\r\n\r\n  </ion-slide>\r\n</ion-slides>\r\n</ion-grid>\r\n</div> -->\r\n\r\n<!-- NEWS ED EVENTI PROSSIMI-->\r\n<!-- TITOLO -->\r\n\r\n  <ion-item \r\n      type=\"header\" \r\n      lines=\"none\" \r\n      color=\"medium\">\r\n\r\n      <ion-icon \r\n          slot=\"start\" \r\n          name=\"newspaper-outline\"></ion-icon>\r\n      <ion-label class=\"ion-text-nowrap\">\r\n        <h2>News</h2>\r\n      </ion-label>\r\n      \r\n      <ion-button \r\n          slot=\"end\" \r\n          color=\"light\" \r\n          fill=\"solid\"\r\n          size = \"default\"\r\n          (click)=\"onClickShowAllNews()\">\r\n          <ion-icon slot=\"start\" color=\"primary\" name=\"layers-outline\"></ion-icon>\r\n        Elenco\r\n      </ion-button>  \r\n  </ion-item>\r\n  <!-- NEWS PRESENTI -->\r\n  <ion-grid class=\"ion-no-padding\" *ngIf=\"listNews.length !== 0\">\r\n    <ion-row>\r\n      <ion-col *ngFor=\"let news of listNews\" size =\"12\" >\r\n        <app-news-eventi [myNews]=\"news\" (clickNews)=\"onClickNews(news,$event)\"></app-news-eventi>\r\n      </ion-col>\r\n    </ion-row>\r\n  </ion-grid>\r\n\r\n  <ion-grid class=\"ion-no-padding\" *ngIf=\"listNews.length === 0\">\r\n    <ion-row>\r\n      <ion-col>\r\n        <app-news-eventi [myNews]=\"noNewsCard\" size=\"12\"></app-news-eventi>\r\n      </ion-col>\r\n    </ion-row>\r\n  </ion-grid>\r\n\r\n  <!-- FINE NEWS -->\r\n\r\n\r\n\r\n  <!-- SE VOLESSI IL LOGIN CIRCULAR DEVO METTERLO QUA -->\r\n  <!-- <app-circular></app-circular> -->\r\n\r\n</ion-content>\r\n\r\n<ion-footer>\r\n  <ion-button \r\n    color=\"tertiary\"\r\n    expand=\"block\" \r\n    size=\"large\"\r\n    (click)=\"onClickfooterButton()\">\r\n      <ion-icon \r\n        slot=\"start\" \r\n        [name]=\"btnFooterIcon()\"\r\n        color=\"primary\"></ion-icon>\r\n      {{btnFooterCaption()}}\r\n    </ion-button>\r\n    \r\n</ion-footer>\r\n"],"sourceRoot":"webpack:///"}