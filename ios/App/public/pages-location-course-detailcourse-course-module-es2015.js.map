{"version":3,"sources":["./src/app/pages/location/course/detailcourse/course.module.ts","./src/app/pages/location/course/detailcourse/course.page.ts","./src/app/pages/location/course/detailcourse/course.page.html","./src/app/pages/location/course/detailcourse/course-routing.module.ts"],"names":[],"mappings":"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","file":"pages-location-course-detailcourse-course-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { CoursePageRoutingModule } from './course-routing.module';\r\n\r\nimport { CoursePage } from './course.page';\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\nimport { CalendarPageModule } from './calendar/calendar.module';\r\nimport { CalendarPage } from './calendar/calendar.page';\r\nimport { VerifyPageModule } from 'src/app/pages/auth/verify/verify.module';\r\nimport { VerifyPage } from 'src/app/pages/auth/verify/verify.page';\r\nimport { NewLoginPage } from 'src/app/pages/auth/new-login/new-login.page'\r\nimport { NewLoginPageModule } from 'src/app/pages/auth/new-login/new-login.module'\r\nimport { BookcoursePageModule } from '../bookcourse/bookcourse.module';\r\nimport { BookcoursePage } from '../bookcourse/bookcourse.page';\r\nimport { SharedComponentsModule } from 'src/app/shared/components/shared-components.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IonicModule,\r\n    CoursePageRoutingModule,\r\n    FormsModule,\r\n    PipesModule,\r\n    CalendarPageModule,\r\n    NewLoginPageModule,\r\n    VerifyPageModule,\r\n    BookcoursePageModule,\r\n    SharedComponentsModule\r\n    \r\n  ],\r\n  declarations: [CoursePage],\r\n  entryComponents: [CalendarPage, NewLoginPage, VerifyPage, BookcoursePage]\r\n})\r\nexport class CoursePageModule {}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Corso } from 'src/app/models/corso.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { StartService } from 'src/app/services/start.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NavController, ModalController, LoadingController, ToastController } from '@ionic/angular';\r\nimport { Location } from 'src/app/models/location.model';\r\nimport { CalendarPage } from './calendar/calendar.page';\r\nimport { DocstructureService } from 'src/app/library/services/docstructure.service';\r\nimport { Area } from 'src/app/models/area.model';\r\nimport { NewLoginPage } from 'src/app/pages/auth/new-login/new-login.page';\r\nimport { VerifyPage } from 'src/app/pages/auth/verify/verify.page';\r\nimport { ParamsVerifica, Utente } from 'src/app/models/utente.model';\r\nimport { BookcoursePage } from '../bookcourse/bookcourse.page';\r\nimport { TipoCorso } from 'src/app/models/valuelist.model';\r\nimport { AllegatilistPage } from 'src/app/pages/history/historycourse/allegatilist/allegatilist.page';\r\n\r\n@Component({\r\n  selector: 'app-course',\r\n  templateUrl: './course.page.html',\r\n  styleUrls: ['./course.page.scss'],\r\n})\r\n\r\nexport class CoursePage implements OnInit, OnDestroy {\r\n\r\n  myCorso: Corso = new Corso();\r\n  subMyCorso: Subscription;\r\n  myLocation: Location = new Location(); \r\n  iconColor = 'primary';\r\n  userLogged = false;\r\n  subUserLogged: Subscription;\r\n  isDesktop: boolean;\r\n  docUser: Utente;\r\n  subUser: Subscription;\r\n  \r\n\r\n  //Gestione Abilitazione Iscrizioni\r\n  listenSelectedArea:Subscription;\r\n  selectedArea: Area;\r\n  enableIscrizioni:boolean = false;  \r\n\r\n\r\n  constructor(\r\n    private startService: StartService,\r\n    private actRouter: ActivatedRoute,\r\n    private navCtrl: NavController,\r\n    private mdlController: ModalController,\r\n    private docStructureService : DocstructureService,\r\n    private loadingController : LoadingController,\r\n    private toastController : ToastController\r\n  ) {\r\n    \r\n    //Ascolto cambiamenti dell'Area per l'abilitazione delle iscrizioni\r\n    this.onListenSelectedArea();\r\n\r\n    //Ascolto cambiamento Utente\r\n    this.onListenSelectedUser();\r\n\r\n  }\r\n\r\n\r\n  \r\n/**\r\n * In ascolto dell'area selezionata, per capire se solo abilitate le iscrizioni\r\n */\r\n  onListenSelectedArea() {\r\n   this.listenSelectedArea = this.startService.areaSelected\r\n    .subscribe(elArea => {\r\n\r\n      this.selectedArea = elArea;\r\n\r\n      //Controllo se nell'area sono abilitate le iscrizioni\r\n      if (this.selectedArea.APPISCRIZIONI == true) {\r\n        this.enableIscrizioni = true;\r\n      }\r\n      else {\r\n        this.enableIscrizioni = false;\r\n      }\r\n  }, error => {\r\n    this.enableIscrizioni = false;\r\n  })\r\n}\r\n\r\n/**\r\n * Controllo cambio Utente\r\n */\r\nonListenSelectedUser() {\r\n    //Controllo se l'utente è loggato\r\n    this.subUserLogged = this.startService.utenteLogged.subscribe(element => {\r\n      this.userLogged = element;\r\n    });  \r\n\r\n\r\n    //Recupero il documento utente\r\n    this.subUser = this.startService.utente.subscribe(elUser => {\r\n      this.docUser = elUser;\r\n    })\r\n}\r\n              \r\n  ngOnInit() {\r\n    //SEMBRA NON FUNZIONARE CORRETTAMENTE\r\n    this.isDesktop = this.startService.isDesktop;\r\n    //IMPOSTO DESKTOP FALSE\r\n    this.isDesktop = false;\r\n\r\n    let idCorso = '';\r\n    this.actRouter.paramMap.subscribe(param => {\r\n      if (param.has('courseId')) {\r\n        \r\n        //ID Corso\r\n        idCorso = param.get('courseId')\r\n\r\n        //creo il loading\r\n\r\n        this.loadingController.create({\r\n          spinner: \"circular\",\r\n          message: 'Caricamento',\r\n          backdropDismiss: true\r\n        })\r\n        .then(elLoading => {\r\n          elLoading.present();\r\n          \r\n          //faccio la richiesta\r\n          this.startService.newRequestCorsoById(idCorso)\r\n          .then((corso:Corso) => {\r\n\r\n            if (corso) {\r\n\r\n              //se ho trovato un corso, lo prendo\r\n              this.myCorso = corso;\r\n\r\n              \r\n\r\n              //ora richiedo la location\r\n              this.requestLocationById(this.myCorso.IDLOCATION);\r\n            }\r\n            else{\r\n              elLoading.dismiss();\r\n              this.showMessage('Non ho trovato nessun corso');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            elLoading.dismiss();\r\n            this.showMessage('Errore di connessione');\r\n            console.log(error);\r\n          })\r\n        })      \r\n  \r\n   \r\n      }\r\n      else {\r\n        this.navCtrl.navigateRoot(['/']);\r\n      }\r\n    })             \r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subMyCorso) {\r\n      this.subMyCorso.unsubscribe();\r\n    }\r\n\r\n    if (this.subUserLogged) {\r\n      this.subUserLogged.unsubscribe();\r\n    }\r\n\r\n    if (this.listenSelectedArea) {\r\n      this.listenSelectedArea.unsubscribe();\r\n    }\r\n  }\r\n\r\n  requestLocationById(idLocation: string){\r\n\r\n    //preparo il filtro\r\n    let filterLocation = new Location(true);\r\n    filterLocation.ID = idLocation;\r\n    \r\n    //faccio la richiesta\r\n    this.docStructureService.requestNew(filterLocation).then(elLocation => {\r\n      this.loadingController.dismiss();\r\n      if (elLocation && elLocation!=[]){\r\n\r\n        //se ho trovato una location me la salvo\r\n        this.myLocation = elLocation[0];\r\n      }\r\n      else{\r\n        this.showMessage('Non ho trovato la location');\r\n      }\r\n    }).catch(error => {\r\n      this.loadingController.dismiss();\r\n      this.showMessage('Errore di connessione');\r\n    })\r\n  }\r\n\r\n  /* ****** CALENDAR ******** */\r\n  onClickCardCalendar() {\r\n    /* Apro in modale il calendario */\r\n    this.mdlController\r\n    .create({\r\n      component: CalendarPage,\r\n      componentProps: {\r\n        'myCorso': this.myCorso\r\n      }\r\n    })\r\n    .then(formModal => {\r\n      formModal.present();\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * Click sul pulsante Allegati\r\n   */\r\n  onClickAllegati(){\r\n    this.mdlController.create({\r\n      component: AllegatilistPage,\r\n      componentProps:{\r\n        'myCorso' : this.myCorso\r\n      }\r\n    })\r\n    .then(elModal => {\r\n      elModal.present()\r\n    })\r\n  }\r\n\r\n\r\n  /**\r\n  * Evento Click sul pulsante di Iscrizione\r\n  */\r\n  onClickIscrizione() {\r\n\r\n    if (this.enableIscrizioni && this.myCorso.flagIscrizioniAperte()) {\r\n      \r\n      //Non solo loggato, devo loggarmi\r\n      if (!this.userLogged) {\r\n  \r\n        //Prima di aprire la pagina di login\r\n        //impostare nel servizio Start forceIdArea = \r\n        this.startService.setIdAreaForcedForLogin();\r\n        \r\n        //Ora preparo e creo la pagina di Login\r\n        this.mdlController.create({\r\n          component:NewLoginPage\r\n        })\r\n          .then(modal=>{\r\n            modal.present();\r\n          });\r\n  \r\n      }\r\n      else {\r\n  \r\n        let paramsVerifica : ParamsVerifica;\r\n        if (this.docUser) {\r\n          \r\n          //Recupero i parametri di verifica\r\n          paramsVerifica = this.docUser.getParamsVerifica(this.startService.actualStartConfig.gruppo)\r\n    \r\n          if (paramsVerifica){\r\n            //se ci sono parametri, significa che devo chiamare la pagina di verifica\r\n            this.mdlController.create({\r\n              component: VerifyPage,\r\n              componentProps:{\r\n                params: paramsVerifica\r\n              } \r\n            })\r\n            .then(elModal => {\r\n              elModal.present();\r\n            })\r\n          }\r\n          else{\r\n    \r\n            //Posso procedere con la pagina di prenotazione\r\n            this.mdlController.create({\r\n              component: BookcoursePage,\r\n              componentProps: {\r\n                params: this.myCorso\r\n              }\r\n            })\r\n            .then(elModal => {\r\n              elModal.present();\r\n            })\r\n    \r\n          }\r\n  \r\n        }\r\n  \r\n        \r\n      }\r\n      \r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Chiama il servizio passandogli l'id dell'oggetto corso, \r\n   * e restituisce la stringa dell'icona\r\n   * @param corso l'oggetto corso per cui si richiede l'icona\r\n   */\r\n  getIcon(corso:Corso)\r\n  {\r\n    return this.startService.getSportIcon(corso.IDSPORT);\r\n  }\r\n\r\n  /**\r\n   * Indica se mostrare o no il Bollino Prova\r\n   * @returns TRUE/FALSE\r\n   */\r\n   showFabProva():boolean {\r\n    let show:boolean = false; \r\n    if (this.myCorso && this.myCorso.TIPO == TipoCorso.prova) {\r\n      show = true;\r\n    }\r\n\r\n    return show;\r\n\r\n  }  \r\n\r\n\r\n /**\r\n * Torna l'eventuale classe speciale da applicare\r\n */\r\n  getClassHeader(): string {\r\n    let myClass = 'title';\r\n    if (this.myCorso) {\r\n\r\n      if (this.enableIscrizioni && this.myCorso.flagIscrizioniAperte()) {\r\n        myClass = 'special';\r\n      }\r\n    }\r\n    \r\n    return myClass;\r\n  }\r\n\r\n  /**\r\n   * Colore dipendente dall'iscrizione\r\n   * @returns Colore da applicare all'item che forma la testata\r\n   */\r\n  getColorHeader(): string {\r\n    let myClass = 'light';\r\n    if (this.myCorso) {\r\n\r\n      if (this.enableIscrizioni && this.myCorso.flagIscrizioniAperte()) {\r\n        myClass = 'success';\r\n      }\r\n    }\r\n    \r\n    return myClass;\r\n  }  \r\n\r\n  /**\r\n   * Indica se mostrare il pulsante delle Iscrizioni\r\n   */\r\n  showIscrizioniButton():boolean {\r\n    let show = false;\r\n    if (this.myCorso) {\r\n      if (this.enableIscrizioni && this.myCorso.flagIscrizioniAperte()) {\r\n        show = true;\r\n      }\r\n    }\r\n\r\n    return show;\r\n  }\r\n\r\n  /**\r\n   * Mostra un messaggio a video\r\n   * @param messaggio Messaggio\r\n   */\r\n  showMessage(messaggio:string){\r\n    this.toastController.create({\r\n      message: messaggio,\r\n      duration: 3000\r\n    })\r\n  }\r\n}\r\n","<ion-header class=\"ion-no-border\">\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button defaultHref=\"/\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>{{ myCorso.TIPO | tipoCorso }}</ion-title>\r\n    <ion-buttons slot=\"end\">\r\n      <ion-button> </ion-button>\r\n      <ion-button> </ion-button>\r\n    </ion-buttons>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <ion-card [class]=\"getClassHeader()\">\r\n    <ion-card-header class=\"ion-no-padding\">\r\n      <!-- FAB CON LA VOCE PROVA -->\r\n      <ion-fab *ngIf=\"showFabProva()\" vertical=\"top\" horizontal=\"end\">\r\n        <ion-fab-button color=\"danger\">Prova</ion-fab-button>\r\n      </ion-fab>\r\n\r\n      <ion-item [color]=\"getColorHeader()\" button=\"false\" lines=\"none\">\r\n        <i class=\"icon-sport\" slot=\"start\"><span [innerHTML]=\"getIcon(myCorso)\"></span></i>\r\n\r\n        <ion-label>\r\n          <h1 class=\"ion-text-wrap\">{{ myCorso.DENOMINAZIONE }}</h1>\r\n          <h3 class=\"ion-text-wrap\">{{ myCorso['_DENOMINAZIONE_Sport'] }}</h3>\r\n        </ion-label>\r\n      </ion-item>\r\n    </ion-card-header>\r\n\r\n    <ion-card-content class=\"ion-padding-horizontal\" style=\"display: flex\" *ngIf=\"myCorso?.existProgrammaCorso()\">\r\n      <ion-label class=\"ion-text-wrap\">\r\n        <span [innerHTML]=\"myCorso.getFullProgrammaHTML()\"></span>\r\n      </ion-label>\r\n    </ion-card-content>\r\n  </ion-card>\r\n\r\n  <ion-grid class=\"links\">\r\n    <ion-row>\r\n      <ion-col>\r\n        <ion-button expand=\"block\" fill=\"solid\" color=\"light\" (click)=\"onClickCardCalendar()\">\r\n          <ion-icon name=\"calendar\" slot=\"start\"></ion-icon>\r\n          Calendario\r\n        </ion-button>\r\n      </ion-col>\r\n\r\n      <ion-col>\r\n        \r\n        <ion-button\r\n              (click)=\"onClickAllegati()\" \r\n              expand=\"block\" \r\n              fill=\"solid\" \r\n              color=\"light\">\r\n\r\n          <ion-icon slot=\"start\" name=\"document-attach-outline\"></ion-icon>\r\n          Allegati\r\n        </ion-button>\r\n      </ion-col>\r\n\r\n    </ion-row>\r\n  </ion-grid>\r\n\r\n  <ion-list class=\"ion-no-padding\">\r\n    <!-- GIORNATE -->\r\n    <ion-item-group>\r\n      <ion-item-divider color=\"light\">\r\n        <ion-label>\r\n          <h2>Quando</h2>\r\n        </ion-label>\r\n\r\n        <ion-label slot=\"end\" *ngIf=\"myCorso.NUMEROLEZIONI\">\r\n          <p class=\"num-lezioni\">\r\n            {{myCorso.NUMEROLEZIONI}} {{myCorso.NUMEROLEZIONI > 1 ?'Incontri\r\n            ':'Incontro '}}\r\n          </p>\r\n        </ion-label>\r\n      </ion-item-divider>\r\n\r\n      <ion-item button=\"false\" lines=\"none\">\r\n        <ion-label color=\"primary\">\r\n          <p *ngIf=\"myCorso.tempoCorso()=='next'\">\r\n            da {{myCorso.DATAINIZIO|date:'EEEE dd/MM/yyyy'}} a\r\n            {{myCorso.DATAFINE|date:'EEEE dd/MM/yyyy'}}\r\n          </p>\r\n          <p *ngIf=\"myCorso.tempoCorso()=='during'\">\r\n            Termina {{myCorso.DATAFINE|date:'EEEE dd/MM/yyyy'}}\r\n          </p>\r\n          <p *ngIf=\"myCorso.tempoCorso()=='stop'\">\r\n            Concluso {{myCorso.DATAFINE|date:'EEEE dd/MM/yyyy'}}\r\n          </p>\r\n        </ion-label>\r\n      </ion-item>\r\n\r\n      <!-- ORA E DURATA -->\r\n      <ion-grid>\r\n        <ion-row>\r\n          <ion-col size=\"6\" size-sm=\"6\">\r\n            <ion-button size=\"small\" color=\"primary\" expand=\"block\" fill=\"outline\">\r\n              <ion-icon name=\"time\" slot=\"start\"></ion-icon>\r\n              {{myCorso.ORAINIZIO | date:'HH:mm'}}\r\n            </ion-button>\r\n          </ion-col>\r\n\r\n          <ion-col size=\"6\" size-sm=\"6\">\r\n            <ion-button size=\"small\" color=\"primary\" expand=\"block\" fill=\"outline\">\r\n              <ion-icon name=\"infinite\" slot=\"start\"></ion-icon>\r\n              {{myCorso.ORELEZIONE}} {{myCorso.ORELEZIONE > 1 ?'Ore':'Ora'}}\r\n            </ion-button>\r\n          </ion-col>\r\n        </ion-row>\r\n      </ion-grid>\r\n\r\n      <!-- GIORNATA SETTIMANA -->\r\n      <app-settimana-block [listDays]=\"myCorso._SETTIMANA\">\r\n      </app-settimana-block>\r\n    </ion-item-group>\r\n\r\n    <!-- INFO ISCRIZIONI -->\r\n    <ion-item-group *ngIf=\"myCorso?.ISCRIZIONEDAL || myCorso?.ISCRIZIONEAL\">\r\n      <ion-item-divider color=\"light\">\r\n        <ion-label>\r\n          <h2>Iscrizioni</h2>\r\n        </ion-label>\r\n      </ion-item-divider>\r\n\r\n      <ion-item *ngIf=\"myCorso?.ISCRIZIONEDAL\">\r\n        <ion-icon [color]=\"iconColor\" slot=\"start\" name=\"timer-outline\">\r\n        </ion-icon>\r\n\r\n        <ion-label class=\"ion-text-wrap\">\r\n          <ion-text color=\"primary\">\r\n            <h3>{{myCorso.ISCRIZIONEDAL | date : 'EEEE dd/MM/yyyy hh:mm'}}</h3>\r\n          </ion-text>\r\n\r\n          <ion-text color=\"secondary\">\r\n            <p>Iscrizione aperte da</p>\r\n          </ion-text>\r\n        </ion-label>\r\n      </ion-item>\r\n\r\n      <ion-item *ngIf=\"myCorso?.ISCRIZIONEAL\">\r\n        <ion-icon [color]=\"iconColor\" slot=\"start\" name=\"stopwatch-outline\">\r\n        </ion-icon>\r\n\r\n        <ion-label class=\"ion-text-wrap\">\r\n          <ion-text color=\"primary\">\r\n            <h3>{{myCorso.ISCRIZIONEAL | date : 'EEEE dd/MM/yyyy hh:mm'}}</h3>\r\n          </ion-text>\r\n\r\n          <ion-text color=\"danger\">\r\n            <p>Chiusura Iscrizioni</p>\r\n          </ion-text>\r\n        </ion-label>\r\n      </ion-item>\r\n    </ion-item-group>\r\n\r\n    <!-- ADATTO A -->\r\n    <ion-item-group>\r\n      <ion-item-divider color=\"light\">\r\n        <ion-label>\r\n          <h2>Rivolto a</h2>\r\n        </ion-label>\r\n      </ion-item-divider>\r\n\r\n      <ion-item>\r\n        <ion-icon name=\"stats-chart-outline\" slot=\"start\" [color]=\"iconColor\"></ion-icon>\r\n        <ion-label>{{myCorso['_DENOMINAZIONE_Livello']?myCorso['_DENOMINAZIONE_Livello']:'Tutti\r\n          i Livelli'}}</ion-label>\r\n      </ion-item>\r\n\r\n      <ion-item>\r\n        <ion-icon name=\"bookmark-outline\" slot=\"start\" [color]=\"iconColor\"></ion-icon>\r\n        <ion-label>{{myCorso['_DESCTOOLTIP_CategoriaEta']?myCorso['_DESCTOOLTIP_CategoriaEta']:'Per\r\n          tutte le età'}}</ion-label>\r\n      </ion-item>\r\n\r\n      <ion-item lines=\"none\" *ngIf=\"myCorso.TARGETSESSO\">\r\n        <ion-icon name=\"transgender-outline\" slot=\"start\" [color]=\"iconColor\"></ion-icon>\r\n        <ion-label>{{myCorso.TARGETSESSO | targetSesso}}</ion-label>\r\n      </ion-item>\r\n    </ion-item-group>\r\n\r\n    <!-- LOCATION -->\r\n\r\n    <ion-item-group>\r\n      <ion-item-divider color=\"light\">\r\n        <ion-label>\r\n          <h2>Dove</h2>\r\n        </ion-label>\r\n      </ion-item-divider>\r\n\r\n      <!-- COMUNE -->\r\n      <ion-item *ngIf=\"myLocation?.COMUNE\">\r\n        <ion-icon name=\"home-outline\" slot=\"start\" [color]=\"iconColor\"></ion-icon>\r\n        <ion-label>{{myLocation?.COMUNE}}</ion-label>\r\n      </ion-item>\r\n\r\n      <!-- INDIRIZZO -->\r\n      <ion-item *ngIf=\"myLocation?.INDIRIZZO\">\r\n        <ion-icon name=\"navigate-outline\" slot=\"start\" [color]=\"iconColor\">\r\n        </ion-icon>\r\n\r\n        <ion-label> {{myLocation?.INDIRIZZO}} </ion-label>\r\n      </ion-item>\r\n\r\n      <ion-item *ngIf=\"myLocation?.TELEFONO\">\r\n        <ion-icon name=\"call-outline\" slot=\"start\" [color]=\"iconColor\"></ion-icon>\r\n        <ion-label>{{myLocation?.TELEFONO}}</ion-label>\r\n      </ion-item>\r\n    </ion-item-group>\r\n  </ion-list>\r\n  <!-- END LOCATION -->\r\n</ion-content>\r\n\r\n<ion-footer>\r\n  <ion-button color=\"success\" fill=\"solid\" expand=\"block\" *ngIf=\"showIscrizioniButton()\" (click)=\"onClickIscrizione()\">\r\n    Iscriviti adesso\r\n  </ion-button>\r\n\r\n  <ion-text color=\"danger\" class=\"ion-text-center\" *ngIf=\"!showIscrizioniButton()\">\r\n    <h6>Contatta la struttura per iscriverti al corso</h6>\r\n  </ion-text>\r\n</ion-footer>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CoursePage } from './course.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CoursePage\r\n  },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CoursePageRoutingModule {}\r\n"],"sourceRoot":"webpack:///"}