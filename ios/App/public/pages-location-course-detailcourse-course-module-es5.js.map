{"version":3,"sources":["webpack:///src/app/pages/location/course/detailcourse/course.module.ts","webpack:///src/app/pages/location/course/detailcourse/course.page.ts","webpack:///src/app/pages/location/course/detailcourse/course.page.html","webpack:///src/app/pages/location/course/detailcourse/course-routing.module.ts"],"names":["CoursePageModule","CoursePage","startService","actRouter","navCtrl","mdlController","docStructureService","loadingController","toastController","myCorso","myLocation","iconColor","userLogged","enableIscrizioni","onListenSelectedArea","onListenSelectedUser","listenSelectedArea","areaSelected","subscribe","elArea","selectedArea","APPISCRIZIONI","error","subUserLogged","utenteLogged","element","subUser","utente","elUser","docUser","isDesktop","idCorso","paramMap","param","has","get","create","spinner","message","backdropDismiss","then","elLoading","present","newRequestCorsoById","corso","requestLocationById","IDLOCATION","dismiss","showMessage","console","log","navigateRoot","subMyCorso","unsubscribe","idLocation","filterLocation","ID","requestNew","elLocation","component","componentProps","formModal","elModal","flagIscrizioniAperte","setIdAreaForcedForLogin","modal","paramsVerifica","getParamsVerifica","actualStartConfig","gruppo","params","getSportIcon","IDSPORT","show","TIPO","prova","myClass","messaggio","duration","onClickCardCalendar","onClickAllegati","routes","path","CoursePageRoutingModule","forChild"],"mappings":"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","file":"pages-location-course-detailcourse-course-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { CoursePageRoutingModule } from './course-routing.module';\r\n\r\nimport { CoursePage } from './course.page';\r\nimport { PipesModule } from 'src/app/shared/pipes/pipes.module';\r\nimport { CalendarPageModule } from './calendar/calendar.module';\r\nimport { CalendarPage } from './calendar/calendar.page';\r\nimport { VerifyPageModule } from 'src/app/pages/auth/verify/verify.module';\r\nimport { VerifyPage } from 'src/app/pages/auth/verify/verify.page';\r\nimport { NewLoginPage } from 'src/app/pages/auth/new-login/new-login.page'\r\nimport { NewLoginPageModule } from 'src/app/pages/auth/new-login/new-login.module'\r\nimport { BookcoursePageModule } from '../bookcourse/bookcourse.module';\r\nimport { BookcoursePage } from '../bookcourse/bookcourse.page';\r\nimport { SharedComponentsModule } from 'src/app/shared/components/shared-components.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IonicModule,\r\n    CoursePageRoutingModule,\r\n    FormsModule,\r\n    PipesModule,\r\n    CalendarPageModule,\r\n    NewLoginPageModule,\r\n    VerifyPageModule,\r\n    BookcoursePageModule,\r\n    SharedComponentsModule\r\n    \r\n  ],\r\n  declarations: [CoursePage],\r\n  entryComponents: [CalendarPage, NewLoginPage, VerifyPage, BookcoursePage]\r\n})\r\nexport class CoursePageModule {}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Corso } from 'src/app/models/corso.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { StartService } from 'src/app/services/start.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NavController, ModalController, LoadingController, ToastController } from '@ionic/angular';\r\nimport { Location } from 'src/app/models/location.model';\r\nimport { CalendarPage } from './calendar/calendar.page';\r\nimport { DocstructureService } from 'src/app/library/services/docstructure.service';\r\nimport { Area } from 'src/app/models/area.model';\r\nimport { NewLoginPage } from 'src/app/pages/auth/new-login/new-login.page';\r\nimport { VerifyPage } from 'src/app/pages/auth/verify/verify.page';\r\nimport { ParamsVerifica, Utente } from 'src/app/models/utente.model';\r\nimport { BookcoursePage } from '../bookcourse/bookcourse.page';\r\nimport { TipoCorso } from 'src/app/models/valuelist.model';\r\nimport { AllegatilistPage } from 'src/app/pages/history/historycourse/allegatilist/allegatilist.page';\r\n\r\n@Component({\r\n  selector: 'app-course',\r\n  templateUrl: './course.page.html',\r\n  styleUrls: ['./course.page.scss'],\r\n})\r\n\r\nexport class CoursePage implements OnInit, OnDestroy {\r\n\r\n  myCorso: Corso = new Corso();\r\n  subMyCorso: Subscription;\r\n  myLocation: Location = new Location(); \r\n  iconColor = 'primary';\r\n  userLogged = false;\r\n  subUserLogged: Subscription;\r\n  isDesktop: boolean;\r\n  docUser: Utente;\r\n  subUser: Subscription;\r\n  \r\n\r\n  //Gestione Abilitazione Iscrizioni\r\n  listenSelectedArea:Subscription;\r\n  selectedArea: Area;\r\n  enableIscrizioni:boolean = false;  \r\n\r\n\r\n  constructor(\r\n    private startService: StartService,\r\n    private actRouter: ActivatedRoute,\r\n    private navCtrl: NavController,\r\n    private mdlController: ModalController,\r\n    private docStructureService : DocstructureService,\r\n    private loadingController : LoadingController,\r\n    private toastController : ToastController\r\n  ) {\r\n    \r\n    //Ascolto cambiamenti dell'Area per l'abilitazione delle iscrizioni\r\n    this.onListenSelectedArea();\r\n\r\n    //Ascolto cambiamento Utente\r\n    this.onListenSelectedUser();\r\n\r\n  }\r\n\r\n\r\n  \r\n/**\r\n * In ascolto dell'area selezionata, per capire se solo abilitate le iscrizioni\r\n */\r\n  onListenSelectedArea() {\r\n   this.listenSelectedArea = this.startService.areaSelected\r\n    .subscribe(elArea => {\r\n\r\n      this.selectedArea = elArea;\r\n\r\n      //Controllo se nell'area sono abilitate le iscrizioni\r\n      if (this.selectedArea.APPISCRIZIONI == true) {\r\n        this.enableIscrizioni = true;\r\n      }\r\n      else {\r\n        this.enableIscrizioni = false;\r\n      }\r\n  }, error => {\r\n    this.enableIscrizioni = false;\r\n  })\r\n}\r\n\r\n/**\r\n * Controllo cambio Utente\r\n */\r\nonListenSelectedUser() {\r\n    //Controllo se l'utente è loggato\r\n    this.subUserLogged = this.startService.utenteLogged.subscribe(element => {\r\n      this.userLogged = element;\r\n    });  \r\n\r\n\r\n    //Recupero il documento utente\r\n    this.subUser = this.startService.utente.subscribe(elUser => {\r\n      this.docUser = elUser;\r\n    })\r\n}\r\n              \r\n  ngOnInit() {\r\n    //SEMBRA NON FUNZIONARE CORRETTAMENTE\r\n    this.isDesktop = this.startService.isDesktop;\r\n    //IMPOSTO DESKTOP FALSE\r\n    this.isDesktop = false;\r\n\r\n    let idCorso = '';\r\n    this.actRouter.paramMap.subscribe(param => {\r\n      if (param.has('courseId')) {\r\n        \r\n        //ID Corso\r\n        idCorso = param.get('courseId')\r\n\r\n        //creo il loading\r\n\r\n        this.loadingController.create({\r\n          spinner: \"circular\",\r\n          message: 'Caricamento',\r\n          backdropDismiss: true\r\n        })\r\n        .then(elLoading => {\r\n          elLoading.present();\r\n          \r\n          //faccio la richiesta\r\n          this.startService.newRequestCorsoById(idCorso)\r\n          .then((corso:Corso) => {\r\n\r\n            if (corso) {\r\n\r\n              //se ho trovato un corso, lo prendo\r\n              this.myCorso = corso;\r\n\r\n              \r\n\r\n              //ora richiedo la location\r\n              this.requestLocationById(this.myCorso.IDLOCATION);\r\n            }\r\n            else{\r\n              elLoading.dismiss();\r\n              this.showMessage('Non ho trovato nessun corso');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            elLoading.dismiss();\r\n            this.showMessage('Errore di connessione');\r\n            console.log(error);\r\n          })\r\n        })      \r\n  \r\n   \r\n      }\r\n      else {\r\n        this.navCtrl.navigateRoot(['/']);\r\n      }\r\n    })             \r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subMyCorso) {\r\n      this.subMyCorso.unsubscribe();\r\n    }\r\n\r\n    if (this.subUserLogged) {\r\n      this.subUserLogged.unsubscribe();\r\n    }\r\n\r\n    if (this.listenSelectedArea) {\r\n      this.listenSelectedArea.unsubscribe();\r\n    }\r\n  }\r\n\r\n  requestLocationById(idLocation: string){\r\n\r\n    //preparo il filtro\r\n    let filterLocation = new Location(true);\r\n    filterLocation.ID = idLocation;\r\n    \r\n    //faccio la richiesta\r\n    this.docStructureService.requestNew(filterLocation).then(elLocation => {\r\n      this.loadingController.dismiss();\r\n      if (elLocation && elLocation!=[]){\r\n\r\n        //se ho trovato una location me la salvo\r\n        this.myLocation = elLocation[0];\r\n      }\r\n      else{\r\n        this.showMessage('Non ho trovato la location');\r\n      }\r\n    }).catch(error => {\r\n      this.loadingController.dismiss();\r\n      this.showMessage('Errore di connessione');\r\n    })\r\n  }\r\n\r\n  /* ****** CALENDAR ******** */\r\n  onClickCardCalendar() {\r\n    /* Apro in modale il calendario */\r\n    this.mdlController\r\n    .create({\r\n      component: CalendarPage,\r\n      componentProps: {\r\n        'myCorso': this.myCorso\r\n      }\r\n    })\r\n    .then(formModal => {\r\n      formModal.present();\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * Click sul pulsante Allegati\r\n   */\r\n  onClickAllegati(){\r\n    this.mdlController.create({\r\n      component: AllegatilistPage,\r\n      componentProps:{\r\n        'myCorso' : this.myCorso\r\n      }\r\n    })\r\n    .then(elModal => {\r\n      elModal.present()\r\n    })\r\n  }\r\n\r\n\r\n  /**\r\n  * Evento Click sul pulsante di Iscrizione\r\n  */\r\n  onClickIscrizione() {\r\n\r\n    if (this.enableIscrizioni && this.myCorso.flagIscrizioniAperte()) {\r\n      \r\n      //Non solo loggato, devo loggarmi\r\n      if (!this.userLogged) {\r\n  \r\n        //Prima di aprire la pagina di login\r\n        //impostare nel servizio Start forceIdArea = \r\n        this.startService.setIdAreaForcedForLogin();\r\n        \r\n        //Ora preparo e creo la pagina di Login\r\n        this.mdlController.create({\r\n          component:NewLoginPage\r\n        })\r\n          .then(modal=>{\r\n            modal.present();\r\n          });\r\n  \r\n      }\r\n      else {\r\n  \r\n        let paramsVerifica : ParamsVerifica;\r\n        if (this.docUser) {\r\n          \r\n          //Recupero i parametri di verifica\r\n          paramsVerifica = this.docUser.getParamsVerifica(this.startService.actualStartConfig.gruppo)\r\n    \r\n          if (paramsVerifica){\r\n            //se ci sono parametri, significa che devo chiamare la pagina di verifica\r\n            this.mdlController.create({\r\n              component: VerifyPage,\r\n              componentProps:{\r\n                params: paramsVerifica\r\n              } \r\n            })\r\n            .then(elModal => {\r\n              elModal.present();\r\n            })\r\n          }\r\n          else{\r\n    \r\n            //Posso procedere con la pagina di prenotazione\r\n            this.mdlController.create({\r\n              component: BookcoursePage,\r\n              componentProps: {\r\n                params: this.myCorso\r\n              }\r\n            })\r\n            .then(elModal => {\r\n              elModal.present();\r\n            })\r\n    \r\n          }\r\n  \r\n        }\r\n  \r\n        \r\n      }\r\n      \r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Chiama il servizio passandogli l'id dell'oggetto corso, \r\n   * e restituisce la stringa dell'icona\r\n   * @param corso l'oggetto corso per cui si richiede l'icona\r\n   */\r\n  getIcon(corso:Corso)\r\n  {\r\n    return this.startService.getSportIcon(corso.IDSPORT);\r\n  }\r\n\r\n  /**\r\n   * Indica se mostrare o no il Bollino Prova\r\n   * @returns TRUE/FALSE\r\n   */\r\n   showFabProva():boolean {\r\n    let show:boolean = false; \r\n    if (this.myCorso && this.myCorso.TIPO == TipoCorso.prova) {\r\n      show = true;\r\n    }\r\n\r\n    return show;\r\n\r\n  }  \r\n\r\n\r\n /**\r\n * Torna l'eventuale classe speciale da applicare\r\n */\r\n  getClassHeader(): string {\r\n    let myClass = 'title';\r\n    if (this.myCorso) {\r\n\r\n      if (this.enableIscrizioni && this.myCorso.flagIscrizioniAperte()) {\r\n        myClass = 'special';\r\n      }\r\n    }\r\n    \r\n    return myClass;\r\n  }\r\n\r\n  /**\r\n   * Colore dipendente dall'iscrizione\r\n   * @returns Colore da applicare all'item che forma la testata\r\n   */\r\n  getColorHeader(): string {\r\n    let myClass = 'light';\r\n    if (this.myCorso) {\r\n\r\n      if (this.enableIscrizioni && this.myCorso.flagIscrizioniAperte()) {\r\n        myClass = 'success';\r\n      }\r\n    }\r\n    \r\n    return myClass;\r\n  }  \r\n\r\n  /**\r\n   * Indica se mostrare il pulsante delle Iscrizioni\r\n   */\r\n  showIscrizioniButton():boolean {\r\n    let show = false;\r\n    if (this.myCorso) {\r\n      if (this.enableIscrizioni && this.myCorso.flagIscrizioniAperte()) {\r\n        show = true;\r\n      }\r\n    }\r\n\r\n    return show;\r\n  }\r\n\r\n  /**\r\n   * Mostra un messaggio a video\r\n   * @param messaggio Messaggio\r\n   */\r\n  showMessage(messaggio:string){\r\n    this.toastController.create({\r\n      message: messaggio,\r\n      duration: 3000\r\n    })\r\n  }\r\n}\r\n","<ion-header class=\"ion-no-border\">\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button defaultHref=\"/\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>{{ myCorso.TIPO | tipoCorso }}</ion-title>\r\n    <ion-buttons slot=\"end\">\r\n      <ion-button> </ion-button>\r\n      <ion-button> </ion-button>\r\n    </ion-buttons>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <ion-card [class]=\"getClassHeader()\">\r\n    <ion-card-header class=\"ion-no-padding\">\r\n      <!-- FAB CON LA VOCE PROVA -->\r\n      <ion-fab *ngIf=\"showFabProva()\" vertical=\"top\" horizontal=\"end\">\r\n        <ion-fab-button color=\"danger\">Prova</ion-fab-button>\r\n      </ion-fab>\r\n\r\n      <ion-item [color]=\"getColorHeader()\" button=\"false\" lines=\"none\">\r\n        <i class=\"icon-sport\" slot=\"start\"><span [innerHTML]=\"getIcon(myCorso)\"></span></i>\r\n\r\n        <ion-label>\r\n          <h1 class=\"ion-text-wrap\">{{ myCorso.DENOMINAZIONE }}</h1>\r\n          <h3 class=\"ion-text-wrap\">{{ myCorso['_DENOMINAZIONE_Sport'] }}</h3>\r\n        </ion-label>\r\n      </ion-item>\r\n    </ion-card-header>\r\n\r\n    <ion-card-content class=\"ion-padding-horizontal\" style=\"display: flex\" *ngIf=\"myCorso?.existProgrammaCorso()\">\r\n      <ion-label class=\"ion-text-wrap\">\r\n        <span [innerHTML]=\"myCorso.getFullProgrammaHTML()\"></span>\r\n      </ion-label>\r\n    </ion-card-content>\r\n  </ion-card>\r\n\r\n  <ion-grid class=\"links\">\r\n    <ion-row>\r\n      <ion-col>\r\n        <ion-button expand=\"block\" fill=\"solid\" color=\"light\" (click)=\"onClickCardCalendar()\">\r\n          <ion-icon name=\"calendar\" slot=\"start\"></ion-icon>\r\n          Calendario\r\n        </ion-button>\r\n      </ion-col>\r\n\r\n      <ion-col>\r\n        \r\n        <ion-button\r\n              (click)=\"onClickAllegati()\" \r\n              expand=\"block\" \r\n              fill=\"solid\" \r\n              color=\"light\">\r\n\r\n          <ion-icon slot=\"start\" name=\"document-attach-outline\"></ion-icon>\r\n          Allegati\r\n        </ion-button>\r\n      </ion-col>\r\n\r\n    </ion-row>\r\n  </ion-grid>\r\n\r\n  <ion-list class=\"ion-no-padding\">\r\n    <!-- GIORNATE -->\r\n    <ion-item-group>\r\n      <ion-item-divider color=\"light\">\r\n        <ion-label>\r\n          <h2>Quando</h2>\r\n        </ion-label>\r\n\r\n        <ion-label slot=\"end\" *ngIf=\"myCorso.NUMEROLEZIONI\">\r\n          <p class=\"num-lezioni\">\r\n            {{myCorso.NUMEROLEZIONI}} {{myCorso.NUMEROLEZIONI > 1 ?'Incontri\r\n            ':'Incontro '}}\r\n          </p>\r\n        </ion-label>\r\n      </ion-item-divider>\r\n\r\n      <ion-item button=\"false\" lines=\"none\">\r\n        <ion-label color=\"primary\">\r\n          <p *ngIf=\"myCorso.tempoCorso()=='next'\">\r\n            da {{myCorso.DATAINIZIO|date:'EEEE dd/MM/yyyy'}} a\r\n            {{myCorso.DATAFINE|date:'EEEE dd/MM/yyyy'}}\r\n          </p>\r\n          <p *ngIf=\"myCorso.tempoCorso()=='during'\">\r\n            Termina {{myCorso.DATAFINE|date:'EEEE dd/MM/yyyy'}}\r\n          </p>\r\n          <p *ngIf=\"myCorso.tempoCorso()=='stop'\">\r\n            Concluso {{myCorso.DATAFINE|date:'EEEE dd/MM/yyyy'}}\r\n          </p>\r\n        </ion-label>\r\n      </ion-item>\r\n\r\n      <!-- ORA E DURATA -->\r\n      <ion-grid>\r\n        <ion-row>\r\n          <ion-col size=\"6\" size-sm=\"6\">\r\n            <ion-button size=\"small\" color=\"primary\" expand=\"block\" fill=\"outline\">\r\n              <ion-icon name=\"time\" slot=\"start\"></ion-icon>\r\n              {{myCorso.ORAINIZIO | date:'HH:mm'}}\r\n            </ion-button>\r\n          </ion-col>\r\n\r\n          <ion-col size=\"6\" size-sm=\"6\">\r\n            <ion-button size=\"small\" color=\"primary\" expand=\"block\" fill=\"outline\">\r\n              <ion-icon name=\"infinite\" slot=\"start\"></ion-icon>\r\n              {{myCorso.ORELEZIONE}} {{myCorso.ORELEZIONE > 1 ?'Ore':'Ora'}}\r\n            </ion-button>\r\n          </ion-col>\r\n        </ion-row>\r\n      </ion-grid>\r\n\r\n      <!-- GIORNATA SETTIMANA -->\r\n      <app-settimana-block [listDays]=\"myCorso._SETTIMANA\">\r\n      </app-settimana-block>\r\n    </ion-item-group>\r\n\r\n    <!-- INFO ISCRIZIONI -->\r\n    <ion-item-group *ngIf=\"myCorso?.ISCRIZIONEDAL || myCorso?.ISCRIZIONEAL\">\r\n      <ion-item-divider color=\"light\">\r\n        <ion-label>\r\n          <h2>Iscrizioni</h2>\r\n        </ion-label>\r\n      </ion-item-divider>\r\n\r\n      <ion-item *ngIf=\"myCorso?.ISCRIZIONEDAL\">\r\n        <ion-icon [color]=\"iconColor\" slot=\"start\" name=\"timer-outline\">\r\n        </ion-icon>\r\n\r\n        <ion-label class=\"ion-text-wrap\">\r\n          <ion-text color=\"primary\">\r\n            <h3>{{myCorso.ISCRIZIONEDAL | date : 'EEEE dd/MM/yyyy hh:mm'}}</h3>\r\n          </ion-text>\r\n\r\n          <ion-text color=\"secondary\">\r\n            <p>Iscrizione aperte da</p>\r\n          </ion-text>\r\n        </ion-label>\r\n      </ion-item>\r\n\r\n      <ion-item *ngIf=\"myCorso?.ISCRIZIONEAL\">\r\n        <ion-icon [color]=\"iconColor\" slot=\"start\" name=\"stopwatch-outline\">\r\n        </ion-icon>\r\n\r\n        <ion-label class=\"ion-text-wrap\">\r\n          <ion-text color=\"primary\">\r\n            <h3>{{myCorso.ISCRIZIONEAL | date : 'EEEE dd/MM/yyyy hh:mm'}}</h3>\r\n          </ion-text>\r\n\r\n          <ion-text color=\"danger\">\r\n            <p>Chiusura Iscrizioni</p>\r\n          </ion-text>\r\n        </ion-label>\r\n      </ion-item>\r\n    </ion-item-group>\r\n\r\n    <!-- ADATTO A -->\r\n    <ion-item-group>\r\n      <ion-item-divider color=\"light\">\r\n        <ion-label>\r\n          <h2>Rivolto a</h2>\r\n        </ion-label>\r\n      </ion-item-divider>\r\n\r\n      <ion-item>\r\n        <ion-icon name=\"stats-chart-outline\" slot=\"start\" [color]=\"iconColor\"></ion-icon>\r\n        <ion-label>{{myCorso['_DENOMINAZIONE_Livello']?myCorso['_DENOMINAZIONE_Livello']:'Tutti\r\n          i Livelli'}}</ion-label>\r\n      </ion-item>\r\n\r\n      <ion-item>\r\n        <ion-icon name=\"bookmark-outline\" slot=\"start\" [color]=\"iconColor\"></ion-icon>\r\n        <ion-label>{{myCorso['_DESCTOOLTIP_CategoriaEta']?myCorso['_DESCTOOLTIP_CategoriaEta']:'Per\r\n          tutte le età'}}</ion-label>\r\n      </ion-item>\r\n\r\n      <ion-item lines=\"none\" *ngIf=\"myCorso.TARGETSESSO\">\r\n        <ion-icon name=\"transgender-outline\" slot=\"start\" [color]=\"iconColor\"></ion-icon>\r\n        <ion-label>{{myCorso.TARGETSESSO | targetSesso}}</ion-label>\r\n      </ion-item>\r\n    </ion-item-group>\r\n\r\n    <!-- LOCATION -->\r\n\r\n    <ion-item-group>\r\n      <ion-item-divider color=\"light\">\r\n        <ion-label>\r\n          <h2>Dove</h2>\r\n        </ion-label>\r\n      </ion-item-divider>\r\n\r\n      <!-- COMUNE -->\r\n      <ion-item *ngIf=\"myLocation?.COMUNE\">\r\n        <ion-icon name=\"home-outline\" slot=\"start\" [color]=\"iconColor\"></ion-icon>\r\n        <ion-label>{{myLocation?.COMUNE}}</ion-label>\r\n      </ion-item>\r\n\r\n      <!-- INDIRIZZO -->\r\n      <ion-item *ngIf=\"myLocation?.INDIRIZZO\">\r\n        <ion-icon name=\"navigate-outline\" slot=\"start\" [color]=\"iconColor\">\r\n        </ion-icon>\r\n\r\n        <ion-label> {{myLocation?.INDIRIZZO}} </ion-label>\r\n      </ion-item>\r\n\r\n      <ion-item *ngIf=\"myLocation?.TELEFONO\">\r\n        <ion-icon name=\"call-outline\" slot=\"start\" [color]=\"iconColor\"></ion-icon>\r\n        <ion-label>{{myLocation?.TELEFONO}}</ion-label>\r\n      </ion-item>\r\n    </ion-item-group>\r\n  </ion-list>\r\n  <!-- END LOCATION -->\r\n</ion-content>\r\n\r\n<ion-footer>\r\n  <ion-button color=\"success\" fill=\"solid\" expand=\"block\" *ngIf=\"showIscrizioniButton()\" (click)=\"onClickIscrizione()\">\r\n    Iscriviti adesso\r\n  </ion-button>\r\n\r\n  <ion-text color=\"danger\" class=\"ion-text-center\" *ngIf=\"!showIscrizioniButton()\">\r\n    <h6>Contatta la struttura per iscriverti al corso</h6>\r\n  </ion-text>\r\n</ion-footer>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CoursePage } from './course.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CoursePage\r\n  },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CoursePageRoutingModule {}\r\n"]}