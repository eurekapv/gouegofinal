{"version":3,"sources":["webpack:///src/app/shared/pipes/pipes.module.ts","webpack:///src/app/shared/pipes/tipo-campo.pipe.ts","webpack:///src/app/shared/pipes/tipo-corso.pipe.ts","webpack:///src/app/shared/pipes/struttura-campo.pipe.ts","webpack:///src/app/shared/pipes/label-giorno.pipe.ts","webpack:///src/app/shared/pipes/ambito-news.pipe.ts","webpack:///src/app/shared/pipes/classe-documento.pipe.ts","webpack:///src/app/shared/pipes/stato-prenotazione.pipe.ts","webpack:///src/app/shared/pipes/settore-attivita.pipe.ts","webpack:///src/app/shared/pipes/stato-slot.pipe.ts","webpack:///src/app/shared/pipes/target-sesso.pipe.ts","webpack:///src/app/shared/pipes/giorni-previsti.pipe.ts","webpack:///src/app/shared/pipes/tipomasterdocumento.pipe.ts"],"names":["PipesModule","TipoCampoPipe","value","label","decode","TipoCorsoPipe","StrutturaCampoPipe","LabelGiornoPipe","AmbitoNewsPipe","ClasseDocumentoPipe","StatoPrenotazionePipe","SettoreAttivitaPipe","StatoSlotPipe","TargetSessoPipe","GiorniPrevistiPipe","language","strDay","arGiorni","valueReturn","smallVersion","indexDay","undefined","length","split","forEach","element","parseInt","getsmallLabel","getLabel","error","console","log","TipomasterdocumentoPipe"],"mappings":"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","file":"pages-location-course-listcourses-listcourses-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { LabelGiornoPipe } from './label-giorno.pipe';\r\nimport { StrutturaCampoPipe } from './struttura-campo.pipe';\r\nimport { TipoCampoPipe } from './tipo-campo.pipe';\r\nimport { SettoreAttivitaPipe } from './settore-attivita.pipe';\r\nimport { TipoCorsoPipe } from './tipo-corso.pipe';\r\nimport { TargetSessoPipe } from './target-sesso.pipe';\r\nimport { StatoSlotPipe } from './stato-slot.pipe';\r\nimport { StatoPrenotazionePipe } from './stato-prenotazione.pipe';\r\nimport { AmbitoNewsPipe } from './ambito-news.pipe';\r\nimport { GiorniPrevistiPipe } from './giorni-previsti.pipe';\r\nimport { ClasseDocumentoPipe } from './classe-documento.pipe';\r\nimport { TipomasterdocumentoPipe } from './tipomasterdocumento.pipe';\r\n\r\n@NgModule({\r\n    declarations: [LabelGiornoPipe, \r\n                   StrutturaCampoPipe, \r\n                   TipoCampoPipe, \r\n                   SettoreAttivitaPipe, \r\n                   TipoCorsoPipe, \r\n                   TargetSessoPipe, \r\n                   StatoSlotPipe, \r\n                   StatoPrenotazionePipe, \r\n                   AmbitoNewsPipe, \r\n                   GiorniPrevistiPipe, \r\n                   ClasseDocumentoPipe, \r\n                   TipomasterdocumentoPipe],\r\n    imports: [],\r\n    exports: [LabelGiornoPipe, \r\n              StrutturaCampoPipe, \r\n              TipoCampoPipe, \r\n              SettoreAttivitaPipe, \r\n              TipoCorsoPipe,\r\n              TargetSessoPipe,\r\n              StatoSlotPipe,\r\n              StatoPrenotazionePipe, \r\n              AmbitoNewsPipe,\r\n              GiorniPrevistiPipe,\r\n              ClasseDocumentoPipe, \r\n              TipomasterdocumentoPipe]\r\n})\r\nexport class PipesModule{}\r\n\r\n/**\r\n * Questo Modulo serve a includere tutti i Pipes definiti\r\n * Quindi per ogni nuovo pipe Ã¨ necessario importarlo qui \r\n * e specificarlo in declarations ed exports\r\n * \r\n * NON INCLUDERE NESSUN MODULO IN app.module.ts\r\n * \r\n * Quando serve un pipe usare la \r\n * page.module.ts (Il file modulo della pagina dove bisogna usare il pipe)\r\n * importare il modulo Pipes.Module.ts e aggiungere in ngModel imports PipesModule\r\n * \r\n * Non serve fare riferimento diretto al pipe che si vuole usare\r\n */","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, TipoCampo } from 'src/app/models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'tipoCampo'\r\n})\r\nexport class TipoCampoPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {\r\n    let label = '';\r\n\r\n    label = ValueList.decode(TipoCampo, value);\r\n    \r\n    return label;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, TipoCorso } from '../../models/valuelist.model';\r\n\r\n\r\n@Pipe({\r\n  name: 'tipoCorso'\r\n})\r\nexport class TipoCorsoPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {   \r\n    let label = '';\r\n\r\n    label = ValueList.decode(TipoCorso, value);\r\n    return label;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, StrutturaCampo } from '../../models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'strutturaCampo'\r\n})\r\nexport class StrutturaCampoPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {\r\n    let label = '';\r\n\r\n    label = ValueList.decode(StrutturaCampo, value);\r\n    return label;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'labelGiorno'\r\n})\r\nexport class LabelGiornoPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {\r\n    let label = '';\r\n    switch (value) {\r\n      case 1:\r\n        label = 'domenica';\r\n        break;\r\n      case 2:\r\n        label = 'lunedi\\'';\r\n        break;\r\n      case 3:\r\n        label = 'martedi\\'';\r\n        break;\r\n      case 4:\r\n        label = 'mercoledi\\'';\r\n        break;\r\n      case 5:\r\n        label = 'giovedi\\'';\r\n        break;        \r\n      case 6:\r\n        label = 'venerdi\\'';\r\n        break;        \r\n      case 7:\r\n        label = 'sabato';\r\n        break;                \r\n    }\r\n    \r\n    \r\n    return label;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, AmbitoNews } from '../../models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'ambitoNews'\r\n})\r\nexport class AmbitoNewsPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {\r\n    let label = '';\r\n\r\n    label = ValueList.decode(AmbitoNews, value);\r\n\r\n    return label;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ClasseDocumento } from 'src/app/models/tipodocumentazione.model';\r\nimport { ValueList } from '../../models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'classeDocumento'\r\n})\r\nexport class ClasseDocumentoPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {   \r\n    let label = '';\r\n\r\n    label = ValueList.decode(ClasseDocumento, value);\r\n    return label;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, StatoPrenotazione } from '../../models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'statoPrenotazione'\r\n})\r\nexport class StatoPrenotazionePipe implements PipeTransform {\r\n\r\n  transform(value: number): string {\r\n    let label = '';\r\n\r\n    label = ValueList.decode(StatoPrenotazione, value);\r\n\r\n    return label;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, SettoreAttivita } from '../../models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'settoreAttivita'\r\n})\r\nexport class SettoreAttivitaPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {\r\n    let label = '';\r\n\r\n    label = ValueList.decode(SettoreAttivita, value);\r\n\r\n    return label;\r\n  }\r\n\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, StatoSlot} from '../../models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'statoSlot'\r\n})\r\nexport class StatoSlotPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {   \r\n    let label = '';\r\n\r\n    label = ValueList.decode(StatoSlot, value);\r\n    return label;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, TargetSesso } from '../../models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'targetSesso'\r\n})\r\nexport class TargetSessoPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {   \r\n    let label = '';\r\n\r\n    label = ValueList.decode(TargetSesso, value);\r\n    return label;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Language } from 'src/app/models/valuelist.model';\r\nimport { Settimana } from 'src/app/models/settimana.model';\r\n\r\n@Pipe({\r\n  name: 'giorniPrevisti'\r\n})\r\nexport class GiorniPrevistiPipe implements PipeTransform {\r\n\r\n  //Il Pipe serve a trasformare una sequenza di numeri che rappresentano giorni\r\n  //ad esempio 2;3;4 nel rispettivo stringa Martedi, Mercoledi, Giovedi\r\n  //I giorni previsti sono in versione C# 1 = Dom, 2 Lun, etc\r\n  //Qui li passo in versione JS che sono zero-base\r\n\r\n  transform(value: string, language: Language, ...args: any[]): string {\r\n    let strDay = '';\r\n    let arGiorni = [];\r\n    let valueReturn = '';\r\n    let smallVersion = false;\r\n    let indexDay = 0;\r\n\r\n    if (value !== undefined) {\r\n      if (value.length !== 0) {\r\n        arGiorni = value.split(';');\r\n      }\r\n    }\r\n\r\n    if (arGiorni.length !== 0) {\r\n\r\n      //Se ho piÃ¹ di 3 giorni chiedo la versione short\r\n      if (arGiorni.length > 3) {\r\n        smallVersion = true;\r\n      }\r\n\r\n      //Ciclo sui giorni e li decodifico\r\n      arGiorni.forEach(element => {\r\n        try {\r\n            indexDay = parseInt(element);\r\n            indexDay--;\r\n\r\n            if (smallVersion) {\r\n              strDay = Settimana.getsmallLabel(indexDay, language);\r\n            }\r\n            else {\r\n              strDay = Settimana.getLabel(indexDay, language);\r\n            }\r\n    \r\n            \r\n            if (valueReturn.length !== 0)  {\r\n              valueReturn += ', ';\r\n            }\r\n\r\n            valueReturn += strDay;\r\n\r\n        } catch (error) {\r\n          console.log('Error Parse');\r\n        }\r\n        \r\n      \r\n      });\r\n    }\r\n\r\n    return valueReturn;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ValueList, TipoMasterDocumento } from 'src/app/models/valuelist.model';\r\n\r\n@Pipe({\r\n  name: 'tipomasterdocumento'\r\n})\r\nexport class TipomasterdocumentoPipe implements PipeTransform {\r\n\r\n  transform(value: number): string {   \r\n    let label = '';\r\n\r\n    label = ValueList.decode(TipoMasterDocumento, value);\r\n\r\n    return label;\r\n  }\r\n\r\n}\r\n"]}