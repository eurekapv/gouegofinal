{"version":3,"sources":["webpack:///src/app/pages/news/news.page.ts","webpack:///src/app/pages/news/news.page.html","webpack:///src/app/pages/news/news-routing.module.ts","webpack:///src/app/pages/news/news.module.ts"],"names":["NewsPage","startService","navController","loadingController","toastController","modalController","listNews","maxRecord","noNewsCard","getNoNews","requestNews","create","spinner","message","backdropDismiss","then","loading","present","areaSelected","areaSelectedValue","ID","data","dismiss","error","console","log","showMessage","subAreaSelected","unsubscribe","evento","target","complete","news","event","component","componentProps","myNews","modal","messaggio","toast","doRefresh","routes","path","NewsPageRoutingModule","forChild","NewsPageModule"],"mappings":"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","file":"pages-news-news-module-es5.js","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NewsEvento } from 'src/app/models/newsevento.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { StartService } from 'src/app/services/start.service';\r\nimport { Area } from 'src/app/models/area.model';\r\nimport { NavController, LoadingController, ToastController, ModalController } from '@ionic/angular';\r\nimport { NewsdetailPage } from 'src/app/pages/newsdetail/newsdetail.page'\r\n\r\n@Component({\r\n  selector: 'app-news',\r\n  templateUrl: './news.page.html',\r\n  styleUrls: ['./news.page.scss'],\r\n})\r\nexport class NewsPage implements OnInit, OnDestroy {\r\n\r\n  listNews: NewsEvento[] = [];\r\n  subListNews: Subscription;\r\n  areaSelected: Area; //Area Selezionata\r\n  subAreaSelected: Subscription; \r\n  maxRecord = 20; //Numero massimo di News richieste al server\r\n  noNewsCard: NewsEvento; //Card per quando non ci sono Eventi\r\n\r\n\r\n  constructor(private startService: StartService,\r\n              private navController: NavController,\r\n              private loadingController: LoadingController,\r\n              private toastController: ToastController,\r\n              private modalController: ModalController) { \r\n\r\n    //Recupero la card che dice che non ci sono eventi\r\n    this.noNewsCard = NewsEvento.getNoNews();\r\n\r\n    this.requestNews();\r\n\r\n\r\n    \r\n  }\r\n\r\n  /**\r\n   * Richiede al server le news\r\n   */\r\n  private requestNews() {\r\n    this.loadingController.create({\r\n      spinner: 'circular',\r\n      message: 'Caricamento',\r\n      backdropDismiss: true\r\n    }).then(loading => {\r\n      loading.present();\r\n      // Recupero subito l'area non Observable\r\n      this.areaSelected = this.startService.areaSelectedValue;\r\n      this.startService.requestNews(this.areaSelected.ID, this.maxRecord).then(data => {\r\n        this.listNews = data;\r\n        loading.dismiss();\r\n      }).catch(error => {\r\n        console.log(error);\r\n        loading.dismiss();\r\n        this.showMessage(\"Errore nel caricamento\");\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subAreaSelected) {\r\n      this.subAreaSelected.unsubscribe();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /** Eseguo un refresh delle news */\r\n  doRefresh(evento:any) {\r\n        \r\n    this.startService.requestNews(this.areaSelected.ID, this.maxRecord).then(data => {\r\n      this.listNews = data;\r\n      evento.target.complete();\r\n    }).catch(error => {\r\n      console.log(error);\r\n      evento.target.complete();\r\n      this.showMessage(\"Errore nel caricamento\");\r\n    });\r\n\r\n    \r\n  }\r\n\r\n  /**\r\n   * Apre in modalitÃ  modale la news\r\n   * @param news News da leggere\r\n   */\r\n  onClickNews(news: NewsEvento, event:any) {\r\n      // Le news Inserted sono finte, non posso aprirle\r\n        //this.navController.navigateForward(['/','news',news.ID]);\r\n      this.modalController.create({\r\n        component:NewsdetailPage,\r\n        componentProps:{myNews:news}\r\n      }).then(modal=>{\r\n        modal.present();\r\n      })\r\n      }\r\n  \r\n\r\n  showMessage(messaggio:string){\r\n    this.toastController.create({\r\n      message:messaggio\r\n    }).then(toast=>{\r\n      toast.present();\r\n    })\r\n  }\r\n}\r\n","<ion-header class=\"ion-no-border\">\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button  defaultHref=\"/\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>\r\n      News ed Eventi\r\n    </ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content >\r\n\r\n  <ion-refresher slot=\"fixed\" s (ionRefresh)=\"doRefresh($event)\">\r\n    <ion-refresher-content></ion-refresher-content>\r\n  </ion-refresher>\r\n\r\n    <!-- NEWS PRESENTI -->\r\n    <ion-grid *ngIf=\"listNews.length != 0 \">\r\n      <ion-row>\r\n        <ion-col *ngFor=\"let news of listNews\">\r\n          <app-news-eventi [myNews]=\"news\" (clickNews)=\"onClickNews(news,$event)\"></app-news-eventi>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  \r\n    <!-- NEWS NON PRESENTI -->\r\n    <div class=\"nofind-cnt ion-padding\" *ngIf=\"listNews.length === 0 \">\r\n      <ion-label class=\"ion-padding-horizontal\">Nessun evento in programma</ion-label>\r\n      <ion-label class=\"ion-padding-horizontal\">Torna a trovarci per scoprire i prossimi eventi</ion-label>\r\n    </div>\r\n\r\n\r\n</ion-content>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { NewsPage } from './news.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NewsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class NewsPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { NewsPageRoutingModule } from './news-routing.module';\r\n\r\nimport { NewsPage } from './news.page';\r\n\r\nimport { NewsdetailPage } from 'src/app/pages/newsdetail/newsdetail.page';\r\nimport { SharedComponentsModule } from 'src/app/shared/components/shared-components.module';\r\nimport { NewsdetailPageModule } from '../newsdetail/newsdetail.module';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    NewsPageRoutingModule,\r\n    \r\n    NewsdetailPageModule,\r\n    SharedComponentsModule\r\n  ],\r\n  declarations: [NewsPage],\r\n  entryComponents:[NewsdetailPage]\r\n\r\n  \r\n})\r\nexport class NewsPageModule {}\r\n"]}